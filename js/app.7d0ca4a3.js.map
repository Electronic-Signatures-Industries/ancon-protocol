{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgFileTx","path","content","time","contentType","did","from","MsgFileTx","string","uint64","String","baseMsgMetadataTx","description","image","owner","parent","sources","links","verifiedCredentialRef","MsgMetadataTx","v","e","map","baseMsgMetadata","creator","MsgMetadata","baseMsgFile","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","Validator","fork","ldelim","proposer","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAllBalances","method","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSend","msgMultiSend","queryClient","baseBalance","Balance","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryBalance","options","subscribe","all","QueryAllBalances","pagination","nextKey","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","msg","sendMsgMultiSend","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","MsgCreateVestingAccount","msgCreateVestingAccount","V1Order","V1State","sendMsgCreateVestingAccount","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","V1Beta1ProposalStatus","V1Beta1VoteOption","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","V1Beta1BondStatus","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","queryResource","msgMetadata","msgFile","Resource","getResource","QueryResource","sendMsgMetadata","sendMsgFile","CosmosCosmosSdkCosmosBankV1Beta1","load","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosStakingV1Beta1","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.7d0ca4a3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource\n         */\n        this.queryResource = (query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}