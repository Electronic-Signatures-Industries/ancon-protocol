{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?1c8a"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgChangeOwner","creator","MsgChangeOwner","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgAddDelegate","MsgAddDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","MsgSetAttribute","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgNonce","delegates","MsgNonce","baseMsgMetadata","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegates","method","queryReadDelegate","id","queryReadNonces","queryReadNonce","queryIdentifyOwner","address","queryGetAttributes","queryReadFile","cid","queryResource","queryRead","queryReadWithPath","types","MissingWalletError","Error","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSetAttribute","typeUrl","msgFile","msgAddDelegate","msgChangeOwner","msgNonce","msgMetadata","msgRevokeDelegate","queryClient","baseQueryOwnersResponse","QueryOwnersResponse","_","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadWithPath","ReadFile","Read","IdentifyOwner","GetAttributes","Resource","ReadNonces","ReadNonce","ReadDelegate","ReadDelegates","_Structure","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getIdentifyOwner","getGetAttributes","getResource","getReadNonces","getReadNonce","getReadDelegate","getReadDelegates","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryIdentifyOwner","QueryGetAttributes","QueryResource","QueryReadNonces","QueryReadNonce","QueryReadDelegate","QueryReadDelegates","sendMsgSetAttribute","msg","sendMsgFile","sendMsgAddDelegate","sendMsgChangeOwner","sendMsgNonce","sendMsgMetadata","sendMsgRevokeDelegate","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount"],"mappings":"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","file":"js/app.3fd66526.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgChangeOwner = { creator: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = {};\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegate = { creator: '' };\nexport const MsgAddDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAddDelegateResponse = {};\nexport const MsgAddDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAddDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAddDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { creator: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgNonce = { creator: '', delegates: '' };\nexport const MsgNonce = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.delegates !== '') {\n            writer.uint32(18).string(message.delegates);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgNonce };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.delegates = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgNonce };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.delegates !== undefined && object.delegates !== null) {\n            message.delegates = String(object.delegates);\n        }\n        else {\n            message.delegates = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.delegates !== undefined && (obj.delegates = message.delegates);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgNonce };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.delegates !== undefined && object.delegates !== null) {\n            message.delegates = object.delegates;\n        }\n        else {\n            message.delegates = '';\n        }\n        return message;\n    }\n};\nconst baseMsgNonceResponse = {};\nexport const MsgNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgNonceResponse };\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Nonce(request) {\n        const data = MsgNonce.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Nonce', data);\n        return promise.then((data) => MsgNonceResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    AddDelegate(request) {\n        const data = MsgAddDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'AddDelegate', data);\n        return promise.then((data) => MsgAddDelegateResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    SetAttribute(request) {\n        const data = MsgSetAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'SetAttribute', data);\n        return promise.then((data) => MsgSetAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegates\n         * @summary Queries a list of nonce items.\n         * @request GET:/ancon/didregistry/delegates\n         */\n        this.queryReadDelegates = (query, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadNonces\n         * @summary Queries a list of nonce items.\n         * @request GET:/ancon/didregistry/nonces\n         */\n        this.queryReadNonces = (query, params = {}) => this.request({\n            path: `/ancon/didregistry/nonces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadNonce\n         * @summary Queries a list of nonce items.\n         * @request GET:/ancon/didregistry/nonces/{id}\n         */\n        this.queryReadNonce = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/nonces/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSetAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgAddDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgNonce } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", MsgSetAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", MsgAddDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgNonce\", MsgNonce],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSetAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSetAttribute\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgAddDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgAddDelegate\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgNonce: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgNonce\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryGetDelegatesRequest = { id: '' };\nexport const QueryGetDelegatesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegatesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegatesRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegatesRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegatesResponse = {};\nexport const QueryGetDelegatesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegatesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegatesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegatesResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadNonces(request) {\n        const data = QueryNonceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadNonces', data);\n        return promise.then((data) => QueryNonceResponse.decode(new Reader(data)));\n    }\n    ReadNonce(request) {\n        const data = QueryNonceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadNonce', data);\n        return promise.then((data) => QueryNonceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegatesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegatesResponse.decode(new Reader(data)));\n    }\n    ReadDelegates(request) {\n        const data = QueryGetDelegatesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegates', data);\n        return promise.then((data) => QueryGetDelegatesResponse.decode(new Reader(data)));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { QueryOwnersResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadNonces: {},\n        ReadNonce: {},\n        ReadDelegate: {},\n        ReadDelegates: {},\n        _Structure: {\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadNonces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadNonces[JSON.stringify(params)] ?? {};\n        },\n        getReadNonce: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadNonce[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegates[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadNonces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadNonces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryReadNonces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ReadNonces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadNonces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadNonces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadNonces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadNonce({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadNonce(key.id)).data;\n                commit('QUERY', { query: 'ReadNonce', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadNonce', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadNonce']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadNonce', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryReadDelegates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ReadDelegates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSetAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAddDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgNonce({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgNonce(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgNonce:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgNonce:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSetAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAddDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAddDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAddDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgNonce({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgNonce(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgNonce:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgNonce:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\""],"sourceRoot":""}