{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","encode","message","writer","Writer","uint32","string","bool","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","Boolean","toJSON","obj","fromPartial","baseMsgTransferNFT","denomId","uri","recipient","MsgTransferNFT","baseMsgCreateDIDOwner","creator","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","uint64","longToNumber","Number","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryReadFile","cid","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgEditNFT","typeUrl","msgChangeOwner","msgTransferNFT","msgGrantAttribute","msgBurnNFT","msgRevokeDelegate","msgIssueDenom","msgMintNFT","msgMetadata","msgRevokeAttribute","msgFile","msgGrantDelegate","msgTransferDenom","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadWithPath","ReadFile","Read","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","_Structure","DIDOwner","Delegate","Change","Attribute","BaseNFT","IDCollection","QuerySupplyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryIdentifyOwner","QueryGetAttributes","QueryResource","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgEditNFT","msg","sendMsgChangeOwner","sendMsgTransferNFT","sendMsgGrantAttribute","sendMsgBurnNFT","sendMsgRevokeDelegate","sendMsgIssueDenom","sendMsgMintNFT","sendMsgMetadata","sendMsgRevokeAttribute","sendMsgFile","sendMsgGrantDelegate","sendMsgTransferDenom","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseDIDOwner","didAncon","baseDelegate","baseChange","previousChange","baseAttribute","baseQuerySupplyResponse","baseQueryNonceRequest","baseQueryNonceResponse","_","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.4478524e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QuerySupplyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QuerySupplyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, MsgCreateDIDOwner, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QuerySupplyResponse: getStructure(QuerySupplyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQuerySupplyResponse = { amount: 0 };\nexport const QuerySupplyResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.amount !== 0) {\n            writer.uint32(8).uint64(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQuerySupplyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQuerySupplyResponse };\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadFile(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadFile', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    Read(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Read', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}