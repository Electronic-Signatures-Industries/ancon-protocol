{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/mintswap/packet.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/google/protobuf/any.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/mintswap/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/ibc/core/client/v1/client.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","longToNumber","Boolean","Number","baseMsgMintSwapResponse","id","MsgMintSwapResponse","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgInitiateSwapResponse","relayTo","voucher","MsgInitiateSwapResponse","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","baseMsgFileResponse","MsgFileResponse","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMintswapPacketData","MintswapPacketData","MintSwapData","fork","ldelim","baseMintSwapData","tokenName","tokenSymbol","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","ContentType","computed","hasWallet","this","$store","hasModule","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgChangeOwner","typeUrl","msgMintSwap","msgRoyaltyInfo","msgBurnNFT","msgUpdateDid","msgRevokeAttribute","msgGrantDelegate","msgMintTrustedContent","msgTransferNFT","msgTransferDenom","msgInitiateSwap","msgMintTrustedResource","msgRevokeDid","msgClaimSwap","msgRevokeDelegate","msgEditNFT","msgGrantAttribute","msgCreateDid","msgMetadata","msgMintNFT","msgFile","msgIssueDenom","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","_Structure","Voucher","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgChangeOwner","msg","sendMsgMintSwap","sendMsgRoyaltyInfo","sendMsgBurnNFT","sendMsgUpdateDid","sendMsgRevokeAttribute","sendMsgGrantDelegate","sendMsgMintTrustedContent","sendMsgTransferNFT","sendMsgTransferDenom","sendMsgInitiateSwap","sendMsgMintTrustedResource","sendMsgRevokeDid","sendMsgClaimSwap","sendMsgRevokeDelegate","sendMsgEditNFT","sendMsgGrantAttribute","sendMsgCreateDid","sendMsgMetadata","sendMsgMintNFT","sendMsgFile","sendMsgIssueDenom","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","baseOwner","idCollections","baseCollection","denom","nfts","baseAny","Any","baseRoyaltyInfo","updateCount","metadataUri","baseVoucher","didRecipient","baseDIDOwner","didAncon","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse","sourcePort","sourceChannel","timeoutTimestamp","timeoutHeight","Height","baseHeight","revisionNumber","revisionHeight"],"mappings":"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","file":"js/app.60c30617.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = { id: 0 };\nexport const MsgMintSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(34).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataRef = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.mintswap';\nconst baseMintswapPacketData = {};\nexport const MintswapPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            MintSwapData.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMintswapPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = MintSwapData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMintswapPacketData };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = MintSwapData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data ? MintSwapData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMintswapPacketData };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = MintSwapData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMintSwapData = { sender: '', metadataRef: '', tokenName: '', tokenSymbol: '', recipient: '', didOwner: '', price: 0 };\nexport const MintSwapData = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.tokenName !== '') {\n            writer.uint32(26).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(34).string(message.tokenSymbol);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMintSwapData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.tokenName = reader.string();\n                    break;\n                case 4:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMintSwapData };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMintSwapData };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nexport default /*#__PURE__*/exportComponent(script, [['render',render]])","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nexport default /*#__PURE__*/exportComponent(script, [['render',render]])","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgMintSwap } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintSwap\", MsgMintSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgMintSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintSwap\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Voucher } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgMintSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileResponse } from \"./module/types/anconprotocol/tx\";\nexport { Voucher, DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgMintSwapResponse, MsgInitiateSwapResponse, MsgClaimSwapResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse, MsgFileResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            Voucher: getStructure(Voucher.fromPartial({})),\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgMintSwapResponse: getStructure(MsgMintSwapResponse.fromPartial({})),\n            MsgInitiateSwapResponse: getStructure(MsgInitiateSwapResponse.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileResponse: getStructure(MsgFileResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title mintswap/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMintSwap } from \"./types/mintswap/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.mintswap.MsgMintSwap\", MsgMintSwap],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMintSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.mintswap.MsgMintSwap\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MintswapPacketData } from \"./module/types/mintswap/packet\";\nimport { MintSwapData } from \"./module/types/mintswap/packet\";\nexport { MintswapPacketData, MintSwapData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            MintswapPacketData: getStructure(MintswapPacketData.fromPartial({})),\n            MintSwapData: getStructure(MintSwapData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.mintswap initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgMintSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMintSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap, 'ElectronicSignaturesIndustries.anconprotocol.mintswap'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nexport default /*#__PURE__*/exportComponent(script, [['render',render]])","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nexport default /*#__PURE__*/exportComponent(script, [['render',render]])","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nexport default /*#__PURE__*/exportComponent(script, [['render',render]])","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseVoucher = { tokenName: '', tokenSymbol: '', uri: '', owner: '', didRecipient: '', price: 0, r: '', s: '', v: 0 };\nexport const Voucher = {\n    encode(message, writer = Writer.create()) {\n        if (message.tokenName !== '') {\n            writer.uint32(10).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(18).string(message.tokenSymbol);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(42).string(message.didRecipient);\n        }\n        if (message.price !== 0) {\n            writer.uint32(48).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(58).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(66).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(72).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoucher };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tokenName = reader.string();\n                    break;\n                case 2:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.didRecipient = reader.string();\n                    break;\n                case 6:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.r = reader.string();\n                    break;\n                case 8:\n                    message.s = reader.string();\n                    break;\n                case 9:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(48).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDidWebResponse = {};\nexport const QueryDidWebResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidResponse = {};\nexport const QueryGetDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryDidWebResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryGetDidResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Height } from '../ibc/core/client/v1/client';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.mintswap';\nconst baseMsgMintSwap = {\n    sourcePort: '',\n    sourceChannel: '',\n    metadataRef: '',\n    sender: '',\n    receiver: '',\n    tokenName: '',\n    tokenSymbol: '',\n    didOwner: '',\n    price: 0,\n    timeoutTimestamp: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.tokenName !== '') {\n            writer.uint32(50).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(58).string(message.tokenSymbol);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(66).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(72).uint64(message.price);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(88).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.tokenName = reader.string();\n                    break;\n                case 7:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 8:\n                    message.didOwner = reader.string();\n                    break;\n                case 9:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 10:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = {};\nexport const MsgMintSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintSwapResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    MintSwap(request) {\n        const data = MsgMintSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.mintswap.Msg', 'MintSwap', data);\n        return promise.then((data) => MsgMintSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', clientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined && (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}