{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/google/protobuf/duration.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/htlc.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgCreateHTLC","sender","to","receiverOnOtherChain","senderOnOtherChain","hashLock","timestamp","timeLock","transfer","MsgCreateHTLC","encode","message","writer","Writer","uint32","string","amount","v","Coin","fork","ldelim","uint64","bool","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","String","e","Number","Boolean","toJSON","obj","map","fromPartial","baseMsgClaimHTLC","id","secret","MsgClaimHTLC","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgMetadata","creator","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseCoin","denom","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","AnconprotocolHTLCState","AnconprotocolSwapDirection","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryResource","cid","method","queryReadFile","queryGetHtlc","queryParams","queryAssetSupplies","queryAssetSupply","queryRead","queryReadWithPath","queryCollection","denomId","querySupply","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","address","signAndBroadcast","msgs","fee","memo","msgMetadata","typeUrl","msgFile","msgClaimHTLC","msgCreateHTLC","queryClient","baseBaseNFT","uri","BaseNFT","baseDenom","schema","symbol","mintRestricted","updateRestricted","Denom","baseIDCollection","tokenIds","IDCollection","baseOwner","Owner","idCollections","baseCollection","Collection","nfts","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadWithPath","ReadFile","Read","GetHtlc","AssetSupply","AssetSupplies","Params","Resource","Supply","Denoms","GetNft","_Structure","HTLC","AssetParam","SupplyLimit","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getGetHtlc","getAssetSupply","getAssetSupplies","getParams","getResource","getSupply","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryGetHtlc","QueryAssetSupply","QueryAssetSupplies","QueryParams","QueryResource","QuerySupply","denom_id","QueryOwner","QueryCollection","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgMetadata","msg","sendMsgFile","sendMsgClaimHTLC","sendMsgCreateHTLC","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","baseDuration","seconds","nanos","Duration","int64","int32","HTLCState","SwapDirection","hTLCStateFromJSON","HTLC_STATE_OPEN","HTLC_STATE_COMPLETED","HTLC_STATE_REFUNDED","UNRECOGNIZED","hTLCStateToJSON","swapDirectionFromJSON","NONE","INCOMING","OUTGOING","swapDirectionToJSON","baseHTLC","expirationHeight","closedBlock","direction","baseAssetSupply","incomingSupply","outgoingSupply","currentSupply","timeLimitedCurrentSupply","timeElapsed","baseParams","assetParams","baseAssetParam","active","deputyAddress","fixedFee","minSwapAmount","maxSwapAmount","minBlockLock","maxBlockLock","supplyLimit","baseSupplyLimit","limit","timeLimited","timeBasedLimit","timePeriod"],"mappings":"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","file":"js/app.d2b823ff.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgCreateHTLC = {\n    sender: '',\n    to: '',\n    receiverOnOtherChain: '',\n    senderOnOtherChain: '',\n    hashLock: '',\n    timestamp: 0,\n    timeLock: 0,\n    transfer: false\n};\nexport const MsgCreateHTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.to !== '') {\n            writer.uint32(18).string(message.to);\n        }\n        if (message.receiverOnOtherChain !== '') {\n            writer.uint32(26).string(message.receiverOnOtherChain);\n        }\n        if (message.senderOnOtherChain !== '') {\n            writer.uint32(34).string(message.senderOnOtherChain);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.hashLock !== '') {\n            writer.uint32(50).string(message.hashLock);\n        }\n        if (message.timestamp !== 0) {\n            writer.uint32(56).uint64(message.timestamp);\n        }\n        if (message.timeLock !== 0) {\n            writer.uint32(64).uint64(message.timeLock);\n        }\n        if (message.transfer === true) {\n            writer.uint32(72).bool(message.transfer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.to = reader.string();\n                    break;\n                case 3:\n                    message.receiverOnOtherChain = reader.string();\n                    break;\n                case 4:\n                    message.senderOnOtherChain = reader.string();\n                    break;\n                case 5:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.hashLock = reader.string();\n                    break;\n                case 7:\n                    message.timestamp = longToNumber(reader.uint64());\n                    break;\n                case 8:\n                    message.timeLock = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.transfer = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = String(object.receiverOnOtherChain);\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = String(object.senderOnOtherChain);\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = String(object.hashLock);\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.timeLock !== undefined && object.timeLock !== null) {\n            message.timeLock = Number(object.timeLock);\n        }\n        else {\n            message.timeLock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = Boolean(object.transfer);\n        }\n        else {\n            message.transfer = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.to !== undefined && (obj.to = message.to);\n        message.receiverOnOtherChain !== undefined && (obj.receiverOnOtherChain = message.receiverOnOtherChain);\n        message.senderOnOtherChain !== undefined && (obj.senderOnOtherChain = message.senderOnOtherChain);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.hashLock !== undefined && (obj.hashLock = message.hashLock);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.timeLock !== undefined && (obj.timeLock = message.timeLock);\n        message.transfer !== undefined && (obj.transfer = message.transfer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateHTLC };\n        message.amount = [];\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = object.receiverOnOtherChain;\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = object.senderOnOtherChain;\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = object.hashLock;\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.timeLock !== undefined && object.timeLock !== null) {\n            message.timeLock = object.timeLock;\n        }\n        else {\n            message.timeLock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = object.transfer;\n        }\n        else {\n            message.transfer = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateHTLCResponse = { id: '' };\nexport const MsgCreateHTLCResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateHTLCResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateHTLCResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateHTLCResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimHTLC = { sender: '', id: '', secret: '' };\nexport const MsgClaimHTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.id !== '') {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.secret !== '') {\n            writer.uint32(26).string(message.secret);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimHTLC };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.secret = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimHTLC };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = String(object.secret);\n        }\n        else {\n            message.secret = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.id !== undefined && (obj.id = message.id);\n        message.secret !== undefined && (obj.secret = message.secret);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimHTLC };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = object.secret;\n        }\n        else {\n            message.secret = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimHTLCResponse = {};\nexport const MsgClaimHTLCResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimHTLCResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgClaimHTLCResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgClaimHTLCResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    CreateHTLC(request) {\n        const data = MsgCreateHTLC.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateHTLC', data);\n        return promise.then((data) => MsgCreateHTLCResponse.decode(new Reader(data)));\n    }\n    ClaimHTLC(request) {\n        const data = MsgClaimHTLC.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimHTLC', data);\n        return promise.then((data) => MsgClaimHTLCResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - HTLC_STATE_OPEN: HTLC_STATE_OPEN defines an open state.\n - HTLC_STATE_COMPLETED: HTLC_STATE_COMPLETED defines a completed state.\n - HTLC_STATE_REFUNDED: HTLC_STATE_REFUNDED defines a refunded state.\n*/\nexport var AnconprotocolHTLCState;\n(function (AnconprotocolHTLCState) {\n    AnconprotocolHTLCState[\"HTLC_STATE_OPEN\"] = \"HTLC_STATE_OPEN\";\n    AnconprotocolHTLCState[\"HTLC_STATE_COMPLETED\"] = \"HTLC_STATE_COMPLETED\";\n    AnconprotocolHTLCState[\"HTLC_STATE_REFUNDED\"] = \"HTLC_STATE_REFUNDED\";\n})(AnconprotocolHTLCState || (AnconprotocolHTLCState = {}));\n/**\n* - NONE: NONE defines an htlt none direction.\n - INCOMING: INCOMING defines an htlt incoming direction.\n - OUTGOING: OUTGOING defines an htlt outgoing direction.\n*/\nexport var AnconprotocolSwapDirection;\n(function (AnconprotocolSwapDirection) {\n    AnconprotocolSwapDirection[\"NONE\"] = \"NONE\";\n    AnconprotocolSwapDirection[\"INCOMING\"] = \"INCOMING\";\n    AnconprotocolSwapDirection[\"OUTGOING\"] = \"OUTGOING\";\n})(AnconprotocolSwapDirection || (AnconprotocolSwapDirection = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetHtlc\n         * @summary HTLC queries the HTLC by the specified hash lock\n         * @request GET:/ancon/htlc/htlcs/{id}\n         */\n        this.queryGetHtlc = (id, params = {}) => this.request({\n            path: `/ancon/htlc/htlcs/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the htlc parameters\n         * @request GET:/ancon/htlc/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ancon/htlc/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAssetSupplies\n         * @summary AssetSupplies queries the supplies of all assets\n         * @request GET:/ancon/htlc/supplies\n         */\n        this.queryAssetSupplies = (params = {}) => this.request({\n            path: `/ancon/htlc/supplies`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAssetSupply\n         * @summary AssetSupply queries the supply of an asset\n         * @request GET:/ancon/htlc/supplies/{denom}\n         */\n        this.queryAssetSupply = (denom, params = {}) => this.request({\n            path: `/ancon/htlc/supplies/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/irismod/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/irismod/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupply\n         * @summary Supply queries the total supply of a given denom or owner\n         * @request GET:/irismod/nft/collections/{denomId}/supply\n         */\n        this.querySupply = (denomId, query, params = {}) => this.request({\n            path: `/irismod/nft/collections/${denomId}/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/irismod/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/irismod/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/irismod/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/irismod/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/irismod/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/irismod/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/irismod/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/irismod/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgClaimHTLC } from \"./types/anconprotocol/tx\";\nimport { MsgCreateHTLC } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimHTLC\", MsgClaimHTLC],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateHTLC\", MsgCreateHTLC],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgClaimHTLC: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimHTLC\", value: data }),\n        msgCreateHTLC: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateHTLC\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HTLC } from \"./module/types/anconprotocol/htlc\";\nimport { AssetSupply } from \"./module/types/anconprotocol/htlc\";\nimport { Params } from \"./module/types/anconprotocol/htlc\";\nimport { AssetParam } from \"./module/types/anconprotocol/htlc\";\nimport { SupplyLimit } from \"./module/types/anconprotocol/htlc\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { HTLC, AssetSupply, Params, AssetParam, SupplyLimit, BaseNFT, Denom, IDCollection, Owner, Collection, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        GetHtlc: {},\n        AssetSupply: {},\n        AssetSupplies: {},\n        Params: {},\n        Resource: {},\n        Supply: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            HTLC: getStructure(HTLC.fromPartial({})),\n            AssetSupply: getStructure(AssetSupply.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            AssetParam: getStructure(AssetParam.fromPartial({})),\n            SupplyLimit: getStructure(SupplyLimit.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getGetHtlc: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetHtlc[JSON.stringify(params)] ?? {};\n        },\n        getAssetSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AssetSupply[JSON.stringify(params)] ?? {};\n        },\n        getAssetSupplies: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AssetSupplies[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Supply[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetHtlc({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetHtlc(key.id)).data;\n                commit('QUERY', { query: 'GetHtlc', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetHtlc', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetHtlc']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetHtlc', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAssetSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAssetSupply(key.denom)).data;\n                commit('QUERY', { query: 'AssetSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAssetSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAssetSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAssetSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAssetSupplies({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAssetSupplies()).data;\n                commit('QUERY', { query: 'AssetSupplies', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAssetSupplies', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAssetSupplies']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAssetSupplies', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupply(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySupply(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Supply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimHTLC({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimHTLC(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateHTLC({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateHTLC(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimHTLC({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimHTLC(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimHTLC:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateHTLC({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateHTLC(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateHTLC:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nimport { Duration } from '../google/protobuf/duration';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\n/** HTLCState defines the state of an HTLC */\nexport var HTLCState;\n(function (HTLCState) {\n    /** HTLC_STATE_OPEN - HTLC_STATE_OPEN defines an open state. */\n    HTLCState[HTLCState[\"HTLC_STATE_OPEN\"] = 0] = \"HTLC_STATE_OPEN\";\n    /** HTLC_STATE_COMPLETED - HTLC_STATE_COMPLETED defines a completed state. */\n    HTLCState[HTLCState[\"HTLC_STATE_COMPLETED\"] = 1] = \"HTLC_STATE_COMPLETED\";\n    /** HTLC_STATE_REFUNDED - HTLC_STATE_REFUNDED defines a refunded state. */\n    HTLCState[HTLCState[\"HTLC_STATE_REFUNDED\"] = 2] = \"HTLC_STATE_REFUNDED\";\n    HTLCState[HTLCState[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HTLCState || (HTLCState = {}));\nexport function hTLCStateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'HTLC_STATE_OPEN':\n            return HTLCState.HTLC_STATE_OPEN;\n        case 1:\n        case 'HTLC_STATE_COMPLETED':\n            return HTLCState.HTLC_STATE_COMPLETED;\n        case 2:\n        case 'HTLC_STATE_REFUNDED':\n            return HTLCState.HTLC_STATE_REFUNDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HTLCState.UNRECOGNIZED;\n    }\n}\nexport function hTLCStateToJSON(object) {\n    switch (object) {\n        case HTLCState.HTLC_STATE_OPEN:\n            return 'HTLC_STATE_OPEN';\n        case HTLCState.HTLC_STATE_COMPLETED:\n            return 'HTLC_STATE_COMPLETED';\n        case HTLCState.HTLC_STATE_REFUNDED:\n            return 'HTLC_STATE_REFUNDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SwapDirection defines the direction of an HTLT */\nexport var SwapDirection;\n(function (SwapDirection) {\n    /** NONE - NONE defines an htlt none direction. */\n    SwapDirection[SwapDirection[\"NONE\"] = 0] = \"NONE\";\n    /** INCOMING - INCOMING defines an htlt incoming direction. */\n    SwapDirection[SwapDirection[\"INCOMING\"] = 1] = \"INCOMING\";\n    /** OUTGOING - OUTGOING defines an htlt outgoing direction. */\n    SwapDirection[SwapDirection[\"OUTGOING\"] = 2] = \"OUTGOING\";\n    SwapDirection[SwapDirection[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SwapDirection || (SwapDirection = {}));\nexport function swapDirectionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NONE':\n            return SwapDirection.NONE;\n        case 1:\n        case 'INCOMING':\n            return SwapDirection.INCOMING;\n        case 2:\n        case 'OUTGOING':\n            return SwapDirection.OUTGOING;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SwapDirection.UNRECOGNIZED;\n    }\n}\nexport function swapDirectionToJSON(object) {\n    switch (object) {\n        case SwapDirection.NONE:\n            return 'NONE';\n        case SwapDirection.INCOMING:\n            return 'INCOMING';\n        case SwapDirection.OUTGOING:\n            return 'OUTGOING';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHTLC = {\n    id: '',\n    sender: '',\n    to: '',\n    receiverOnOtherChain: '',\n    senderOnOtherChain: '',\n    hashLock: '',\n    secret: '',\n    timestamp: 0,\n    expirationHeight: 0,\n    state: 0,\n    closedBlock: 0,\n    transfer: false,\n    direction: 0\n};\nexport const HTLC = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.to !== '') {\n            writer.uint32(26).string(message.to);\n        }\n        if (message.receiverOnOtherChain !== '') {\n            writer.uint32(34).string(message.receiverOnOtherChain);\n        }\n        if (message.senderOnOtherChain !== '') {\n            writer.uint32(42).string(message.senderOnOtherChain);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.hashLock !== '') {\n            writer.uint32(58).string(message.hashLock);\n        }\n        if (message.secret !== '') {\n            writer.uint32(66).string(message.secret);\n        }\n        if (message.timestamp !== 0) {\n            writer.uint32(72).uint64(message.timestamp);\n        }\n        if (message.expirationHeight !== 0) {\n            writer.uint32(80).uint64(message.expirationHeight);\n        }\n        if (message.state !== 0) {\n            writer.uint32(88).int32(message.state);\n        }\n        if (message.closedBlock !== 0) {\n            writer.uint32(96).uint64(message.closedBlock);\n        }\n        if (message.transfer === true) {\n            writer.uint32(104).bool(message.transfer);\n        }\n        if (message.direction !== 0) {\n            writer.uint32(112).int32(message.direction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHTLC };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.to = reader.string();\n                    break;\n                case 4:\n                    message.receiverOnOtherChain = reader.string();\n                    break;\n                case 5:\n                    message.senderOnOtherChain = reader.string();\n                    break;\n                case 6:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.hashLock = reader.string();\n                    break;\n                case 8:\n                    message.secret = reader.string();\n                    break;\n                case 9:\n                    message.timestamp = longToNumber(reader.uint64());\n                    break;\n                case 10:\n                    message.expirationHeight = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.state = reader.int32();\n                    break;\n                case 12:\n                    message.closedBlock = longToNumber(reader.uint64());\n                    break;\n                case 13:\n                    message.transfer = reader.bool();\n                    break;\n                case 14:\n                    message.direction = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHTLC };\n        message.amount = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = String(object.receiverOnOtherChain);\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = String(object.senderOnOtherChain);\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = String(object.hashLock);\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = String(object.secret);\n        }\n        else {\n            message.secret = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = Number(object.timestamp);\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.expirationHeight !== undefined && object.expirationHeight !== null) {\n            message.expirationHeight = Number(object.expirationHeight);\n        }\n        else {\n            message.expirationHeight = 0;\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = hTLCStateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.closedBlock !== undefined && object.closedBlock !== null) {\n            message.closedBlock = Number(object.closedBlock);\n        }\n        else {\n            message.closedBlock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = Boolean(object.transfer);\n        }\n        else {\n            message.transfer = false;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = swapDirectionFromJSON(object.direction);\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.to !== undefined && (obj.to = message.to);\n        message.receiverOnOtherChain !== undefined && (obj.receiverOnOtherChain = message.receiverOnOtherChain);\n        message.senderOnOtherChain !== undefined && (obj.senderOnOtherChain = message.senderOnOtherChain);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.hashLock !== undefined && (obj.hashLock = message.hashLock);\n        message.secret !== undefined && (obj.secret = message.secret);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.expirationHeight !== undefined && (obj.expirationHeight = message.expirationHeight);\n        message.state !== undefined && (obj.state = hTLCStateToJSON(message.state));\n        message.closedBlock !== undefined && (obj.closedBlock = message.closedBlock);\n        message.transfer !== undefined && (obj.transfer = message.transfer);\n        message.direction !== undefined && (obj.direction = swapDirectionToJSON(message.direction));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHTLC };\n        message.amount = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.receiverOnOtherChain !== undefined && object.receiverOnOtherChain !== null) {\n            message.receiverOnOtherChain = object.receiverOnOtherChain;\n        }\n        else {\n            message.receiverOnOtherChain = '';\n        }\n        if (object.senderOnOtherChain !== undefined && object.senderOnOtherChain !== null) {\n            message.senderOnOtherChain = object.senderOnOtherChain;\n        }\n        else {\n            message.senderOnOtherChain = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.hashLock !== undefined && object.hashLock !== null) {\n            message.hashLock = object.hashLock;\n        }\n        else {\n            message.hashLock = '';\n        }\n        if (object.secret !== undefined && object.secret !== null) {\n            message.secret = object.secret;\n        }\n        else {\n            message.secret = '';\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = 0;\n        }\n        if (object.expirationHeight !== undefined && object.expirationHeight !== null) {\n            message.expirationHeight = object.expirationHeight;\n        }\n        else {\n            message.expirationHeight = 0;\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.closedBlock !== undefined && object.closedBlock !== null) {\n            message.closedBlock = object.closedBlock;\n        }\n        else {\n            message.closedBlock = 0;\n        }\n        if (object.transfer !== undefined && object.transfer !== null) {\n            message.transfer = object.transfer;\n        }\n        else {\n            message.transfer = false;\n        }\n        if (object.direction !== undefined && object.direction !== null) {\n            message.direction = object.direction;\n        }\n        else {\n            message.direction = 0;\n        }\n        return message;\n    }\n};\nconst baseAssetSupply = {};\nexport const AssetSupply = {\n    encode(message, writer = Writer.create()) {\n        if (message.incomingSupply !== undefined) {\n            Coin.encode(message.incomingSupply, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.outgoingSupply !== undefined) {\n            Coin.encode(message.outgoingSupply, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.currentSupply !== undefined) {\n            Coin.encode(message.currentSupply, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.timeLimitedCurrentSupply !== undefined) {\n            Coin.encode(message.timeLimitedCurrentSupply, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timeElapsed !== undefined) {\n            Duration.encode(message.timeElapsed, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAssetSupply };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.incomingSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.outgoingSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.currentSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.timeLimitedCurrentSupply = Coin.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timeElapsed = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAssetSupply };\n        if (object.incomingSupply !== undefined && object.incomingSupply !== null) {\n            message.incomingSupply = Coin.fromJSON(object.incomingSupply);\n        }\n        else {\n            message.incomingSupply = undefined;\n        }\n        if (object.outgoingSupply !== undefined && object.outgoingSupply !== null) {\n            message.outgoingSupply = Coin.fromJSON(object.outgoingSupply);\n        }\n        else {\n            message.outgoingSupply = undefined;\n        }\n        if (object.currentSupply !== undefined && object.currentSupply !== null) {\n            message.currentSupply = Coin.fromJSON(object.currentSupply);\n        }\n        else {\n            message.currentSupply = undefined;\n        }\n        if (object.timeLimitedCurrentSupply !== undefined && object.timeLimitedCurrentSupply !== null) {\n            message.timeLimitedCurrentSupply = Coin.fromJSON(object.timeLimitedCurrentSupply);\n        }\n        else {\n            message.timeLimitedCurrentSupply = undefined;\n        }\n        if (object.timeElapsed !== undefined && object.timeElapsed !== null) {\n            message.timeElapsed = Duration.fromJSON(object.timeElapsed);\n        }\n        else {\n            message.timeElapsed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.incomingSupply !== undefined && (obj.incomingSupply = message.incomingSupply ? Coin.toJSON(message.incomingSupply) : undefined);\n        message.outgoingSupply !== undefined && (obj.outgoingSupply = message.outgoingSupply ? Coin.toJSON(message.outgoingSupply) : undefined);\n        message.currentSupply !== undefined && (obj.currentSupply = message.currentSupply ? Coin.toJSON(message.currentSupply) : undefined);\n        message.timeLimitedCurrentSupply !== undefined &&\n            (obj.timeLimitedCurrentSupply = message.timeLimitedCurrentSupply ? Coin.toJSON(message.timeLimitedCurrentSupply) : undefined);\n        message.timeElapsed !== undefined && (obj.timeElapsed = message.timeElapsed ? Duration.toJSON(message.timeElapsed) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAssetSupply };\n        if (object.incomingSupply !== undefined && object.incomingSupply !== null) {\n            message.incomingSupply = Coin.fromPartial(object.incomingSupply);\n        }\n        else {\n            message.incomingSupply = undefined;\n        }\n        if (object.outgoingSupply !== undefined && object.outgoingSupply !== null) {\n            message.outgoingSupply = Coin.fromPartial(object.outgoingSupply);\n        }\n        else {\n            message.outgoingSupply = undefined;\n        }\n        if (object.currentSupply !== undefined && object.currentSupply !== null) {\n            message.currentSupply = Coin.fromPartial(object.currentSupply);\n        }\n        else {\n            message.currentSupply = undefined;\n        }\n        if (object.timeLimitedCurrentSupply !== undefined && object.timeLimitedCurrentSupply !== null) {\n            message.timeLimitedCurrentSupply = Coin.fromPartial(object.timeLimitedCurrentSupply);\n        }\n        else {\n            message.timeLimitedCurrentSupply = undefined;\n        }\n        if (object.timeElapsed !== undefined && object.timeElapsed !== null) {\n            message.timeElapsed = Duration.fromPartial(object.timeElapsed);\n        }\n        else {\n            message.timeElapsed = undefined;\n        }\n        return message;\n    }\n};\nconst baseParams = {};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.assetParams) {\n            AssetParam.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.assetParams = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.assetParams.push(AssetParam.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.assetParams = [];\n        if (object.assetParams !== undefined && object.assetParams !== null) {\n            for (const e of object.assetParams) {\n                message.assetParams.push(AssetParam.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.assetParams) {\n            obj.assetParams = message.assetParams.map((e) => (e ? AssetParam.toJSON(e) : undefined));\n        }\n        else {\n            obj.assetParams = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.assetParams = [];\n        if (object.assetParams !== undefined && object.assetParams !== null) {\n            for (const e of object.assetParams) {\n                message.assetParams.push(AssetParam.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAssetParam = {\n    denom: '',\n    active: false,\n    deputyAddress: '',\n    fixedFee: '',\n    minSwapAmount: '',\n    maxSwapAmount: '',\n    minBlockLock: 0,\n    maxBlockLock: 0\n};\nexport const AssetParam = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.supplyLimit !== undefined) {\n            SupplyLimit.encode(message.supplyLimit, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.active === true) {\n            writer.uint32(24).bool(message.active);\n        }\n        if (message.deputyAddress !== '') {\n            writer.uint32(34).string(message.deputyAddress);\n        }\n        if (message.fixedFee !== '') {\n            writer.uint32(42).string(message.fixedFee);\n        }\n        if (message.minSwapAmount !== '') {\n            writer.uint32(50).string(message.minSwapAmount);\n        }\n        if (message.maxSwapAmount !== '') {\n            writer.uint32(58).string(message.maxSwapAmount);\n        }\n        if (message.minBlockLock !== 0) {\n            writer.uint32(64).uint64(message.minBlockLock);\n        }\n        if (message.maxBlockLock !== 0) {\n            writer.uint32(72).uint64(message.maxBlockLock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAssetParam };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.supplyLimit = SupplyLimit.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.active = reader.bool();\n                    break;\n                case 4:\n                    message.deputyAddress = reader.string();\n                    break;\n                case 5:\n                    message.fixedFee = reader.string();\n                    break;\n                case 6:\n                    message.minSwapAmount = reader.string();\n                    break;\n                case 7:\n                    message.maxSwapAmount = reader.string();\n                    break;\n                case 8:\n                    message.minBlockLock = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.maxBlockLock = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAssetParam };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.supplyLimit !== undefined && object.supplyLimit !== null) {\n            message.supplyLimit = SupplyLimit.fromJSON(object.supplyLimit);\n        }\n        else {\n            message.supplyLimit = undefined;\n        }\n        if (object.active !== undefined && object.active !== null) {\n            message.active = Boolean(object.active);\n        }\n        else {\n            message.active = false;\n        }\n        if (object.deputyAddress !== undefined && object.deputyAddress !== null) {\n            message.deputyAddress = String(object.deputyAddress);\n        }\n        else {\n            message.deputyAddress = '';\n        }\n        if (object.fixedFee !== undefined && object.fixedFee !== null) {\n            message.fixedFee = String(object.fixedFee);\n        }\n        else {\n            message.fixedFee = '';\n        }\n        if (object.minSwapAmount !== undefined && object.minSwapAmount !== null) {\n            message.minSwapAmount = String(object.minSwapAmount);\n        }\n        else {\n            message.minSwapAmount = '';\n        }\n        if (object.maxSwapAmount !== undefined && object.maxSwapAmount !== null) {\n            message.maxSwapAmount = String(object.maxSwapAmount);\n        }\n        else {\n            message.maxSwapAmount = '';\n        }\n        if (object.minBlockLock !== undefined && object.minBlockLock !== null) {\n            message.minBlockLock = Number(object.minBlockLock);\n        }\n        else {\n            message.minBlockLock = 0;\n        }\n        if (object.maxBlockLock !== undefined && object.maxBlockLock !== null) {\n            message.maxBlockLock = Number(object.maxBlockLock);\n        }\n        else {\n            message.maxBlockLock = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.supplyLimit !== undefined && (obj.supplyLimit = message.supplyLimit ? SupplyLimit.toJSON(message.supplyLimit) : undefined);\n        message.active !== undefined && (obj.active = message.active);\n        message.deputyAddress !== undefined && (obj.deputyAddress = message.deputyAddress);\n        message.fixedFee !== undefined && (obj.fixedFee = message.fixedFee);\n        message.minSwapAmount !== undefined && (obj.minSwapAmount = message.minSwapAmount);\n        message.maxSwapAmount !== undefined && (obj.maxSwapAmount = message.maxSwapAmount);\n        message.minBlockLock !== undefined && (obj.minBlockLock = message.minBlockLock);\n        message.maxBlockLock !== undefined && (obj.maxBlockLock = message.maxBlockLock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAssetParam };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.supplyLimit !== undefined && object.supplyLimit !== null) {\n            message.supplyLimit = SupplyLimit.fromPartial(object.supplyLimit);\n        }\n        else {\n            message.supplyLimit = undefined;\n        }\n        if (object.active !== undefined && object.active !== null) {\n            message.active = object.active;\n        }\n        else {\n            message.active = false;\n        }\n        if (object.deputyAddress !== undefined && object.deputyAddress !== null) {\n            message.deputyAddress = object.deputyAddress;\n        }\n        else {\n            message.deputyAddress = '';\n        }\n        if (object.fixedFee !== undefined && object.fixedFee !== null) {\n            message.fixedFee = object.fixedFee;\n        }\n        else {\n            message.fixedFee = '';\n        }\n        if (object.minSwapAmount !== undefined && object.minSwapAmount !== null) {\n            message.minSwapAmount = object.minSwapAmount;\n        }\n        else {\n            message.minSwapAmount = '';\n        }\n        if (object.maxSwapAmount !== undefined && object.maxSwapAmount !== null) {\n            message.maxSwapAmount = object.maxSwapAmount;\n        }\n        else {\n            message.maxSwapAmount = '';\n        }\n        if (object.minBlockLock !== undefined && object.minBlockLock !== null) {\n            message.minBlockLock = object.minBlockLock;\n        }\n        else {\n            message.minBlockLock = 0;\n        }\n        if (object.maxBlockLock !== undefined && object.maxBlockLock !== null) {\n            message.maxBlockLock = object.maxBlockLock;\n        }\n        else {\n            message.maxBlockLock = 0;\n        }\n        return message;\n    }\n};\nconst baseSupplyLimit = { limit: '', timeLimited: false, timeBasedLimit: '' };\nexport const SupplyLimit = {\n    encode(message, writer = Writer.create()) {\n        if (message.limit !== '') {\n            writer.uint32(10).string(message.limit);\n        }\n        if (message.timeLimited === true) {\n            writer.uint32(16).bool(message.timeLimited);\n        }\n        if (message.timePeriod !== undefined) {\n            Duration.encode(message.timePeriod, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.timeBasedLimit !== '') {\n            writer.uint32(34).string(message.timeBasedLimit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupplyLimit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.limit = reader.string();\n                    break;\n                case 2:\n                    message.timeLimited = reader.bool();\n                    break;\n                case 3:\n                    message.timePeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.timeBasedLimit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupplyLimit };\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = String(object.limit);\n        }\n        else {\n            message.limit = '';\n        }\n        if (object.timeLimited !== undefined && object.timeLimited !== null) {\n            message.timeLimited = Boolean(object.timeLimited);\n        }\n        else {\n            message.timeLimited = false;\n        }\n        if (object.timePeriod !== undefined && object.timePeriod !== null) {\n            message.timePeriod = Duration.fromJSON(object.timePeriod);\n        }\n        else {\n            message.timePeriod = undefined;\n        }\n        if (object.timeBasedLimit !== undefined && object.timeBasedLimit !== null) {\n            message.timeBasedLimit = String(object.timeBasedLimit);\n        }\n        else {\n            message.timeBasedLimit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.timeLimited !== undefined && (obj.timeLimited = message.timeLimited);\n        message.timePeriod !== undefined && (obj.timePeriod = message.timePeriod ? Duration.toJSON(message.timePeriod) : undefined);\n        message.timeBasedLimit !== undefined && (obj.timeBasedLimit = message.timeBasedLimit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupplyLimit };\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = '';\n        }\n        if (object.timeLimited !== undefined && object.timeLimited !== null) {\n            message.timeLimited = object.timeLimited;\n        }\n        else {\n            message.timeLimited = false;\n        }\n        if (object.timePeriod !== undefined && object.timePeriod !== null) {\n            message.timePeriod = Duration.fromPartial(object.timePeriod);\n        }\n        else {\n            message.timePeriod = undefined;\n        }\n        if (object.timeBasedLimit !== undefined && object.timeBasedLimit !== null) {\n            message.timeBasedLimit = object.timeBasedLimit;\n        }\n        else {\n            message.timeBasedLimit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}