{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgMintTrustedContent","creator","did","metadata","cid","MsgMintTrustedContent","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgMintTrustedResource","MsgMintTrustedResource","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","metadataUri","denomId","MsgRoyaltyInfo","uint64","longToNumber","Number","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","bool","Boolean","baseMsgTransferNFT","uri","recipient","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","e","assign","encodeURIComponent","Array","isArray","rawQuery","filter","map","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","price","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgTransferNFT","typeUrl","msgEditNFT","msgTransferDenom","msgChangeOwner","msgBurnNFT","msgMetadata","msgMintNFT","msgRevokeDelegate","msgGrantDelegate","msgRevokeAttribute","msgFile","msgRoyaltyInfo","msgGrantAttribute","msgMintTrustedResource","msgIssueDenom","msgMintTrustedContent","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","_Structure","DIDOwner","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","sendMsgTransferNFT","msg","sendMsgEditNFT","sendMsgTransferDenom","sendMsgChangeOwner","sendMsgBurnNFT","sendMsgMetadata","sendMsgMintNFT","sendMsgRevokeDelegate","sendMsgGrantDelegate","sendMsgRevokeAttribute","sendMsgFile","sendMsgRoyaltyInfo","sendMsgGrantAttribute","sendMsgMintTrustedResource","sendMsgIssueDenom","sendMsgMintTrustedContent","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","v","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","baseDIDOwner","didAncon","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"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","file":"js/app.5dab8533.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgMintTrustedContent = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = {};\nexport const MsgMintTrustedContentResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = {};\nexport const MsgMintTrustedResourceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataUri: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(26).string(message.metadataUri);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataUri = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    InitiateSwap(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'InitiateSwap', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    ClaimSwap(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimSwap', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '' };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}