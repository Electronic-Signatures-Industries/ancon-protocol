{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgMetadata","creator","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","string","String","baseMsgFile","path","content","time","contentType","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgFileTx","MsgFileTx","baseMsgMetadataTx","MsgMetadataTx","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryParams","method","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgUnjail","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","V1Order","V1State","getDefaultState","SigningInfo","SigningInfos","_Structure","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getParams","getSigningInfo","getSigningInfos","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryParams","options","subscribe","all","QuerySigningInfo","cons_address","QuerySigningInfos","pagination","nextKey","sendMsgUnjail","msg","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","V1Beta1ProposalStatus","V1Beta1VoteOption","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","V1Beta1BondStatus","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryResource","cid","queryReadFile","queryRead","queryReadWithPath","msgMetadata","msgFile","ReadWithPath","ReadFile","Read","Resource","getReadWithPath","getReadFile","getRead","getResource","QueryReadWithPath","QueryReadFile","QueryRead","QueryResource","sendMsgMetadata","sendMsgFile","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","CosmosCosmosSdkCosmosSlashingV1Beta1","load","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","ElectronicSignaturesIndustriesAnconProtocolAnconprotocol","CosmosCosmosSdkCosmosEvidenceV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.933cf05f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryResource = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/anconprotocol.MsgFile\", MsgFile],\n    [\"/anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, key.path)).data;\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/anconprotocol';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nexport default {\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolAnconprotocol, 'anconprotocol'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}