{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","longToNumber","Boolean","Number","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgClaimSwap","MsgClaimSwap","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","id","schema","sender","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgTransferDenom","typeUrl","msgInitiateSwap","msgIssueDenom","msgBurnNFT","msgRevokeDelegate","msgRevokeAttribute","msgRoyaltyInfo","msgMintNFT","msgRevokeDid","msgGrantDelegate","msgMetadata","msgChangeOwner","msgUpdateDid","msgMintTrustedContent","msgTransferNFT","msgEditNFT","msgClaimSwap","msgMintTrustedResource","msgGrantAttribute","msgCreateDid","msgFile","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","_Structure","Voucher","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgTransferDenom","msg","sendMsgInitiateSwap","sendMsgIssueDenom","sendMsgBurnNFT","sendMsgRevokeDelegate","sendMsgRevokeAttribute","sendMsgRoyaltyInfo","sendMsgMintNFT","sendMsgRevokeDid","sendMsgGrantDelegate","sendMsgMetadata","sendMsgChangeOwner","sendMsgUpdateDid","sendMsgMintTrustedContent","sendMsgTransferNFT","sendMsgEditNFT","sendMsgClaimSwap","sendMsgMintTrustedResource","sendMsgGrantAttribute","sendMsgCreateDid","sendMsgFile","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","baseOwner","idCollections","fork","ldelim","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","metadataUri","baseVoucher","didRecipient","baseDIDOwner","didAncon","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,g1CCnJHyC,EAAmB,CAAEC,QAAS,GAAIC,WAAY,GAAIC,QAAS,IACpDC,EAAe,CACxBC,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEV,KAAvBK,EAAQJ,YACRK,EAAOE,OAAO,IAAIC,OAAOJ,EAAQJ,YAEb,KAApBI,EAAQH,SACRI,EAAOE,OAAO,IAAIC,OAAOJ,EAAQH,SAE9BI,GAEXI,OAbwB,SAajBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKN,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQJ,WAAaW,EAAOH,SAC5B,MACJ,KAAK,EACDJ,EAAQH,QAAUU,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApCwB,SAoCf7B,GACL,IAAMa,EAAU,kBAAKN,GAmBrB,YAlBuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEIgB,IAAtBxB,EAAOS,YAAkD,OAAtBT,EAAOS,WAC1CI,EAAQJ,WAAaqB,OAAO9B,EAAOS,YAGnCI,EAAQJ,WAAa,QAEFe,IAAnBxB,EAAOU,SAA4C,OAAnBV,EAAOU,QACvCG,EAAQH,QAAUoB,OAAO9B,EAAOU,SAGhCG,EAAQH,QAAU,GAEfG,GAEXkB,OA1DwB,SA0DjBlB,GACH,IAAMmB,EAAM,GAIZ,YAHoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACjCgB,IAAvBX,EAAQJ,aAA6BuB,EAAIvB,WAAaI,EAAQJ,iBAC1Ce,IAApBX,EAAQH,UAA0BsB,EAAItB,QAAUG,EAAQH,SACjDsB,GAEXC,YAjEwB,SAiEZjC,GACR,IAAMa,EAAU,kBAAKN,GAmBrB,YAlBuBiB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEIgB,IAAtBxB,EAAOS,YAAkD,OAAtBT,EAAOS,WAC1CI,EAAQJ,WAAaT,EAAOS,WAG5BI,EAAQJ,WAAa,QAEFe,IAAnBxB,EAAOU,SAA4C,OAAnBV,EAAOU,QACvCG,EAAQH,QAAUV,EAAOU,QAGzBG,EAAQH,QAAU,GAEfG,IAyETqB,EAAmB,CAAE1B,QAAS,GAAI2B,IAAK,GAAIC,SAAU,GAAIC,IAAK,IACvDC,EAAe,CACxB1B,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAa5B,MAZwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEjB,KAAhBK,EAAQsB,KACRrB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsB,KAEZ,KAArBtB,EAAQuB,UACRtB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuB,UAEjB,KAAhBvB,EAAQwB,KACRvB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQwB,KAE9BvB,GAEXI,OAhBwB,SAgBjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKqB,GACrB,MAAOd,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQsB,IAAMf,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQuB,SAAWhB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQwB,IAAMjB,EAAOH,SACrB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA1CwB,SA0Cf7B,GACL,IAAMa,EAAU,kBAAKqB,GAyBrB,YAxBuBV,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAML,OAAO9B,EAAOmC,KAG5BtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWN,OAAO9B,EAAOoC,UAGjCvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMP,OAAO9B,EAAOqC,KAG5BxB,EAAQwB,IAAM,GAEXxB,GAEXkB,OAtEwB,SAsEjBlB,GACH,IAAMmB,EAAM,GAKZ,YAJoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACxCgB,IAAhBX,EAAQsB,MAAsBH,EAAIG,IAAMtB,EAAQsB,UAC3BX,IAArBX,EAAQuB,WAA2BJ,EAAII,SAAWvB,EAAQuB,eAC1CZ,IAAhBX,EAAQwB,MAAsBL,EAAIK,IAAMxB,EAAQwB,KACzCL,GAEXC,YA9EwB,SA8EZjC,GACR,IAAMa,EAAU,kBAAKqB,GAyBrB,YAxBuBV,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAMnC,EAAOmC,IAGrBtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWpC,EAAOoC,SAG1BvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMrC,EAAOqC,IAGrBxB,EAAQwB,IAAM,GAEXxB,IAmCT0B,EAAmB,CAAE/B,QAAS,GAAI2B,IAAK,GAAIC,SAAU,GAAIC,IAAK,IACvDG,EAAe,CACxB5B,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAa5B,MAZwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEjB,KAAhBK,EAAQsB,KACRrB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsB,KAEZ,KAArBtB,EAAQuB,UACRtB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuB,UAEjB,KAAhBvB,EAAQwB,KACRvB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQwB,KAE9BvB,GAEXI,OAhBwB,SAgBjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK0B,GACrB,MAAOnB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQsB,IAAMf,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQuB,SAAWhB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQwB,IAAMjB,EAAOH,SACrB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA1CwB,SA0Cf7B,GACL,IAAMa,EAAU,kBAAK0B,GAyBrB,YAxBuBf,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAML,OAAO9B,EAAOmC,KAG5BtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWN,OAAO9B,EAAOoC,UAGjCvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMP,OAAO9B,EAAOqC,KAG5BxB,EAAQwB,IAAM,GAEXxB,GAEXkB,OAtEwB,SAsEjBlB,GACH,IAAMmB,EAAM,GAKZ,YAJoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACxCgB,IAAhBX,EAAQsB,MAAsBH,EAAIG,IAAMtB,EAAQsB,UAC3BX,IAArBX,EAAQuB,WAA2BJ,EAAII,SAAWvB,EAAQuB,eAC1CZ,IAAhBX,EAAQwB,MAAsBL,EAAIK,IAAMxB,EAAQwB,KACzCL,GAEXC,YA9EwB,SA8EZjC,GACR,IAAMa,EAAU,kBAAK0B,GAyBrB,YAxBuBf,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAMnC,EAAOmC,IAGrBtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWpC,EAAOoC,SAG1BvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMrC,EAAOqC,IAGrBxB,EAAQwB,IAAM,GAEXxB,IAsDT4B,EAA4B,CAC9BjC,QAAS,GACTkC,YAAa,GACbC,QAAS,GACT7D,KAAM,GACN8D,UAAW,GACXC,SAAU,GACVC,UAAU,EACVC,MAAO,EACP3D,EAAG,GACHd,EAAG,GACH0E,EAAG,GAEMC,EAAwB,CACjCrC,OADiC,SAC1BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAkC5B,MAjCwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAET,KAAxBK,EAAQ6B,aACR5B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ6B,aAEb,KAApB7B,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEhB,KAAjB9B,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEX,KAAtB+B,EAAQ+B,WACR9B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+B,WAEZ,KAArB/B,EAAQgC,UACR/B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgC,WAEZ,IAArBhC,EAAQiC,UACRhC,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQiC,UAEb,IAAlBjC,EAAQkC,OACRjC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkC,OAEnB,KAAdlC,EAAQzB,GACR0B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQzB,GAEnB,KAAdyB,EAAQvC,GACRwC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQvC,GAEnB,IAAduC,EAAQmC,GACRlC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQmC,GAE9BlC,GAEXI,OArCiC,SAqC1BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK4B,GACrB,MAAOrB,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ6B,YAActB,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ+B,UAAYxB,EAAOH,SAC3B,MACJ,KAAK,EACDJ,EAAQgC,SAAWzB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQiC,SAAW1B,EAAO8B,OAC1B,MACJ,KAAK,EACDrC,EAAQkC,MAAQK,GAAahC,EAAO+B,UACpC,MACJ,KAAK,EACDtC,EAAQzB,EAAIgC,EAAOH,SACnB,MACJ,KAAK,GACDJ,EAAQvC,EAAI8C,EAAOH,SACnB,MACJ,KAAK,GACDJ,EAAQmC,EAAII,GAAahC,EAAO+B,UAChC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApFiC,SAoFxB7B,GACL,IAAMa,EAAU,kBAAK4B,GAmErB,YAlEuBjB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEKgB,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAcZ,OAAO9B,EAAO0C,aAGpC7B,EAAQ6B,YAAc,QAEHlB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEM0C,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAYd,OAAO9B,EAAO4C,WAGlC/B,EAAQ+B,UAAY,QAEApB,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAWf,OAAO9B,EAAO6C,UAGjChC,EAAQgC,SAAW,QAECrB,IAApBxB,EAAO8C,UAA8C,OAApB9C,EAAO8C,SACxCjC,EAAQiC,SAAWO,QAAQrD,EAAO8C,UAGlCjC,EAAQiC,UAAW,OAEFtB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQO,OAAOtD,EAAO+C,OAG9BlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAI0C,OAAO9B,EAAOZ,GAG1ByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAIwD,OAAO9B,EAAO1B,GAG1BuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIM,OAAOtD,EAAOgD,GAG1BnC,EAAQmC,EAAI,EAETnC,GAEXkB,OA1JiC,SA0J1BlB,GACH,IAAMmB,EAAM,GAYZ,YAXoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cAChCgB,IAAxBX,EAAQ6B,cAA8BV,EAAIU,YAAc7B,EAAQ6B,kBAC5ClB,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACvCnB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAC5B0C,IAAtBX,EAAQ+B,YAA4BZ,EAAIY,UAAY/B,EAAQ+B,gBACvCpB,IAArBX,EAAQgC,WAA2Bb,EAAIa,SAAWhC,EAAQgC,eACrCrB,IAArBX,EAAQiC,WAA2Bd,EAAIc,SAAWjC,EAAQiC,eACxCtB,IAAlBX,EAAQkC,QAAwBf,EAAIe,MAAQlC,EAAQkC,YACtCvB,IAAdX,EAAQzB,IAAoB4C,EAAI5C,EAAIyB,EAAQzB,QAC9BoC,IAAdX,EAAQvC,IAAoB0D,EAAI1D,EAAIuC,EAAQvC,QAC9BkD,IAAdX,EAAQmC,IAAoBhB,EAAIgB,EAAInC,EAAQmC,GACrChB,GAEXC,YAzKiC,SAyKrBjC,GACR,IAAMa,EAAU,kBAAK4B,GAmErB,YAlEuBjB,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEKgB,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAc1C,EAAO0C,YAG7B7B,EAAQ6B,YAAc,QAEHlB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEM0C,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAY5C,EAAO4C,UAG3B/B,EAAQ+B,UAAY,QAEApB,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAW7C,EAAO6C,SAG1BhC,EAAQgC,SAAW,QAECrB,IAApBxB,EAAO8C,UAA8C,OAApB9C,EAAO8C,SACxCjC,EAAQiC,SAAW9C,EAAO8C,SAG1BjC,EAAQiC,UAAW,OAEFtB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQ/C,EAAO+C,MAGvBlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAIY,EAAOZ,EAGnByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAI0B,EAAO1B,EAGnBuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIhD,EAAOgD,EAGnBnC,EAAQmC,EAAI,EAETnC,IAsDT0C,EAAsB,CAAE/C,QAAS,IAC1BgD,EAAkB,CAC3B5C,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAI5B,MAHwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAE9BM,GAEXI,OAP2B,SAOpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK0C,GACrB,MAAOnC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAxB2B,SAwBlB7B,GACL,IAAMa,EAAU,kBAAK0C,GAOrB,YANuB/B,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,GAEfK,GAEXkB,OAlC2B,SAkCpBlB,GACH,IAAMmB,EAAM,GAEZ,YADoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,SACjDwB,GAEXC,YAvC2B,SAuCfjC,GACR,IAAMa,EAAU,kBAAK0C,GAOrB,YANuB/B,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,GAEfK,IAsDT4C,EAAmB,CAAEjD,QAAS,GAAI2B,IAAK,GAAIC,SAAU,GAAIC,IAAK,IACvDqB,EAAe,CACxB9C,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAa5B,MAZwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEjB,KAAhBK,EAAQsB,KACRrB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsB,KAEZ,KAArBtB,EAAQuB,UACRtB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuB,UAEjB,KAAhBvB,EAAQwB,KACRvB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQwB,KAE9BvB,GAEXI,OAhBwB,SAgBjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK4C,GACrB,MAAOrC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQsB,IAAMf,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQuB,SAAWhB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQwB,IAAMjB,EAAOH,SACrB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA1CwB,SA0Cf7B,GACL,IAAMa,EAAU,kBAAK4C,GAyBrB,YAxBuBjC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAML,OAAO9B,EAAOmC,KAG5BtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWN,OAAO9B,EAAOoC,UAGjCvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMP,OAAO9B,EAAOqC,KAG5BxB,EAAQwB,IAAM,GAEXxB,GAEXkB,OAtEwB,SAsEjBlB,GACH,IAAMmB,EAAM,GAKZ,YAJoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACxCgB,IAAhBX,EAAQsB,MAAsBH,EAAIG,IAAMtB,EAAQsB,UAC3BX,IAArBX,EAAQuB,WAA2BJ,EAAII,SAAWvB,EAAQuB,eAC1CZ,IAAhBX,EAAQwB,MAAsBL,EAAIK,IAAMxB,EAAQwB,KACzCL,GAEXC,YA9EwB,SA8EZjC,GACR,IAAMa,EAAU,kBAAK4C,GAyBrB,YAxBuBjC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEHgB,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAMnC,EAAOmC,IAGrBtB,EAAQsB,IAAM,QAEMX,IAApBxB,EAAOoC,UAA8C,OAApBpC,EAAOoC,SACxCvB,EAAQuB,SAAWpC,EAAOoC,SAG1BvB,EAAQuB,SAAW,QAEJZ,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMrC,EAAOqC,IAGrBxB,EAAQwB,IAAM,GAEXxB,IAsDT8C,EAA6B,CAC/BnD,QAAS,GACTkC,YAAa,GACbG,SAAU,GACVF,QAAS,GACT7D,KAAM,GACN8D,UAAW,GACXgB,wBAAyB,GACzBC,iBAAkB,GAClBf,UAAU,EACVC,MAAO,EACP3D,EAAG,GACHd,EAAG,GACH0E,EAAG,GAEMc,EAAyB,CAClClD,OADkC,SAC3BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SACJ,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAET,KAAxBK,EAAQ6B,aACR5B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ6B,aAEZ,KAArB7B,EAAQgC,UACR/B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgC,UAEb,KAApBhC,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEhB,KAAjB9B,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEX,KAAtB+B,EAAQ+B,WACR9B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+B,WAjBC,uBAmBtB/B,EAAQ+C,yBAnBc,IAmBtC,2BAAiD,KAAtCZ,EAAsC,QAC7ClC,EAAOE,OAAO,IAAIC,OAAO+B,IApBS,8BAwCtC,MAlBiC,KAA7BnC,EAAQgD,kBACR/C,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgD,mBAEZ,IAArBhD,EAAQiC,UACRhC,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQiC,UAEb,IAAlBjC,EAAQkC,OACRjC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkC,OAEnB,KAAdlC,EAAQzB,GACR0B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQzB,GAEnB,KAAdyB,EAAQvC,GACRwC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQvC,GAEnB,IAAduC,EAAQmC,GACRlC,EAAOE,OAAO,KAAKmC,OAAOtC,EAAQmC,GAE/BlC,GAEXI,OA3CkC,SA2C3BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK8C,GACrB9C,EAAQ+C,wBAA0B,GAClC,MAAOxC,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ6B,YAActB,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQgC,SAAWzB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ+B,UAAYxB,EAAOH,SAC3B,MACJ,KAAK,EACDJ,EAAQ+C,wBAAwBpG,KAAK4D,EAAOH,UAC5C,MACJ,KAAK,EACDJ,EAAQgD,iBAAmBzC,EAAOH,SAClC,MACJ,KAAK,EACDJ,EAAQiC,SAAW1B,EAAO8B,OAC1B,MACJ,KAAK,GACDrC,EAAQkC,MAAQK,GAAahC,EAAO+B,UACpC,MACJ,KAAK,GACDtC,EAAQzB,EAAIgC,EAAOH,SACnB,MACJ,KAAK,GACDJ,EAAQvC,EAAI8C,EAAOH,SACnB,MACJ,KAAK,GACDJ,EAAQmC,EAAII,GAAahC,EAAO+B,UAChC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAjGkC,SAiGzB7B,GACL,IAAMa,EAAU,kBAAK8C,GAsCrB,GArCA9C,EAAQ+C,wBAA0B,QACXpC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEKgB,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAcZ,OAAO9B,EAAO0C,aAGpC7B,EAAQ6B,YAAc,QAEFlB,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAWf,OAAO9B,EAAO6C,UAGjChC,EAAQgC,SAAW,QAEArB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEM0C,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAYd,OAAO9B,EAAO4C,WAGlC/B,EAAQ+B,UAAY,QAEepB,IAAnCxB,EAAO4D,yBAA4E,OAAnC5D,EAAO4D,wBAAkC,wBACzE5D,EAAO4D,yBADkE,IACzF,2BAAgD,KAArCG,EAAqC,QAC5ClD,EAAQ+C,wBAAwBpG,KAAKsE,OAAOiC,KAFyC,+BAyC7F,YApCgCvC,IAA5BxB,EAAO6D,kBAA8D,OAA5B7D,EAAO6D,iBAChDhD,EAAQgD,iBAAmB/B,OAAO9B,EAAO6D,kBAGzChD,EAAQgD,iBAAmB,QAEPrC,IAApBxB,EAAO8C,UAA8C,OAApB9C,EAAO8C,SACxCjC,EAAQiC,SAAWO,QAAQrD,EAAO8C,UAGlCjC,EAAQiC,UAAW,OAEFtB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQO,OAAOtD,EAAO+C,OAG9BlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAI0C,OAAO9B,EAAOZ,GAG1ByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAIwD,OAAO9B,EAAO1B,GAG1BuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIM,OAAOtD,EAAOgD,GAG1BnC,EAAQmC,EAAI,EAETnC,GAEXkB,OAnLkC,SAmL3BlB,GACH,IAAMmB,EAAM,GAmBZ,YAlBoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cAChCgB,IAAxBX,EAAQ6B,cAA8BV,EAAIU,YAAc7B,EAAQ6B,kBAC3ClB,IAArBX,EAAQgC,WAA2Bb,EAAIa,SAAWhC,EAAQgC,eACtCrB,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACvCnB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAC5B0C,IAAtBX,EAAQ+B,YAA4BZ,EAAIY,UAAY/B,EAAQ+B,WACxD/B,EAAQ+C,wBACR5B,EAAI4B,wBAA0B/C,EAAQ+C,wBAAwBI,KAAI,SAACD,GAAD,OAAOA,KAGzE/B,EAAI4B,wBAA0B,QAELpC,IAA7BX,EAAQgD,mBAAmC7B,EAAI6B,iBAAmBhD,EAAQgD,uBACrDrC,IAArBX,EAAQiC,WAA2Bd,EAAIc,SAAWjC,EAAQiC,eACxCtB,IAAlBX,EAAQkC,QAAwBf,EAAIe,MAAQlC,EAAQkC,YACtCvB,IAAdX,EAAQzB,IAAoB4C,EAAI5C,EAAIyB,EAAQzB,QAC9BoC,IAAdX,EAAQvC,IAAoB0D,EAAI1D,EAAIuC,EAAQvC,QAC9BkD,IAAdX,EAAQmC,IAAoBhB,EAAIgB,EAAInC,EAAQmC,GACrChB,GAEXC,YAzMkC,SAyMtBjC,GACR,IAAMa,EAAU,kBAAK8C,GAsCrB,GArCA9C,EAAQ+C,wBAA0B,QACXpC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEKgB,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAc1C,EAAO0C,YAG7B7B,EAAQ6B,YAAc,QAEFlB,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAW7C,EAAO6C,SAG1BhC,EAAQgC,SAAW,QAEArB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEM0C,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAY5C,EAAO4C,UAG3B/B,EAAQ+B,UAAY,QAEepB,IAAnCxB,EAAO4D,yBAA4E,OAAnC5D,EAAO4D,wBAAkC,wBACzE5D,EAAO4D,yBADkE,IACzF,2BAAgD,KAArCG,EAAqC,QAC5ClD,EAAQ+C,wBAAwBpG,KAAKuG,IAFgD,+BAyC7F,YApCgCvC,IAA5BxB,EAAO6D,kBAA8D,OAA5B7D,EAAO6D,iBAChDhD,EAAQgD,iBAAmB7D,EAAO6D,iBAGlChD,EAAQgD,iBAAmB,QAEPrC,IAApBxB,EAAO8C,UAA8C,OAApB9C,EAAO8C,SACxCjC,EAAQiC,SAAW9C,EAAO8C,SAG1BjC,EAAQiC,UAAW,OAEFtB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQ/C,EAAO+C,MAGvBlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAIY,EAAOZ,EAGnByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAI0B,EAAO1B,EAGnBuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIhD,EAAOgD,EAGnBnC,EAAQmC,EAAI,EAETnC,IAsDToD,EAAqB,CAAEzD,QAAS,GAAI0D,SAAU,GAAIC,qBAAsB,EAAGzB,YAAa,GAAIC,QAAS,IAC9FyB,EAAiB,CAC1BxD,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,KAArBK,EAAQqD,UACRpD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQqD,UAEA,IAAjCrD,EAAQsD,sBACRrD,EAAOE,OAAO,IAAImC,OAAOtC,EAAQsD,sBAET,KAAxBtD,EAAQ6B,aACR5B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ6B,aAEb,KAApB7B,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAE9B7B,GAEXI,OAnB0B,SAmBnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKoD,GACrB,MAAO7C,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQqD,SAAW9C,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQsD,qBAAuBf,GAAahC,EAAO+B,UACnD,MACJ,KAAK,EACDtC,EAAQ6B,YAActB,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhD0B,SAgDjB7B,GACL,IAAMa,EAAU,kBAAKoD,GA+BrB,YA9BuBzC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOkE,UAA8C,OAApBlE,EAAOkE,SACxCrD,EAAQqD,SAAWpC,OAAO9B,EAAOkE,UAGjCrD,EAAQqD,SAAW,QAEa1C,IAAhCxB,EAAOmE,sBAAsE,OAAhCnE,EAAOmE,qBACpDtD,EAAQsD,qBAAuBb,OAAOtD,EAAOmE,sBAG7CtD,EAAQsD,qBAAuB,OAER3C,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAcZ,OAAO9B,EAAO0C,aAGpC7B,EAAQ6B,YAAc,QAEHlB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,GAEf9B,GAEXkB,OAlF0B,SAkFnBlB,GACH,IAAMmB,EAAM,GAMZ,YALoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQqD,WAA2BlC,EAAIkC,SAAWrD,EAAQqD,eACzB1C,IAAjCX,EAAQsD,uBAAuCnC,EAAImC,qBAAuBtD,EAAQsD,2BAC1D3C,IAAxBX,EAAQ6B,cAA8BV,EAAIU,YAAc7B,EAAQ6B,kBAC5ClB,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,SACjDX,GAEXC,YA3F0B,SA2FdjC,GACR,IAAMa,EAAU,kBAAKoD,GA+BrB,YA9BuBzC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOkE,UAA8C,OAApBlE,EAAOkE,SACxCrD,EAAQqD,SAAWlE,EAAOkE,SAG1BrD,EAAQqD,SAAW,QAEa1C,IAAhCxB,EAAOmE,sBAAsE,OAAhCnE,EAAOmE,qBACpDtD,EAAQsD,qBAAuBnE,EAAOmE,qBAGtCtD,EAAQsD,qBAAuB,OAER3C,IAAvBxB,EAAO0C,aAAoD,OAAvB1C,EAAO0C,YAC3C7B,EAAQ6B,YAAc1C,EAAO0C,YAG7B7B,EAAQ6B,YAAc,QAEHlB,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,GAEf9B,IA4FTwD,EAAoB,CAAEC,GAAI,GAAIxF,KAAM,GAAIyF,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,gBAAgB,EAAOC,kBAAkB,GAC9GC,EAAgB,CACzBhE,OADyB,SAClBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEhB,KAAjBzD,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEd,KAAnB+B,EAAQ0D,QACRzD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ0D,QAEd,KAAnB1D,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAEd,KAAnB3D,EAAQ4D,QACR3D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4D,SAEN,IAA3B5D,EAAQ6D,gBACR5D,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQ6D,iBAEF,IAA7B7D,EAAQ8D,kBACR7D,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQ8D,kBAE5B7D,GAEXI,OAzByB,SAyBlBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKwD,GACrB,MAAOjD,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ0D,OAASnD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ4D,OAASrD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ6D,eAAiBtD,EAAO8B,OAChC,MACJ,KAAK,EACDrC,EAAQ8D,iBAAmBvD,EAAO8B,OAClC,MACJ,QACI9B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5DyB,SA4DhB7B,GACL,IAAMa,EAAU,kBAAKwD,GA2CrB,YA1CkB7C,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEG0C,IAAlBxB,EAAOuE,QAA0C,OAAlBvE,EAAOuE,OACtC1D,EAAQ0D,OAASzC,OAAO9B,EAAOuE,QAG/B1D,EAAQ0D,OAAS,QAEC/C,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,QAEChD,IAAlBxB,EAAOyE,QAA0C,OAAlBzE,EAAOyE,OACtC5D,EAAQ4D,OAAS3C,OAAO9B,EAAOyE,QAG/B5D,EAAQ4D,OAAS,QAESjD,IAA1BxB,EAAO0E,gBAA0D,OAA1B1E,EAAO0E,eAC9C7D,EAAQ6D,eAAiBrB,QAAQrD,EAAO0E,gBAGxC7D,EAAQ6D,gBAAiB,OAEGlD,IAA5BxB,EAAO2E,kBAA8D,OAA5B3E,EAAO2E,iBAChD9D,EAAQ8D,iBAAmBtB,QAAQrD,EAAO2E,kBAG1C9D,EAAQ8D,kBAAmB,EAExB9D,GAEXkB,OA1GyB,SA0GlBlB,GACH,IAAMmB,EAAM,GAQZ,YAPeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC7B9C,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAC/B0C,IAAnBX,EAAQ0D,SAAyBvC,EAAIuC,OAAS1D,EAAQ0D,aACnC/C,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,aACnChD,IAAnBX,EAAQ4D,SAAyBzC,EAAIyC,OAAS5D,EAAQ4D,aAC3BjD,IAA3BX,EAAQ6D,iBAAiC1C,EAAI0C,eAAiB7D,EAAQ6D,qBACzClD,IAA7BX,EAAQ8D,mBAAmC3C,EAAI2C,iBAAmB9D,EAAQ8D,kBACnE3C,GAEXC,YArHyB,SAqHbjC,GACR,IAAMa,EAAU,kBAAKwD,GA2CrB,YA1CkB7C,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEG0C,IAAlBxB,EAAOuE,QAA0C,OAAlBvE,EAAOuE,OACtC1D,EAAQ0D,OAASvE,EAAOuE,OAGxB1D,EAAQ0D,OAAS,QAEC/C,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,QAEChD,IAAlBxB,EAAOyE,QAA0C,OAAlBzE,EAAOyE,OACtC5D,EAAQ4D,OAASzE,EAAOyE,OAGxB5D,EAAQ4D,OAAS,QAESjD,IAA1BxB,EAAO0E,gBAA0D,OAA1B1E,EAAO0E,eAC9C7D,EAAQ6D,eAAiB1E,EAAO0E,eAGhC7D,EAAQ6D,gBAAiB,OAEGlD,IAA5BxB,EAAO2E,kBAA8D,OAA5B3E,EAAO2E,iBAChD9D,EAAQ8D,iBAAmB3E,EAAO2E,iBAGlC9D,EAAQ8D,kBAAmB,EAExB9D,IAmCTgE,EAAqB,CAAEP,GAAI,GAAI3B,QAAS,GAAI7D,KAAM,GAAIgG,IAAK,GAAIpI,KAAM,GAAI8H,OAAQ,GAAI5B,UAAW,IACzFmC,EAAiB,CAC1BnE,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEb,KAApBzD,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEhB,KAAjB9B,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEjB,KAAhB+B,EAAQiE,KACRhE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiE,KAEhB,KAAjBjE,EAAQnE,MACRoE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQnE,MAEd,KAAnBmE,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAEX,KAAtB3D,EAAQ+B,WACR9B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+B,WAE9B9B,GAEXI,OAzB0B,SAyBnBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKgE,GACrB,MAAOzD,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQiE,IAAM1D,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQnE,KAAO0E,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ+B,UAAYxB,EAAOH,SAC3B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5D0B,SA4DjB7B,GACL,IAAMa,EAAU,kBAAKgE,GA2CrB,YA1CkBrD,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAMhD,OAAO9B,EAAO8E,KAG5BjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOoF,OAAO9B,EAAOtD,MAG7BmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAYd,OAAO9B,EAAO4C,WAGlC/B,EAAQ+B,UAAY,GAEjB/B,GAEXkB,OA1G0B,SA0GnBlB,GACH,IAAMmB,EAAM,GAQZ,YAPeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC1B9C,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACvCnB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAClC0C,IAAhBX,EAAQiE,MAAsB9C,EAAI8C,IAAMjE,EAAQiE,UAC/BtD,IAAjBX,EAAQnE,OAAuBsF,EAAItF,KAAOmE,EAAQnE,WAC/B8E,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,aAChChD,IAAtBX,EAAQ+B,YAA4BZ,EAAIY,UAAY/B,EAAQ+B,WACrDZ,GAEXC,YArH0B,SAqHdjC,GACR,IAAMa,EAAU,kBAAKgE,GA2CrB,YA1CkBrD,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAM9E,EAAO8E,IAGrBjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOsD,EAAOtD,KAGtBmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAY5C,EAAO4C,UAG3B/B,EAAQ+B,UAAY,GAEjB/B,IA4FTmE,EAAwB,CAAExE,QAAS,GAAIyE,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,IAC/DC,EAAoB,CAC7BxE,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAa5B,MAZwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEf,KAAlBK,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAEd,KAAnBpE,EAAQqE,QACRpE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQqE,QAEd,KAAnBrE,EAAQsE,QACRrE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsE,QAE9BrE,GAEXI,OAhB6B,SAgBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKmE,GACrB,MAAO5D,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQqE,OAAS9D,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQsE,OAAS/D,EAAOH,SACxB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA1C6B,SA0CpB7B,GACL,IAAMa,EAAU,kBAAKmE,GAyBrB,YAxBuBxD,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEDgB,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEEzD,IAAlBxB,EAAOkF,QAA0C,OAAlBlF,EAAOkF,OACtCrE,EAAQqE,OAASpD,OAAO9B,EAAOkF,QAG/BrE,EAAQqE,OAAS,QAEC1D,IAAlBxB,EAAOmF,QAA0C,OAAlBnF,EAAOmF,OACtCtE,EAAQsE,OAASrD,OAAO9B,EAAOmF,QAG/BtE,EAAQsE,OAAS,GAEdtE,GAEXkB,OAtE6B,SAsEtBlB,GACH,IAAMmB,EAAM,GAKZ,YAJoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACtCgB,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YACjCzD,IAAnBX,EAAQqE,SAAyBlD,EAAIkD,OAASrE,EAAQqE,aACnC1D,IAAnBX,EAAQsE,SAAyBnD,EAAImD,OAAStE,EAAQsE,QAC/CnD,GAEXC,YA9E6B,SA8EjBjC,GACR,IAAMa,EAAU,kBAAKmE,GAyBrB,YAxBuBxD,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEDgB,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEEzD,IAAlBxB,EAAOkF,QAA0C,OAAlBlF,EAAOkF,OACtCrE,EAAQqE,OAASlF,EAAOkF,OAGxBrE,EAAQqE,OAAS,QAEC1D,IAAlBxB,EAAOmF,QAA0C,OAAlBnF,EAAOmF,OACtCtE,EAAQsE,OAASnF,EAAOmF,OAGxBtE,EAAQsE,OAAS,GAEdtE,IAGTwE,EAAgC,GACzBC,EAA4B,CACrC1E,OADqC,SAC9B2E,GAA6B,IAA1BzE,EAA0B,uDAAjBC,YAAOnB,SACtB,OAAOkB,GAEXI,OAJqC,SAI9BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKwE,GACrB,MAAOjE,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,QACIP,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlBqC,SAkB5B0D,GACL,IAAM1E,EAAU,kBAAKwE,GACrB,OAAOxE,GAEXkB,OAtBqC,SAsB9BwD,GACH,IAAMvD,EAAM,GACZ,OAAOA,GAEXC,YA1BqC,SA0BzBsD,GACR,IAAM1E,EAAU,kBAAKwE,GACrB,OAAOxE,IAGT2E,EAAqB,CAAEhF,QAAS,GAAIiF,SAAU,GAAIC,SAAU,IACrDC,EAAiB,CAC1B/E,OAD0B,SACnBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,KAArBK,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEZ,KAArB5E,EAAQ6E,UACR5E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ6E,UAE9B5E,GAEXI,OAb0B,SAanBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK2E,GACrB,MAAOpE,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQ6E,SAAWtE,EAAOH,SAC1B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApC0B,SAoCjB7B,GACL,IAAMa,EAAU,kBAAK2E,GAmBrB,YAlBuBhE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAECjE,IAApBxB,EAAO0F,UAA8C,OAApB1F,EAAO0F,SACxC7E,EAAQ6E,SAAW5D,OAAO9B,EAAO0F,UAGjC7E,EAAQ6E,SAAW,GAEhB7E,GAEXkB,OA1D0B,SA0DnBlB,GACH,IAAMmB,EAAM,GAIZ,YAHoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACrCjE,IAArBX,EAAQ6E,WAA2B1D,EAAI0D,SAAW7E,EAAQ6E,UACnD1D,GAEXC,YAjE0B,SAiEdjC,GACR,IAAMa,EAAU,kBAAK2E,GAmBrB,YAlBuBhE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAECjE,IAApBxB,EAAO0F,UAA8C,OAApB1F,EAAO0F,SACxC7E,EAAQ6E,SAAW1F,EAAO0F,SAG1B7E,EAAQ6E,SAAW,GAEhB7E,IAGT+E,EAAuB,CAAEC,SAAU,GAAIC,aAAc,GAAIC,SAAU,EAAGvF,QAAS,GAAIiF,SAAU,IACtFO,EAAmB,CAC5BpF,OAD4B,SACrBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfyB,KAArBiB,EAAQgF,UACR/E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgF,UAER,KAAzBhF,EAAQiF,cACRhF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiF,cAEZ,IAArBjF,EAAQkF,UACRjF,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkF,UAEb,KAApBlF,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,KAArBK,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAE9B3E,GAEXI,OAnB4B,SAmBrBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK+E,GACrB,MAAOxE,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQgF,SAAWzE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQiF,aAAe1E,EAAOH,SAC9B,MACJ,KAAK,EACDJ,EAAQkF,SAAW3C,GAAahC,EAAO+B,UACvC,MACJ,KAAK,EACDtC,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhD4B,SAgDnB7B,GACL,IAAMa,EAAU,kBAAK+E,GA+BrB,YA9BwBpE,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW/D,OAAO9B,EAAO6F,UAGjChF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAehE,OAAO9B,EAAO8F,cAGrCjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAWzC,OAAOtD,EAAO+F,UAGjClF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,GAEhB5E,GAEXkB,OAlF4B,SAkFrBlB,GACH,IAAMmB,EAAM,GAMZ,YALqBR,IAArBX,EAAQgF,WAA2B7D,EAAI6D,SAAWhF,EAAQgF,eACjCrE,IAAzBX,EAAQiF,eAA+B9D,EAAI8D,aAAejF,EAAQiF,mBAC7CtE,IAArBX,EAAQkF,WAA2B/D,EAAI+D,SAAWlF,EAAQkF,eACtCvE,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,UACnDzD,GAEXC,YA3F4B,SA2FhBjC,GACR,IAAMa,EAAU,kBAAK+E,GA+BrB,YA9BwBpE,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW7F,EAAO6F,SAG1BhF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAe9F,EAAO8F,aAG9BjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAW/F,EAAO+F,SAG1BlF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,GAEhB5E,IAmDToF,EAAwB,CAAEJ,SAAU,GAAIC,aAAc,GAAIC,SAAU,EAAGvF,QAAS,GAAIiF,SAAU,IACvFS,EAAoB,CAC7BtF,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfyB,KAArBiB,EAAQgF,UACR/E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgF,UAER,KAAzBhF,EAAQiF,cACRhF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiF,cAEZ,IAArBjF,EAAQkF,UACRjF,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkF,UAEb,KAApBlF,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,KAArBK,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAE9B3E,GAEXI,OAnB6B,SAmBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKoF,GACrB,MAAO7E,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQgF,SAAWzE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQiF,aAAe1E,EAAOH,SAC9B,MACJ,KAAK,EACDJ,EAAQkF,SAAW3C,GAAahC,EAAO+B,UACvC,MACJ,KAAK,EACDtC,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhD6B,SAgDpB7B,GACL,IAAMa,EAAU,kBAAKoF,GA+BrB,YA9BwBzE,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW/D,OAAO9B,EAAO6F,UAGjChF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAehE,OAAO9B,EAAO8F,cAGrCjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAWzC,OAAOtD,EAAO+F,UAGjClF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,GAEhB5E,GAEXkB,OAlF6B,SAkFtBlB,GACH,IAAMmB,EAAM,GAMZ,YALqBR,IAArBX,EAAQgF,WAA2B7D,EAAI6D,SAAWhF,EAAQgF,eACjCrE,IAAzBX,EAAQiF,eAA+B9D,EAAI8D,aAAejF,EAAQiF,mBAC7CtE,IAArBX,EAAQkF,WAA2B/D,EAAI+D,SAAWlF,EAAQkF,eACtCvE,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,UACnDzD,GAEXC,YA3F6B,SA2FjBjC,GACR,IAAMa,EAAU,kBAAKoF,GA+BrB,YA9BwBzE,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW7F,EAAO6F,SAG1BhF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAe9F,EAAO8F,aAG9BjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAW/F,EAAO+F,SAG1BlF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,GAEhB5E,IAmDTsF,EAAsB,CAAEV,SAAU,GAAIW,MAAO,GAAI5F,QAAS,IACnD6F,EAAkB,CAC3BzF,OAD2B,SACpBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfyB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEf,KAAlB5E,EAAQuF,OACRtF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuF,OAEb,KAApBvF,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAET,IAAxBK,EAAQ/B,KAAK5B,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ/B,MAEP,IAAzB+B,EAAQtB,MAAMrC,QACd4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQtB,OAE7BuB,GAEXI,OAnB2B,SAmBpBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKsF,GACrB,MAAO/E,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQuF,MAAQhF,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOkF,QACtB,MACJ,KAAK,EACDzF,EAAQtB,MAAQ6B,EAAOkF,QACvB,MACJ,QACIlF,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhD2B,SAgDlB7B,GACL,IAAMa,EAAU,kBAAKsF,GAyBrB,YAxBwB3E,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQtE,OAAO9B,EAAOoG,OAG9BvF,EAAQuF,MAAQ,QAEG5E,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,OACpC+B,EAAQ/B,KAAOyH,GAAgBvG,EAAOlB,YAErB0C,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCsB,EAAQtB,MAAQgH,GAAgBvG,EAAOT,QAEpCsB,GAEXkB,OA5E2B,SA4EpBlB,GACH,IAAMmB,EAAM,GAMZ,YALqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACxCjE,IAAlBX,EAAQuF,QAAwBpE,EAAIoE,MAAQvF,EAAQuF,YAChC5E,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACvCgB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO0H,QAAiChF,IAAjBX,EAAQ/B,KAAqB+B,EAAQ/B,KAAO,IAAIuC,kBACxFG,IAAlBX,EAAQtB,QAAwByC,EAAIzC,MAAQiH,QAAkChF,IAAlBX,EAAQtB,MAAsBsB,EAAQtB,MAAQ,IAAI8B,aACvGW,GAEXC,YArF2B,SAqFfjC,GACR,IAAMa,EAAU,kBAAKsF,GA+BrB,YA9BwB3E,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQpG,EAAOoG,MAGvBvF,EAAQuF,MAAQ,QAEG5E,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,IAAIuC,gBAEFG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCsB,EAAQtB,MAAQS,EAAOT,MAGvBsB,EAAQtB,MAAQ,IAAI8B,WAEjBR,IAGT4F,EAA8B,GACvBC,EAA0B,CACnC9F,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAI5B,OAH4B,IAAxBiB,EAAQ8F,KAAKzJ,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ8F,MAE7B7F,GAEXI,OAPmC,SAO5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK4F,GACrB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ8F,KAAOvF,EAAOkF,QACtB,MACJ,QACIlF,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAxBmC,SAwB1B7B,GACL,IAAMa,EAAU,kBAAK4F,GAIrB,YAHoBjF,IAAhBxB,EAAO2G,MAAsC,OAAhB3G,EAAO2G,OACpC9F,EAAQ8F,KAAOJ,GAAgBvG,EAAO2G,OAEnC9F,GAEXkB,OA/BmC,SA+B5BlB,GACH,IAAMmB,EAAM,GAEZ,YADiBR,IAAjBX,EAAQ8F,OAAuB3E,EAAI2E,KAAOH,QAAiChF,IAAjBX,EAAQ8F,KAAqB9F,EAAQ8F,KAAO,IAAItF,aACnGW,GAEXC,YApCmC,SAoCvBjC,GACR,IAAMa,EAAU,kBAAK4F,GAOrB,YANoBjF,IAAhBxB,EAAO2G,MAAsC,OAAhB3G,EAAO2G,KACpC9F,EAAQ8F,KAAO3G,EAAO2G,KAGtB9F,EAAQ8F,KAAO,IAAItF,WAEhBR,IAGT+F,EAAwB,CAAEnB,SAAU,GAAIW,MAAO,GAAI5F,QAAS,GAAIuF,SAAU,GACnEc,EAAoB,CAC7BjG,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAmB5B,MAlByB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEf,KAAlB5E,EAAQuF,OACRtF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuF,OAET,IAAxBvF,EAAQ/B,KAAK5B,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ/B,MAEP,IAAzB+B,EAAQtB,MAAMrC,QACd4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQtB,OAEZ,KAApBsB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,IAArBK,EAAQkF,UACRjF,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkF,UAE9BjF,GAEXI,OAtB6B,SAsBtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK+F,GACrB,MAAOxF,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQuF,MAAQhF,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOkF,QACtB,MACJ,KAAK,EACDzF,EAAQtB,MAAQ6B,EAAOkF,QACvB,MACJ,KAAK,EACDzF,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQkF,SAAW3C,GAAahC,EAAO+B,UACvC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAtD6B,SAsDpB7B,GACL,IAAMa,EAAU,kBAAK+F,GA+BrB,YA9BwBpF,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQtE,OAAO9B,EAAOoG,OAG9BvF,EAAQuF,MAAQ,QAEA5E,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,OACpC+B,EAAQ/B,KAAOyH,GAAgBvG,EAAOlB,YAErB0C,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCsB,EAAQtB,MAAQgH,GAAgBvG,EAAOT,aAEpBiC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAWzC,OAAOtD,EAAO+F,UAGjClF,EAAQkF,SAAW,EAEhBlF,GAEXkB,OAxF6B,SAwFtBlB,GACH,IAAMmB,EAAM,GAOZ,YANqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACxCjE,IAAlBX,EAAQuF,QAAwBpE,EAAIoE,MAAQvF,EAAQuF,YACnC5E,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO0H,QAAiChF,IAAjBX,EAAQ/B,KAAqB+B,EAAQ/B,KAAO,IAAIuC,kBACxFG,IAAlBX,EAAQtB,QAAwByC,EAAIzC,MAAQiH,QAAkChF,IAAlBX,EAAQtB,MAAsBsB,EAAQtB,MAAQ,IAAI8B,kBAC1FG,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQkF,WAA2B/D,EAAI+D,SAAWlF,EAAQkF,UACnD/D,GAEXC,YAlG6B,SAkGjBjC,GACR,IAAMa,EAAU,kBAAK+F,GAqCrB,YApCwBpF,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQpG,EAAOoG,MAGvBvF,EAAQuF,MAAQ,QAEA5E,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,IAAIuC,gBAEFG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCsB,EAAQtB,MAAQS,EAAOT,MAGvBsB,EAAQtB,MAAQ,IAAI8B,gBAEDG,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAW/F,EAAO+F,SAG1BlF,EAAQkF,SAAW,EAEhBlF,IAsDTiG,EAAyB,CAAErB,SAAU,GAAIW,MAAO,GAAI5F,QAAS,IACtDuG,EAAqB,CAC9BnG,OAD8B,SACvBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfyB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEf,KAAlB5E,EAAQuF,OACRtF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQuF,OAET,IAAxBvF,EAAQ/B,KAAK5B,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ/B,MAEP,IAAzB+B,EAAQtB,MAAMrC,QACd4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQtB,OAEZ,KAApBsB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAE9BM,GAEXI,OAnB8B,SAmBvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKiG,GACrB,MAAO1F,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQuF,MAAQhF,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOkF,QACtB,MACJ,KAAK,EACDzF,EAAQtB,MAAQ6B,EAAOkF,QACvB,MACJ,KAAK,EACDzF,EAAQL,QAAUY,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhD8B,SAgDrB7B,GACL,IAAMa,EAAU,kBAAKiG,GAyBrB,YAxBwBtF,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQtE,OAAO9B,EAAOoG,OAG9BvF,EAAQuF,MAAQ,QAEA5E,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,OACpC+B,EAAQ/B,KAAOyH,GAAgBvG,EAAOlB,YAErB0C,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCsB,EAAQtB,MAAQgH,GAAgBvG,EAAOT,aAEpBiC,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,GAEfK,GAEXkB,OA5E8B,SA4EvBlB,GACH,IAAMmB,EAAM,GAMZ,YALqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACxCjE,IAAlBX,EAAQuF,QAAwBpE,EAAIoE,MAAQvF,EAAQuF,YACnC5E,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO0H,QAAiChF,IAAjBX,EAAQ/B,KAAqB+B,EAAQ/B,KAAO,IAAIuC,kBACxFG,IAAlBX,EAAQtB,QAAwByC,EAAIzC,MAAQiH,QAAkChF,IAAlBX,EAAQtB,MAAsBsB,EAAQtB,MAAQ,IAAI8B,kBAC1FG,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,SACjDwB,GAEXC,YArF8B,SAqFlBjC,GACR,IAAMa,EAAU,kBAAKiG,GA+BrB,YA9BwBtF,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOoG,OAAwC,OAAjBpG,EAAOoG,MACrCvF,EAAQuF,MAAQpG,EAAOoG,MAGvBvF,EAAQuF,MAAQ,QAEA5E,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,IAAIuC,gBAEFG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCsB,EAAQtB,MAAQS,EAAOT,MAGvBsB,EAAQtB,MAAQ,IAAI8B,gBAEDG,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,GAEfK,IAmFTmG,EAAiB,CAAE1C,GAAI,GAAI3B,QAAS,GAAI7D,KAAM,GAAIgG,IAAK,GAAIpI,KAAM,GAAI8H,OAAQ,IACtEyC,EAAa,CACtBrG,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAmB5B,MAlBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEb,KAApBzD,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEhB,KAAjB9B,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEjB,KAAhB+B,EAAQiE,KACRhE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiE,KAEhB,KAAjBjE,EAAQnE,MACRoE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQnE,MAEd,KAAnBmE,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAE9B1D,GAEXI,OAtBsB,SAsBfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKmG,GACrB,MAAO5F,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQiE,IAAM1D,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQnE,KAAO0E,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAtDsB,SAsDb7B,GACL,IAAMa,EAAU,kBAAKmG,GAqCrB,YApCkBxF,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAMhD,OAAO9B,EAAO8E,KAG5BjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOoF,OAAO9B,EAAOtD,MAG7BmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,GAEd3D,GAEXkB,OA9FsB,SA8FflB,GACH,IAAMmB,EAAM,GAOZ,YANeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC1B9C,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACvCnB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAClC0C,IAAhBX,EAAQiE,MAAsB9C,EAAI8C,IAAMjE,EAAQiE,UAC/BtD,IAAjBX,EAAQnE,OAAuBsF,EAAItF,KAAOmE,EAAQnE,WAC/B8E,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,QAC/CxC,GAEXC,YAxGsB,SAwGVjC,GACR,IAAMa,EAAU,kBAAKmG,GAqCrB,YApCkBxF,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAM9E,EAAO8E,IAGrBjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOsD,EAAOtD,KAGtBmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,GAEd3D,IAmCTqG,EAAiB,CAAE5C,GAAI,GAAI3B,QAAS,GAAI7D,KAAM,GAAIgG,IAAK,GAAIpI,KAAM,GAAI8H,OAAQ,GAAI5B,UAAW,IACrFuE,EAAa,CACtBvG,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEb,KAApBzD,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEhB,KAAjB9B,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEjB,KAAhB+B,EAAQiE,KACRhE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiE,KAEhB,KAAjBjE,EAAQnE,MACRoE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQnE,MAEd,KAAnBmE,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAEX,KAAtB3D,EAAQ+B,WACR9B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+B,WAE9B9B,GAEXI,OAzBsB,SAyBfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKqG,GACrB,MAAO9F,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQiE,IAAM1D,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQnE,KAAO0E,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ+B,UAAYxB,EAAOH,SAC3B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5DsB,SA4Db7B,GACL,IAAMa,EAAU,kBAAKqG,GA2CrB,YA1CkB1F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAMhD,OAAO9B,EAAO8E,KAG5BjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOoF,OAAO9B,EAAOtD,MAG7BmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAYd,OAAO9B,EAAO4C,WAGlC/B,EAAQ+B,UAAY,GAEjB/B,GAEXkB,OA1GsB,SA0GflB,GACH,IAAMmB,EAAM,GAQZ,YAPeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC1B9C,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACvCnB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAClC0C,IAAhBX,EAAQiE,MAAsB9C,EAAI8C,IAAMjE,EAAQiE,UAC/BtD,IAAjBX,EAAQnE,OAAuBsF,EAAItF,KAAOmE,EAAQnE,WAC/B8E,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,aAChChD,IAAtBX,EAAQ+B,YAA4BZ,EAAIY,UAAY/B,EAAQ+B,WACrDZ,GAEXC,YArHsB,SAqHVjC,GACR,IAAMa,EAAU,kBAAKqG,GA2CrB,YA1CkB1F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEFnB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAM9E,EAAO8E,IAGrBjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOsD,EAAOtD,KAGtBmE,EAAQnE,KAAO,QAEG8E,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAY5C,EAAO4C,UAG3B/B,EAAQ+B,UAAY,GAEjB/B,IAmCTuG,EAAiB,CAAE9C,GAAI,GAAI3B,QAAS,GAAI6B,OAAQ,IACzC6C,EAAa,CACtBzG,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEb,KAApBzD,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAEd,KAAnB9B,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAE9B1D,GAEXI,OAbsB,SAafC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKuG,GACrB,MAAOhG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApCsB,SAoCb7B,GACL,IAAMa,EAAU,kBAAKuG,GAmBrB,YAlBkB5F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEAnB,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,GAEd3D,GAEXkB,OA1DsB,SA0DflB,GACH,IAAMmB,EAAM,GAIZ,YAHeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC1B9C,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,cACrCnB,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,QAC/CxC,GAEXC,YAjEsB,SAiEVjC,GACR,IAAMa,EAAU,kBAAKuG,GAmBrB,YAlBkB5F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEM9C,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEAnB,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,GAEd3D,IAmCTyG,EAAuB,CAAEhD,GAAI,GAAIE,OAAQ,GAAI5B,UAAW,IACjD2E,EAAmB,CAC5B3G,OAD4B,SACrBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEd,KAAnBzD,EAAQ2D,QACR1D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2D,QAEX,KAAtB3D,EAAQ+B,WACR9B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+B,WAE9B9B,GAEXI,OAb4B,SAarBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKyG,GACrB,MAAOlG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ2D,OAASpD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ+B,UAAYxB,EAAOH,SAC3B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApC4B,SAoCnB7B,GACL,IAAMa,EAAU,kBAAKyG,GAmBrB,YAlBkB9F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEK9C,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAAS1C,OAAO9B,EAAOwE,QAG/B3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAYd,OAAO9B,EAAO4C,WAGlC/B,EAAQ+B,UAAY,GAEjB/B,GAEXkB,OA1D4B,SA0DrBlB,GACH,IAAMmB,EAAM,GAIZ,YAHeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC3B9C,IAAnBX,EAAQ2D,SAAyBxC,EAAIwC,OAAS3D,EAAQ2D,aAChChD,IAAtBX,EAAQ+B,YAA4BZ,EAAIY,UAAY/B,EAAQ+B,WACrDZ,GAEXC,YAjE4B,SAiEhBjC,GACR,IAAMa,EAAU,kBAAKyG,GAmBrB,YAlBkB9F,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEK9C,IAAlBxB,EAAOwE,QAA0C,OAAlBxE,EAAOwE,OACtC3D,EAAQ2D,OAASxE,EAAOwE,OAGxB3D,EAAQ2D,OAAS,QAEIhD,IAArBxB,EAAO4C,WAAgD,OAArB5C,EAAO4C,UACzC/B,EAAQ+B,UAAY5C,EAAO4C,UAG3B/B,EAAQ+B,UAAY,GAEjB/B,IAmCT2G,EAA8B,GACvBC,GAA0B,CACnC7G,OADmC,SAC5BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAI5B,OAH4B,IAAxBiB,EAAQ8F,KAAKzJ,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ8F,MAE7B7F,GAEXI,OAPmC,SAO5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK2G,GACrB,MAAOpG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ8F,KAAOvF,EAAOkF,QACtB,MACJ,QACIlF,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAxBmC,SAwB1B7B,GACL,IAAMa,EAAU,kBAAK2G,GAIrB,YAHoBhG,IAAhBxB,EAAO2G,MAAsC,OAAhB3G,EAAO2G,OACpC9F,EAAQ8F,KAAOJ,GAAgBvG,EAAO2G,OAEnC9F,GAEXkB,OA/BmC,SA+B5BlB,GACH,IAAMmB,EAAM,GAEZ,YADiBR,IAAjBX,EAAQ8F,OAAuB3E,EAAI2E,KAAOH,QAAiChF,IAAjBX,EAAQ8F,KAAqB9F,EAAQ8F,KAAO,IAAItF,aACnGW,GAEXC,YApCmC,SAoCvBjC,GACR,IAAMa,EAAU,kBAAK2G,GAOrB,YANoBhG,IAAhBxB,EAAO2G,MAAsC,OAAhB3G,EAAO2G,KACpC9F,EAAQ8F,KAAO3G,EAAO2G,KAGtB9F,EAAQ8F,KAAO,IAAItF,WAEhBR,IAGT6G,GAAkB,CACpBlH,QAAS,GACT1B,KAAM,GACN6I,YAAa,GACbC,MAAO,GACP3C,MAAO,GACP4C,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,sBAAuB,GACvB7F,IAAK,GACL8F,KAAM,GACNC,wBAAwB,EACxBC,QAAS,IAEAC,GAAc,CACvBxH,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAwC5B,MAvCwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEhB,KAAjBK,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAET,KAAxB+B,EAAQ8G,aACR7G,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8G,aAEf,KAAlB9G,EAAQ+G,OACR9G,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+G,OAEf,KAAlB/G,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAEd,KAAnBpE,EAAQgH,QACR/G,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgH,QAEb,KAApBhH,EAAQiH,SACRhH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiH,SAEf,KAAlBjH,EAAQkH,OACRjH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQkH,OAEC,KAAlClH,EAAQmH,uBACRlH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQmH,uBAEjB,KAAhBnH,EAAQsB,KACRrB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsB,KAEhB,KAAjBtB,EAAQoH,MACRnH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoH,OAEE,IAAnCpH,EAAQqH,wBACRpH,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQqH,wBAEX,KAApBrH,EAAQsH,SACRrH,EAAOE,OAAO,KAAKC,OAAOJ,EAAQsH,SAE/BrH,GAEXI,OA3CuB,SA2ChBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK6G,IACrB,MAAOtG,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ8G,YAAcvG,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQ+G,MAAQxG,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQgH,OAASzG,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQiH,QAAU1G,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQkH,MAAQ3G,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQmH,sBAAwB5G,EAAOH,SACvC,MACJ,KAAK,GACDJ,EAAQsB,IAAMf,EAAOH,SACrB,MACJ,KAAK,GACDJ,EAAQoH,KAAO7G,EAAOH,SACtB,MACJ,KAAK,GACDJ,EAAQqH,uBAAyB9G,EAAO8B,OACxC,MACJ,KAAK,GACDrC,EAAQsH,QAAU/G,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhGuB,SAgGd7B,GACL,IAAMa,EAAU,kBAAK6G,IA+ErB,YA9EuBlG,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEQ0C,IAAvBxB,EAAO2H,aAAoD,OAAvB3H,EAAO2H,YAC3C9G,EAAQ8G,YAAc7F,OAAO9B,EAAO2H,aAGpC9G,EAAQ8G,YAAc,QAELnG,IAAjBxB,EAAO4H,OAAwC,OAAjB5H,EAAO4H,MACrC/G,EAAQ+G,MAAQ9F,OAAO9B,EAAO4H,OAG9B/G,EAAQ+G,MAAQ,QAECpG,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEEzD,IAAlBxB,EAAO6H,QAA0C,OAAlB7H,EAAO6H,OACtChH,EAAQgH,OAAS/F,OAAO9B,EAAO6H,QAG/BhH,EAAQgH,OAAS,QAEErG,IAAnBxB,EAAO8H,SAA4C,OAAnB9H,EAAO8H,QACvCjH,EAAQiH,QAAUhG,OAAO9B,EAAO8H,SAGhCjH,EAAQiH,QAAU,QAEDtG,IAAjBxB,EAAO+H,OAAwC,OAAjB/H,EAAO+H,MACrClH,EAAQkH,MAAQjG,OAAO9B,EAAO+H,OAG9BlH,EAAQkH,MAAQ,QAEiBvG,IAAjCxB,EAAOgI,uBAAwE,OAAjChI,EAAOgI,sBACrDnH,EAAQmH,sBAAwBlG,OAAO9B,EAAOgI,uBAG9CnH,EAAQmH,sBAAwB,QAEjBxG,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAML,OAAO9B,EAAOmC,KAG5BtB,EAAQsB,IAAM,QAEEX,IAAhBxB,EAAOiI,MAAsC,OAAhBjI,EAAOiI,KACpCpH,EAAQoH,KAAOnG,OAAO9B,EAAOiI,MAG7BpH,EAAQoH,KAAO,QAEmBzG,IAAlCxB,EAAOkI,wBAA0E,OAAlClI,EAAOkI,uBACtDrH,EAAQqH,uBAAyB7E,QAAQrD,EAAOkI,wBAGhDrH,EAAQqH,wBAAyB,OAEd1G,IAAnBxB,EAAOmI,SAA4C,OAAnBnI,EAAOmI,QACvCtH,EAAQsH,QAAUrG,OAAO9B,EAAOmI,SAGhCtH,EAAQsH,QAAU,GAEftH,GAEXkB,OAlLuB,SAkLhBlB,GACH,IAAMmB,EAAM,GAcZ,YAboBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACvCgB,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAC1B0C,IAAxBX,EAAQ8G,cAA8B3F,EAAI2F,YAAc9G,EAAQ8G,kBAC9CnG,IAAlBX,EAAQ+G,QAAwB5F,EAAI4F,MAAQ/G,EAAQ+G,YAClCpG,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YACjCzD,IAAnBX,EAAQgH,SAAyB7F,EAAI6F,OAAShH,EAAQgH,aAClCrG,IAApBX,EAAQiH,UAA0B9F,EAAI8F,QAAUjH,EAAQiH,cACtCtG,IAAlBX,EAAQkH,QAAwB/F,EAAI+F,MAAQlH,EAAQkH,YAClBvG,IAAlCX,EAAQmH,wBAAwChG,EAAIgG,sBAAwBnH,EAAQmH,4BACpExG,IAAhBX,EAAQsB,MAAsBH,EAAIG,IAAMtB,EAAQsB,UAC/BX,IAAjBX,EAAQoH,OAAuBjG,EAAIiG,KAAOpH,EAAQoH,WACfzG,IAAnCX,EAAQqH,yBAAyClG,EAAIkG,uBAAyBrH,EAAQqH,6BAClE1G,IAApBX,EAAQsH,UAA0BnG,EAAImG,QAAUtH,EAAQsH,SACjDnG,GAEXC,YAnMuB,SAmMXjC,GACR,IAAMa,EAAU,kBAAK6G,IA+ErB,YA9EuBlG,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEQ0C,IAAvBxB,EAAO2H,aAAoD,OAAvB3H,EAAO2H,YAC3C9G,EAAQ8G,YAAc3H,EAAO2H,YAG7B9G,EAAQ8G,YAAc,QAELnG,IAAjBxB,EAAO4H,OAAwC,OAAjB5H,EAAO4H,MACrC/G,EAAQ+G,MAAQ5H,EAAO4H,MAGvB/G,EAAQ+G,MAAQ,QAECpG,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEEzD,IAAlBxB,EAAO6H,QAA0C,OAAlB7H,EAAO6H,OACtChH,EAAQgH,OAAS7H,EAAO6H,OAGxBhH,EAAQgH,OAAS,QAEErG,IAAnBxB,EAAO8H,SAA4C,OAAnB9H,EAAO8H,QACvCjH,EAAQiH,QAAU9H,EAAO8H,QAGzBjH,EAAQiH,QAAU,QAEDtG,IAAjBxB,EAAO+H,OAAwC,OAAjB/H,EAAO+H,MACrClH,EAAQkH,MAAQ/H,EAAO+H,MAGvBlH,EAAQkH,MAAQ,QAEiBvG,IAAjCxB,EAAOgI,uBAAwE,OAAjChI,EAAOgI,sBACrDnH,EAAQmH,sBAAwBhI,EAAOgI,sBAGvCnH,EAAQmH,sBAAwB,QAEjBxG,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAMnC,EAAOmC,IAGrBtB,EAAQsB,IAAM,QAEEX,IAAhBxB,EAAOiI,MAAsC,OAAhBjI,EAAOiI,KACpCpH,EAAQoH,KAAOjI,EAAOiI,KAGtBpH,EAAQoH,KAAO,QAEmBzG,IAAlCxB,EAAOkI,wBAA0E,OAAlClI,EAAOkI,uBACtDrH,EAAQqH,uBAAyBlI,EAAOkI,uBAGxCrH,EAAQqH,wBAAyB,OAEd1G,IAAnBxB,EAAOmI,SAA4C,OAAnBnI,EAAOmI,QACvCtH,EAAQsH,QAAUnI,EAAOmI,QAGzBtH,EAAQsH,QAAU,GAEftH,IAsDTwH,GAAc,CAAE7H,QAAS,GAAI8H,KAAM,GAAIC,QAAS,GAAI9I,KAAM,GAAI+I,KAAM,GAAIC,YAAa,GAAItG,IAAK,GAAI8F,KAAM,IACjGS,GAAU,CACnB9H,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAyB5B,MAxBwB,KAApBiB,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEhB,KAAjBK,EAAQyH,MACRxH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyH,MAEb,KAApBzH,EAAQ0H,SACRzH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ0H,SAEhB,KAAjB1H,EAAQpB,MACRqB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQpB,MAEhB,KAAjBoB,EAAQ2H,MACR1H,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2H,MAET,KAAxB3H,EAAQ4H,aACR3H,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4H,aAEjB,KAAhB5H,EAAQsB,KACRrB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsB,KAEhB,KAAjBtB,EAAQoH,MACRnH,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoH,MAE9BnH,GAEXI,OA5BmB,SA4BZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKwH,IACrB,MAAOjH,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQyH,KAAOlH,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ0H,QAAUnH,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQpB,KAAO2B,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ2H,KAAOpH,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ4H,YAAcrH,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQsB,IAAMf,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQoH,KAAO7G,EAAOH,SACtB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlEmB,SAkEV7B,GACL,IAAMa,EAAU,kBAAKwH,IAiDrB,YAhDuB7G,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOsI,MAAsC,OAAhBtI,EAAOsI,KACpCzH,EAAQyH,KAAOxG,OAAO9B,EAAOsI,MAG7BzH,EAAQyH,KAAO,QAEI9G,IAAnBxB,EAAOuI,SAA4C,OAAnBvI,EAAOuI,QACvC1H,EAAQ0H,QAAUzG,OAAO9B,EAAOuI,SAGhC1H,EAAQ0H,QAAU,QAEF/G,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCoB,EAAQpB,KAAOqC,OAAO9B,EAAOP,MAG7BoB,EAAQpB,KAAO,QAEC+B,IAAhBxB,EAAOwI,MAAsC,OAAhBxI,EAAOwI,KACpC3H,EAAQ2H,KAAO1G,OAAO9B,EAAOwI,MAG7B3H,EAAQ2H,KAAO,QAEQhH,IAAvBxB,EAAOyI,aAAoD,OAAvBzI,EAAOyI,YAC3C5H,EAAQ4H,YAAc3G,OAAO9B,EAAOyI,aAGpC5H,EAAQ4H,YAAc,QAEPjH,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAML,OAAO9B,EAAOmC,KAG5BtB,EAAQsB,IAAM,QAEEX,IAAhBxB,EAAOiI,MAAsC,OAAhBjI,EAAOiI,KACpCpH,EAAQoH,KAAOnG,OAAO9B,EAAOiI,MAG7BpH,EAAQoH,KAAO,GAEZpH,GAEXkB,OAtHmB,SAsHZlB,GACH,IAAMmB,EAAM,GASZ,YARoBR,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACvCgB,IAAjBX,EAAQyH,OAAuBtG,EAAIsG,KAAOzH,EAAQyH,WAC9B9G,IAApBX,EAAQ0H,UAA0BvG,EAAIuG,QAAU1H,EAAQ0H,cACvC/G,IAAjBX,EAAQpB,OAAuBuC,EAAIvC,KAAOoB,EAAQpB,WACjC+B,IAAjBX,EAAQ2H,OAAuBxG,EAAIwG,KAAO3H,EAAQ2H,WAC1BhH,IAAxBX,EAAQ4H,cAA8BzG,EAAIyG,YAAc5H,EAAQ4H,kBAChDjH,IAAhBX,EAAQsB,MAAsBH,EAAIG,IAAMtB,EAAQsB,UAC/BX,IAAjBX,EAAQoH,OAAuBjG,EAAIiG,KAAOpH,EAAQoH,MAC3CjG,GAEXC,YAlImB,SAkIPjC,GACR,IAAMa,EAAU,kBAAKwH,IAiDrB,YAhDuB7G,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEFgB,IAAhBxB,EAAOsI,MAAsC,OAAhBtI,EAAOsI,KACpCzH,EAAQyH,KAAOtI,EAAOsI,KAGtBzH,EAAQyH,KAAO,QAEI9G,IAAnBxB,EAAOuI,SAA4C,OAAnBvI,EAAOuI,QACvC1H,EAAQ0H,QAAUvI,EAAOuI,QAGzB1H,EAAQ0H,QAAU,QAEF/G,IAAhBxB,EAAOP,MAAsC,OAAhBO,EAAOP,KACpCoB,EAAQpB,KAAOO,EAAOP,KAGtBoB,EAAQpB,KAAO,QAEC+B,IAAhBxB,EAAOwI,MAAsC,OAAhBxI,EAAOwI,KACpC3H,EAAQ2H,KAAOxI,EAAOwI,KAGtB3H,EAAQ2H,KAAO,QAEQhH,IAAvBxB,EAAOyI,aAAoD,OAAvBzI,EAAOyI,YAC3C5H,EAAQ4H,YAAczI,EAAOyI,YAG7B5H,EAAQ4H,YAAc,QAEPjH,IAAfxB,EAAOmC,KAAoC,OAAfnC,EAAOmC,IACnCtB,EAAQsB,IAAMnC,EAAOmC,IAGrBtB,EAAQsB,IAAM,QAEEX,IAAhBxB,EAAOiI,MAAsC,OAAhBjI,EAAOiI,KACpCpH,EAAQoH,KAAOjI,EAAOiI,KAGtBpH,EAAQoH,KAAO,GAEZpH,IAoKX8H,GAAc,WACd,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZC,GAAOH,GAAWG,MAAS,SAACC,GAAD,OAASJ,GAAWK,OAAOf,KAAKc,EAAK,UAAUE,SAAS,WACzF,SAAS1C,GAAgBwC,GAGrB,IAFA,IAAMG,EAAMJ,GAAKC,GACXI,EAAM,IAAI9H,WAAW6H,EAAIhM,QACtBF,EAAI,EAAGA,EAAIkM,EAAIhM,SAAUF,EAC9BmM,EAAInM,GAAKkM,EAAIE,WAAWpM,GAE5B,OAAOmM,EAEX,IAAME,GAAOV,GAAWU,MAAS,SAACH,GAAD,OAASP,GAAWK,OAAOf,KAAKiB,EAAK,UAAUD,SAAS,WACzF,SAASzC,GAAgB2C,GAErB,IADA,IAAMD,EAAM,GACHlM,EAAI,EAAGA,EAAImM,EAAIG,aAActM,EAClCkM,EAAI1L,KAAKsE,OAAOyH,aAAaJ,EAAInM,KAErC,OAAOqM,GAAKH,EAAIM,KAAK,KAEzB,SAASpG,GAAaqG,GAClB,GAAIA,EAAKC,GAAGpG,OAAOqG,kBACf,MAAM,IAAIhB,GAAWiB,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,0gBC79IQ,EAAAC,a,yBAAX,gCAUM,SATL,yBAA2E,GAAjEC,IAAI,SAAc,iBAAe,+BAAE,EAAAC,MAAMC,KAAKC,mB,UACxD,yBAOW,QANOC,QAAO,sBACvB,iBAAW,CAAX,yBAAW,OAEK/B,QAAO,sBACvB,iBAAe,CAAf,yBAAe,O,iGCChB,gCAA2B,OAAtBgC,MAAM,WAAS,U,EAYpB,gCAAwC,OAAnCA,MAAM,WAAU,iBAAa,G,mSApBpC,yBAsBY,GArBN,cAAY,+BAAE,EAAAC,aAAW,IACzB,eAAa,+BAAE,EAAAA,aAAW,K,CAEdC,QAAO,sBACvB,iBAAyD,CAAzD,yBAAyD,GAA7CC,KAAK,IAAIC,KAAK,YAAYC,KAAK,cAC3C,yBAA2D,GAA/CF,KAAK,SAASC,KAAK,cAAcC,KAAK,SAClD,yBAAmE,GAAvDF,KAAK,YAAYC,KAAK,WAAWC,KAAK,iBAClD,EACA,yBAKE,GAJDC,KAAK,yCACLC,OAAO,SACPH,KAAK,gBACLC,KAAK,aAGUG,OAAM,sBACtB,iBAAuC,CAAvC,yBAAuC,GAAzBC,SAAU,EAAAR,aAAW,qBACnC,yBAAuC,GAAzBQ,SAAU,EAAAR,aAAW,qBACnC,yBAAsC,GAAzBQ,SAAU,EAAAR,aAAW,qBAClC,M,MAMY,OACd1L,KAAM,UACNpC,KAFc,WAGb,MAAO,CACN8N,aAAa,IAGfS,SAAU,CACTC,UADS,WAER,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,cCjC3C,EAAOC,OAAS,EAED,QFoBA,GACdC,WAAY,CACXC,WAED9O,KAJc,WAKb,MAAO,CACNuN,aAAa,IAGfgB,SAAU,CACTC,UADS,WAER,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,aAGpCI,QAdQ,WAcE,wKACT,EAAKL,OAAOM,SAAS,mBADZ,OAEf,EAAKzB,aAAc,EAFJ,8CAIhB0B,cAlBc,SAkBAC,GAEb,OADAC,QAAQC,IAAIF,IACL,I,UGxCT,EAAON,OAASA,EAED,ICGJS,EDHI,I,sYCIf,SAAWA,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,IAAgBA,EAAc,KAC1B,IAAMC,EAAb,WACI,aAA4B,aAAhBC,EAAgB,uDAAJ,GAAI,uBACxBd,KAAKe,QAAU,GACff,KAAKgB,aAAe,KACpBhB,KAAKiB,eAAiB,KACtBjB,KAAKkB,iBAAmB,IAAIC,IAC5BnB,KAAKoB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpBxB,KAAKyB,gBAAkB,SAAClQ,GACpB,EAAKyP,aAAezP,GAExByO,KAAK0B,mBAAL,sBACKd,EAAYe,MAAO,SAAC3L,GAAD,OAAqB,OAAVA,GAAoC,WAAjB,eAAOA,IAAuC,kBAAVA,EAA8CA,EAAxB4L,KAAKC,UAAU7L,MAD/H,iBAEK4K,EAAYkB,UAAW,SAAC9L,GAAD,OAAWhE,OAAO+P,KAAK/L,GAAS,IAAIgM,QAAO,SAACzQ,EAAMmD,GAEtE,OADAnD,EAAK0Q,OAAOvN,EAAKsB,EAAMtB,IAChBnD,IACR,IAAIuQ,aALX,iBAMKlB,EAAYsB,YAAa,SAAClM,GAAD,OAAW,EAAKmM,cAAcnM,MAN5D,GAQAgK,KAAKoC,kBAAoB,SAACC,GACtB,GAAI,EAAKnB,iBAAiBoB,IAAID,GAAc,CACxC,IAAME,EAAkB,EAAKrB,iBAAiBlN,IAAIqO,GAClD,OAAIE,EACOA,EAAgBC,YAE3B,EAEJ,IAAMD,EAAkB,IAAIE,gBAE5B,OADA,EAAKvB,iBAAiBwB,IAAIL,EAAaE,GAChCA,EAAgBC,QAE3BxC,KAAK2C,aAAe,SAACN,GACjB,IAAME,EAAkB,EAAKrB,iBAAiBlN,IAAIqO,GAC9CE,IACAA,EAAgBK,QAChB,EAAK1B,iBAAiB2B,OAAOR,KAGrCrC,KAAK8C,QAAU,YAA2F,IAAxFC,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQ7F,EAA0E,EAA1EA,KAAM8F,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,MAA8D,IAAvDC,cAAuD,MAA9C,OAA8C,EAAtCpC,EAAsC,EAAtCA,QAASsB,EAA6B,EAA7BA,YAAgBe,EAAa,oBAChGC,EAAgBL,GAAU,EAAK/B,gBAAkB,EAAKA,eAAe,EAAKD,eAAkB,GAC5FsC,EAAgB,EAAKC,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS,EAAKf,cAAce,GAC1CO,EAAmB,EAAK/B,kBAAkBuB,GAAQrC,EAAYe,MACpE,OAAO+B,MAAM,GAAD,OAAI3C,GAAW,EAAKA,SAAW,IAA/B,OAAoC5D,GAApC,OAA2CqG,EAAc,IAAH,OAAOA,GAAgB,IAA7E,eAAC,kBACNF,GADK,IAERhC,QAAS,iCACD2B,GAAQA,IAASrC,EAAYkB,SAAW,CAAE,eAAgBmB,GAAS,IACnEK,EAAchC,SAAW,IAEjCkB,OAAQH,EAAc,EAAKD,kBAAkBC,QAAe,EAC5DU,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOU,EAAiBV,MAC9EY,KARI,yDAQC,WAAOC,GAAP,gGACE3P,EAAI2P,EACV3P,EAAE1C,KAAO,KACT0C,EAAE4P,MAAQ,KAHN,SAIeD,EAAST,KACvBQ,MAAK,SAACpS,GAOP,OANI0C,EAAE6P,GACF7P,EAAE1C,KAAOA,EAGT0C,EAAE4P,MAAQtS,EAEP0C,KAEN8P,OAAM,SAACnL,GAER,OADA3E,EAAE4P,MAAQjL,EACH3E,KAhBP,UAIE1C,EAJF,OAkBA8Q,GACA,EAAKnB,iBAAiB2B,OAAOR,GAE5BuB,EAASE,GArBV,sBAsBMvS,EAtBN,gCAuBGA,GAvBH,4CARD,wDAkCXS,OAAOgS,OAAOhE,KAAMc,GAjF5B,oDAmFI,SAAcoC,EAAOxO,GACjB,IAAMN,EAAQ8O,EAAMxO,GACpB,OAAQuP,mBAAmBvP,GACvB,IACAuP,mBAAmBC,MAAMC,QAAQ/P,GAASA,EAAMiK,KAAK,KAAwB,kBAAVjK,EAAqBA,EAA5B,UAAuCA,MAvF/G,2BAyFI,SAAcgQ,GAAU,WACdlB,EAAQkB,GAAY,GACpBrC,EAAO/P,OAAO+P,KAAKmB,GAAOmB,QAAO,SAAC3P,GAAD,MAAS,qBAAuBwO,EAAMxO,MAC7E,OAAOqN,EACFlJ,KAAI,SAACnE,GAAD,MAA+B,WAAtB,eAAOwO,EAAMxO,KAAsBwP,MAAMC,QAAQjB,EAAMxO,IAEnE,EAAK4P,cAAcpB,EAAOxO,GAD1B,EAAKyN,cAAce,EAAMxO,OAE1B2J,KAAK,OAhGlB,4BAkGI,SAAe+F,GACX,IAAMZ,EAAcxD,KAAKmC,cAAciC,GACvC,OAAOZ,EAAc,IAAH,OAAOA,GAAgB,KApGjD,gCAsGI,SAAmBe,EAASC,GACxB,sEACOxE,KAAKoB,eACLmD,GACCC,GAAW,IAHnB,IAIIlD,QAAS,gDACDtB,KAAKoB,cAAcE,SAAW,IAC9BiD,EAAQjD,SAAW,IAClBkD,GAAWA,EAAQlD,SAAY,UA9GpD,KAuHamD,EAAb,wDACI,aAAc,oCACV,eAASC,WAST,EAAKC,kBAAoB,SAACxL,GAAD,IAAKiK,EAAL,uDAAc,GAAd,OAAqB,EAAKN,QAAL,gBAC1C3F,KAAM,gCAAF,OAAkChE,GACtCyL,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKyB,mBAAqB,SAACC,GAAD,IAAU1B,EAAV,uDAAmB,GAAnB,OAA0B,EAAKN,QAAL,gBAChD3F,KAAM,sBAAF,OAAwB2H,GAC5BF,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK2B,mBAAqB,SAACD,GAAD,IAAU1B,EAAV,uDAAmB,GAAnB,OAA0B,EAAKN,QAAL,gBAChD3F,KAAM,sBAAF,OAAwB2H,EAAxB,eACJF,OAAQ,MACRzB,OAAQ,QACLC,KASP,EAAK4B,eAAiB,SAACrR,GAAD,IAAOyP,EAAP,uDAAgB,GAAhB,OAAuB,EAAKN,QAAL,gBACzC3F,KAAM,sBAAF,OAAwBxJ,GAC5BiR,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAK6B,gBAAkB,SAACzN,EAAS0L,GAAV,IAAiBE,EAAjB,uDAA0B,GAA1B,OAAiC,EAAKN,QAAL,gBACpD3F,KAAM,0BAAF,OAA4B3F,GAChCoN,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK8B,YAAc,SAAChC,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKN,QAAL,gBACvC3F,KAAM,oBACNyH,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAK+B,WAAa,SAAC3N,GAAD,IAAU4L,EAAV,uDAAmB,GAAnB,OAA0B,EAAKN,QAAL,gBACxC3F,KAAM,qBAAF,OAAuB3F,GAC3BoN,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKgC,WAAa,SAAClC,GAAD,IAAQE,EAAR,uDAAiB,GAAjB,OAAwB,EAAKN,QAAL,gBACtC3F,KAAM,kBACNyH,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKiC,YAAc,SAAC7N,EAAS8N,GAAV,IAAmBlC,EAAnB,uDAA4B,GAA5B,OAAmC,EAAKN,QAAL,gBAClD3F,KAAM,mBAAF,OAAqB3F,EAArB,YAAgC8N,GACpCV,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKmC,cAAgB,SAACrO,EAAKgM,GAAN,IAAaE,EAAb,uDAAsB,GAAtB,OAA6B,EAAKN,QAAL,gBAC9C3F,KAAM,mBAAF,OAAqBjG,GACzB0N,OAAQ,MACR1B,MAAOA,EACPC,OAAQ,QACLC,KAUP,EAAKoC,qBAAuB,SAACtO,EAAKU,GAAN,IAAawL,EAAb,uDAAsB,GAAtB,OAA6B,EAAKN,QAAL,gBACrD3F,KAAM,kBAAF,OAAoBjG,EAApB,YAA2BU,GAC/BgN,OAAQ,MACRzB,OAAQ,QACLC,KAUP,EAAKqC,kBAAoB,SAACvO,EAAKiG,GAAN,IAAYiG,EAAZ,uDAAqB,GAArB,OAA4B,EAAKN,QAAL,gBACjD3F,KAAM,UAAF,OAAYjG,EAAZ,YAAmBiG,GACvByH,OAAQ,MACRzB,OAAQ,QACLC,KASP,EAAKsC,mBAAqB,SAAC/R,GAAD,IAAOyP,EAAP,uDAAgB,GAAhB,OAAuB,EAAKN,QAAL,gBAC7C3F,KAAM,SAAF,OAAWxJ,EAAX,aACJiR,OAAQ,MACRzB,OAAQ,QACLC,KAxLG,EADlB,UAAyBvC,G,YC9GnB8E,EAAQ,CACV,CAAC,+EAAgFvJ,QACjF,CAAC,8EAA+E/D,QAChF,CAAC,4EAA6EoB,QAC9E,CAAC,yEAA0EyC,QAC3E,CAAC,gFAAiFnB,QAClF,CAAC,iFAAkFa,QACnF,CAAC,6EAA8E3C,QAC/E,CAAC,yEAA0E+C,QAC3E,CAAC,2EAA4E3E,QAC7E,CAAC,+EAAgFwD,QACjF,CAAC,0EAA2EoC,QAC5E,CAAC,6EAA8EzC,QAC/E,CAAC,2EAA4ErD,QAC7E,CAAC,oFAAqFW,QACtF,CAAC,6EAA8E8B,QAC/E,CAAC,yEAA0EkC,QAC3E,CAAC,2EAA4EvD,QAC7E,CAAC,qFAAsFI,QACvF,CAAC,gFAAiF+C,QAClF,CAAC,2EAA4ElG,QAC7E,CAAC,sEAAuE+H,SAE/DqI,EAAqB,IAAInH,MAAM,sBACtCoH,EAAW,IAAIC,cAASH,GACxBI,EAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,EAAQ,yDAAG,WAAOC,GAAP,6IAAgC,CAAEC,KAAM,0BAAjBA,EAAvB,EAAiBA,KACzBD,EADQ,sBAEHP,EAFG,uBAGQS,2BAAsBC,kBAAkBF,EAAMD,EAAQ,CAAEN,aAHhE,cAGPU,EAHO,gBAIcJ,EAAOK,cAJrB,cAIL1B,EAJK,OAIoC,GAAzCA,QAJK,kBAKN,CACH2B,iBAAkB,SAACC,GAAD,6DAAuB,CAAEC,IAAKZ,EAAYa,KAAM,IAAvCD,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OAAyDL,EAAOE,iBAAiB3B,EAAS4B,EAAMC,EAAKC,IACvHC,iBAAkB,SAACtV,GAAD,MAAW,CAAEuV,QAAS,+EAAgF1S,MAAO7C,IAC/HwV,gBAAiB,SAACxV,GAAD,MAAW,CAAEuV,QAAS,8EAA+E1S,MAAO7C,IAC7HyV,cAAe,SAACzV,GAAD,MAAW,CAAEuV,QAAS,4EAA6E1S,MAAO7C,IACzH0V,WAAY,SAAC1V,GAAD,MAAW,CAAEuV,QAAS,yEAA0E1S,MAAO7C,IACnH2V,kBAAmB,SAAC3V,GAAD,MAAW,CAAEuV,QAAS,gFAAiF1S,MAAO7C,IACjI4V,mBAAoB,SAAC5V,GAAD,MAAW,CAAEuV,QAAS,iFAAkF1S,MAAO7C,IACnI6V,eAAgB,SAAC7V,GAAD,MAAW,CAAEuV,QAAS,6EAA8E1S,MAAO7C,IAC3H8V,WAAY,SAAC9V,GAAD,MAAW,CAAEuV,QAAS,yEAA0E1S,MAAO7C,IACnH+V,aAAc,SAAC/V,GAAD,MAAW,CAAEuV,QAAS,2EAA4E1S,MAAO7C,IACvHgW,iBAAkB,SAAChW,GAAD,MAAW,CAAEuV,QAAS,+EAAgF1S,MAAO7C,IAC/HiW,YAAa,SAACjW,GAAD,MAAW,CAAEuV,QAAS,0EAA2E1S,MAAO7C,IACrHkW,eAAgB,SAAClW,GAAD,MAAW,CAAEuV,QAAS,6EAA8E1S,MAAO7C,IAC3HmW,aAAc,SAACnW,GAAD,MAAW,CAAEuV,QAAS,2EAA4E1S,MAAO7C,IACvHoW,sBAAuB,SAACpW,GAAD,MAAW,CAAEuV,QAAS,oFAAqF1S,MAAO7C,IACzIqW,eAAgB,SAACrW,GAAD,MAAW,CAAEuV,QAAS,6EAA8E1S,MAAO7C,IAC3HsW,WAAY,SAACtW,GAAD,MAAW,CAAEuV,QAAS,yEAA0E1S,MAAO7C,IACnHuW,aAAc,SAACvW,GAAD,MAAW,CAAEuV,QAAS,2EAA4E1S,MAAO7C,IACvHwW,uBAAwB,SAACxW,GAAD,MAAW,CAAEuV,QAAS,qFAAsF1S,MAAO7C,IAC3IyW,kBAAmB,SAACzW,GAAD,MAAW,CAAEuV,QAAS,gFAAiF1S,MAAO7C,IACjI0W,aAAc,SAAC1W,GAAD,MAAW,CAAEuV,QAAS,2EAA4E1S,MAAO7C,IACvH2W,QAAS,SAAC3W,GAAD,MAAW,CAAEuV,QAAS,sEAAuE1S,MAAO7C,MA3BpG,4CAAH,sDA8BR4W,EAAW,yDAAG,0JAAwB,CAAE/B,KAAM,yBAAjBA,EAAf,EAASA,KAAT,kBACT,IAAI3B,EAAI,CAAE1D,QAASqF,KADV,2CAAH,qD,yDC1DFgC,E,gGAAf,WAA4BC,GAA5B,iGACiBnC,EAASmC,EAAY,wBAAyB,CACvDjC,KAAMiC,EAAY,8BAF1B,mF,iCAKeC,E,gGAAf,WAA+BD,GAA/B,iGACiBF,EAAY,CACrB/B,KAAMiC,EAAY,0BAF1B,mF,wBAKA,SAASE,EAAanU,EAAOoU,GACzB,cAAiBxW,OAAO+P,KAAKyG,GAA7B,eAA2C,CAAtC,IAAIC,EAAI,KACLvE,MAAMC,QAAQqE,EAAYC,IAC1BrU,EAAMqU,GAAN,yBAAkBrU,EAAMqU,IAAxB,eAAkCD,EAAYC,KAG9CrU,EAAMqU,GAAQD,EAAYC,GAGlC,OAAOrU,EAEX,SAASsU,EAAaC,GAElB,IADA,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,MAA2B7W,OAAO8W,QAAQH,GAA1C,eAAqD,CAAhD,6BAAOjU,EAAP,KAAYN,EAAZ,KACG2U,EAAQ,GACZA,EAAMpV,KAAOe,EACbqU,EAAM9F,KAAN,eAAoB7O,GACpBwU,EAAUC,OAAOxW,KAAK0W,GAE1B,OAAOH,EAEX,IAAMI,EAAkB,WACpB,MAAO,CACHC,gBAAiB,GACjBC,aAAc,GACdC,cAAe,GACfC,cAAe,GACfC,SAAU,GACVC,aAAc,GACdC,MAAO,GACPC,WAAY,GACZC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,WAAY,CACRC,QAASrB,EAAaqB,OAAQjT,YAAY,KAC1CkT,SAAUtB,EAAasB,OAASlT,YAAY,KAC5CmT,YAAavB,EAAauB,OAAYnT,YAAY,KAClDoT,SAAUxB,EAAawB,OAASpT,YAAY,KAC5CqT,OAAQzB,EAAayB,OAAOrT,YAAY,KACxCsT,UAAW1B,EAAa0B,OAAUtT,YAAY,KAC9CuT,QAAS3B,EAAa2B,OAAQvT,YAAY,KAC1C2S,MAAOf,EAAae,OAAM3S,YAAY,KACtCwT,aAAc5B,EAAa4B,OAAaxT,YAAY,KACpDyS,MAAOb,EAAaa,OAAMzS,YAAY,KACtC0S,WAAYd,EAAac,OAAW1S,YAAY,KAChDyT,uBAAwB7B,EAAa6B,OAAuBzT,YAAY,KACxE0T,wBAAyB9B,EAAa8B,OAAwB1T,YAAY,KAC1E2T,kBAAmB/B,EAAa+B,OAAkB3T,YAAY,KAC9D4T,mBAAoBhC,EAAagC,OAAmB5T,YAAY,KAChE6T,oBAAqBjC,EAAaiC,OAAoB7T,YAAY,KAClE8T,YAAalC,EAAakC,OAAY9T,YAAY,KAClDmD,kBAAmByO,EAAazO,OAAkBnD,YAAY,KAC9DqD,0BAA2BuO,EAAavO,OAA0BrD,YAAY,KAC9EoE,gBAAiBwN,EAAaxN,OAAgBpE,YAAY,KAC1DyE,wBAAyBmN,EAAanN,OAAwBzE,YAAY,KAC1EwF,wBAAyBoM,EAAapM,OAAwBxF,YAAY,MAE9E+T,eAAgB,IAAIC,MAItBC,EAAQ/B,IACC,GACXgC,YAAY,EACZD,QACAE,UAAW,CACPC,YADO,SACKH,GACR/Y,OAAOgS,OAAO+G,EAAO/B,MAEzBmC,MAJO,SAIDJ,EAJC,GAI6B,IAArB7H,EAAqB,EAArBA,MAAOxO,EAAc,EAAdA,IAAKN,EAAS,EAATA,MACvB2W,EAAM7H,GAAOtB,KAAKC,UAAUnN,IAAQN,GAExCgX,UAPO,SAOGL,EAAOM,GACbN,EAAMF,eAAeS,IAAID,IAE7BE,YAVO,SAUKR,EAAOM,GACfN,EAAMF,eAAehI,OAAOwI,KAGpCG,QAAS,CACLC,mBAAoB,SAACV,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI/C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAM9B,gBAAgBrH,KAAKC,UAAUuB,WAA5C,QAAwD,KAE5DsI,gBAAiB,SAACX,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAM7B,aAAatH,KAAKC,UAAUuB,WAAzC,QAAqD,KAEzDuI,iBAAkB,SAACZ,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAM5B,cAAcvH,KAAKC,UAAUuB,WAA1C,QAAsD,KAE1DwI,iBAAkB,SAACb,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAM3B,cAAcxH,KAAKC,UAAUuB,WAA1C,QAAsD,KAE1DyI,YAAa,SAACd,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAIxC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAM1B,SAASzH,KAAKC,UAAUuB,WAArC,QAAiD,KAErD0I,gBAAiB,SAACf,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI5C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMzB,aAAa1H,KAAKC,UAAUuB,WAAzC,QAAqD,KAEzD2I,SAAU,SAAChB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMxB,MAAM3H,KAAKC,UAAUuB,WAAlC,QAA8C,KAElD4I,cAAe,SAACjB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI1C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMvB,WAAW5H,KAAKC,UAAUuB,WAAvC,QAAmD,KAEvD6I,SAAU,SAAClB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAIrC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMtB,MAAM7H,KAAKC,UAAUuB,WAAlC,QAA8C,KAElD8I,UAAW,SAACnB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMrB,OAAO9H,KAAKC,UAAUuB,WAAnC,QAA+C,KAEnD+I,UAAW,SAACpB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAItC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMpB,OAAO/H,KAAKC,UAAUuB,WAAnC,QAA+C,KAEnDgJ,iBAAkB,SAACrB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAI7C,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMnB,cAAchI,KAAKC,UAAUuB,WAA1C,QAAsD,KAE1DiJ,aAAc,SAACtB,GAAD,OAAW,WAA6B,MAA5B3H,EAA4B,uDAAnB,CAAEA,OAAQ,IAIzC,OAHKA,EAAOF,QACRE,EAAOF,MAAQ,MAEnB,UAAO6H,EAAMlB,UAAUjI,KAAKC,UAAUuB,WAAtC,QAAkD,KAEtDkJ,iBAAkB,SAACvB,GAAD,OAAW,SAAC9H,GAC1B,OAAO8H,EAAMjB,WAAW7G,GAAM4F,UAGtC0D,QAAS,CACLC,KADK,YAC2B,IAAzBjM,EAAyB,EAAzBA,SAAUkM,EAAe,EAAfA,YACb/L,QAAQC,IAAI,wFACR8L,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,WAC5CnM,EAAS,mBAIrBoM,WATK,YASkB,IAAVC,EAAU,EAAVA,OACTA,EAAO,gBAEXC,YAZK,WAYmBxB,GAAc,IAAxBuB,EAAwB,EAAxBA,OACVA,EAAO,cAAevB,IAEpByB,YAfD,YAekC,qJAAnB/B,EAAmB,EAAnBA,MAAOxK,EAAY,EAAZA,SACvBwK,EAAMF,eAAekC,QAArB,yDAA6B,WAAO1B,GAAP,0GAEf9K,EAAS8K,EAAa2B,OAAQ3B,EAAa4B,SAF5B,+DAKf,IAAIC,iBAAY,kBAAoB,KAAExX,SALvB,wDAA7B,uDADmC,8CAUjCyX,qBAzBD,cAyB8J,gLAAtIP,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEjIoF,EAAgBmE,GAFiH,cAErJtE,EAFqJ,iBAGxIA,EAAY3C,qBAAqB9Q,EAAIwC,IAAKxC,EAAIkD,OAH0F,eAGvJxD,EAHuJ,OAGlF7C,KACzEqb,EAAO,QAAS,CAAE1J,MAAO,kBAAmBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAC5EiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,uBAAwBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOpJsI,EAAQ,sBAAsB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUrJ,IAAIgK,iBAAY,mCAAoC,kDAAoD,KAAExX,SAV2C,6DAa7J6X,kBAtCD,cAsC2J,gLAAtIX,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HoF,EAAgBmE,GAF8G,cAElJtE,EAFkJ,iBAGrIA,EAAY1C,kBAAkB/Q,EAAIwC,IAAKxC,EAAIyI,MAH0F,eAGpJ/I,EAHoJ,OAGnF7C,KACrEqb,EAAO,QAAS,CAAE1J,MAAO,eAAgBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACzEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOjJsI,EAAQ,mBAAmB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUlJ,IAAIgK,iBAAY,gCAAiC,kDAAoD,KAAExX,SAV2C,6DAa1J8X,mBAnDD,cAmD4J,gLAAtIZ,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HoF,EAAgBmE,GAF+G,cAEnJtE,EAFmJ,iBAGtIA,EAAYtD,mBAAmBnQ,EAAIoQ,SAHmG,eAGrJ1Q,EAHqJ,OAGzF7C,KAChEqb,EAAO,QAAS,CAAE1J,MAAO,gBAAiBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAC1EiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOlJsI,EAAQ,oBAAoB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIgK,iBAAY,iCAAkC,kDAAoD,KAAExX,SAV2C,6DAa3J+X,mBAhED,cAgE4J,gLAAtIb,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HoF,EAAgBmE,GAF+G,cAEnJtE,EAFmJ,iBAGtIA,EAAYpD,mBAAmBrQ,EAAIoQ,SAHmG,eAGrJ1Q,EAHqJ,OAGzF7C,KAChEqb,EAAO,QAAS,CAAE1J,MAAO,gBAAiBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAC1EiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOlJsI,EAAQ,oBAAoB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIgK,iBAAY,iCAAkC,kDAAoD,KAAExX,SAV2C,6DAa3JgY,cA7ED,cA6EuJ,kLAAtId,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE1HoF,EAAgBmE,GAF0G,cAE9ItE,EAF8I,iBAGjIA,EAAY5C,cAAc7Q,EAAIwC,IAAKgM,GAH8F,QAGhJ9O,EAHgJ,OAGtF7C,KAHsF,YAI7I+b,IAAOlZ,EAAMuZ,YAA0C,MAA5BvZ,EAAMuZ,WAAWC,QAJiG,kCAKvHzF,EAAY5C,cAAc7Q,EAAIwC,IAA9B,iCAAwCgM,GAAxC,IAA+C,iBAAkB9O,EAAMuZ,WAAWC,WALqC,QAK5IpF,EAL4I,OAKzBjX,KACvH6C,EAAQmU,EAAanU,EAAOoU,GANoH,+BAQpJoE,EAAO,QAAS,CAAE1J,MAAO,WAAYxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACrEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,gBAAiBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WAVgD,4BAW7IsI,EAAQ,eAAe,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAXgG,QAWpF,IAXoF,2CAc9I,IAAIgK,iBAAY,4BAA6B,kDAAoD,KAAExX,SAd2C,6DAiBtJmY,kBA9FD,cA8F2J,gLAAtIjB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE9HoF,EAAgBmE,GAF8G,cAElJtE,EAFkJ,iBAGrIA,EAAYxD,kBAAkBjQ,EAAIyE,IAHmG,eAGpJ/E,EAHoJ,OAG9F7C,KAC1Dqb,EAAO,QAAS,CAAE1J,MAAO,eAAgBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACzEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,oBAAqBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOjJsI,EAAQ,mBAAmB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUlJ,IAAIgK,iBAAY,gCAAiC,kDAAoD,KAAExX,SAV2C,6DAa1JoY,WA3GD,cA2GoJ,kLAAtIlB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvHoF,EAAgBmE,GAFuG,cAE3ItE,EAF2I,iBAG9HA,EAAY/C,WAAWlC,GAHuG,QAG7I9O,EAH6I,OAG/F7C,KAH+F,YAI1I+b,IAAOlZ,EAAMuZ,YAA0C,MAA5BvZ,EAAMuZ,WAAWC,QAJ8F,kCAKpHzF,EAAY/C,WAAZ,iCAA4BlC,GAA5B,IAAmC,iBAAkB9O,EAAMuZ,WAAWC,WAL8C,QAKzIpF,EALyI,OAKlCjX,KAC3G6C,EAAQmU,EAAanU,EAAOoU,GANiH,+BAQjJoE,EAAO,QAAS,CAAE1J,MAAO,QAASxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAClEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,aAAcC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WAVgD,4BAW1IsI,EAAQ,YAAY,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAXgG,QAWpF,IAXoF,2CAc3I,IAAIgK,iBAAY,yBAA0B,kDAAoD,KAAExX,SAd2C,6DAiBnJqY,gBA5HD,cA4HyJ,kLAAtInB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE5HoF,EAAgBmE,GAF4G,cAEhJtE,EAFgJ,iBAGnIA,EAAYlD,gBAAgBvQ,EAAIsZ,SAAU9K,GAHyF,QAGlJ9O,EAHkJ,OAGjF7C,KAHiF,YAI/I+b,IAAOlZ,EAAMuZ,YAA0C,MAA5BvZ,EAAMuZ,WAAWC,QAJmG,kCAKzHzF,EAAYlD,gBAAgBvQ,EAAIsZ,SAAhC,iCAA+C9K,GAA/C,IAAsD,iBAAkB9O,EAAMuZ,WAAWC,WALgC,QAK9IpF,EAL8I,OAKpBjX,KAC9H6C,EAAQmU,EAAanU,EAAOoU,GANsH,+BAQtJoE,EAAO,QAAS,CAAE1J,MAAO,aAAcxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACvEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,kBAAmBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WAVgD,4BAW/IsI,EAAQ,iBAAiB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAXgG,QAWpF,IAXoF,2CAchJ,IAAIgK,iBAAY,8BAA+B,kDAAoD,KAAExX,SAd2C,6DAiBxJuY,WA7ID,cA6IoJ,gLAAtIrB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAEvHoF,EAAgBmE,GAFuG,cAE3ItE,EAF2I,iBAG9HA,EAAYhD,WAAWzQ,EAAIsZ,UAHmG,eAG7I5Z,EAH6I,OAGxF7C,KACzDqb,EAAO,QAAS,CAAE1J,MAAO,QAASxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAClEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,aAAcC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAO1IsI,EAAQ,YAAY,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAU3I,IAAIgK,iBAAY,yBAA0B,kDAAoD,KAAExX,SAV2C,6DAanJwY,YA1JD,cA0JqJ,kLAAtItB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHoF,EAAgBmE,GAFwG,cAE5ItE,EAF4I,iBAG/HA,EAAYjD,YAAYhC,GAHuG,QAG9I9O,EAH8I,OAG/F7C,KAH+F,YAI3I+b,IAAOlZ,EAAMuZ,YAA0C,MAA5BvZ,EAAMuZ,WAAWC,QAJ+F,kCAKrHzF,EAAYjD,YAAZ,iCAA6BhC,GAA7B,IAAoC,iBAAkB9O,EAAMuZ,WAAWC,WAL8C,QAK1IpF,EAL0I,OAKlCjX,KAC5G6C,EAAQmU,EAAanU,EAAOoU,GANkH,+BAQlJoE,EAAO,QAAS,CAAE1J,MAAO,SAAUxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACnEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WAVgD,4BAW3IsI,EAAQ,aAAa,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAXgG,QAWpF,IAXoF,2CAc5I,IAAIgK,iBAAY,0BAA2B,kDAAoD,KAAExX,SAd2C,6DAiBpJyY,YA3KD,cA2KqJ,gLAAtIvB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAExHoF,EAAgBmE,GAFwG,cAE5ItE,EAF4I,iBAG/HA,EAAY9C,YAAY3Q,EAAIsZ,SAAUtZ,EAAI0Z,UAHqF,eAG9Iha,EAH8I,OAG1E7C,KACxEqb,EAAO,QAAS,CAAE1J,MAAO,SAAUxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACnEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,cAAeC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAO3IsI,EAAQ,aAAa,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAU5I,IAAIgK,iBAAY,0BAA2B,kDAAoD,KAAExX,SAV2C,6DAapJ2Y,mBAxLD,cAwL4J,gLAAtIzB,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE/HoF,EAAgBmE,GAF+G,cAEnJtE,EAFmJ,iBAGtIA,EAAYzC,mBAAmBhR,EAAIf,MAHmG,eAGrJS,EAHqJ,OAG5F7C,KAC7Dqb,EAAO,QAAS,CAAE1J,MAAO,gBAAiBxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UAC1EiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,qBAAsBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAOlJsI,EAAQ,oBAAoB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAUnJ,IAAIgK,iBAAY,iCAAkC,kDAAoD,KAAExX,SAV2C,6DAa3J4Y,eArMD,cAqMwJ,gLAAtI1B,EAAsI,EAAtIA,OAAQH,EAA8H,EAA9HA,YAAajB,EAAiH,EAAjHA,QAAiH,IAApG4B,QAAoG,aAAtE,CAAEC,WAAW,EAAOC,KAAK,GAA6C,EAAzFD,EAAyF,EAAzFA,UAAWC,EAA8E,EAA9EA,IAAuD5Y,EAAuB,mBAApC0O,QAAoC,IAAhBF,aAAgB,MAAR,KAAQ,oBAE3HoF,EAAgBmE,GAF2G,cAE/ItE,EAF+I,iBAGlIA,EAAYnD,eAAetQ,EAAIf,MAHmG,eAGjJS,EAHiJ,OAG5F7C,KACzDqb,EAAO,QAAS,CAAE1J,MAAO,YAAaxO,IAAK,CAAE0O,OAAQ,kBAAK1O,GAAOwO,SAAS9O,UACtEiZ,GACAT,EAAO,YAAa,CAAEI,OAAQ,iBAAkBC,QAAS,CAAEG,QAAS,CAAEE,OAAOlK,OAAQ,kBAAK1O,GAAOwO,WANgD,4BAO9IsI,EAAQ,gBAAgB,CAAEpI,OAAQ,kBAAK1O,GAAOwO,iBAPgG,QAOpF,IAPoF,2CAU/I,IAAIgK,iBAAY,6BAA8B,kDAAoD,KAAExX,SAV2C,6DAavJ6Y,qBAlND,cAkNuE,0KAA/C9B,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE7CwB,EAAaqE,GAFgC,cAE9DvG,EAF8D,gBAGlDA,EAASW,iBAAiBzS,GAHwB,cAG9Doa,EAH8D,iBAI/CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL2C,eAI9DhU,EAJ8D,yBAM7DA,GAN6D,wCAShE,MAAKgT,EAT2D,uBAU1D,IAAIsH,iBAAY,iCAAkC,4DAVQ,cAa1D,IAAIA,iBAAY,iCAAkC,2BAA6B,KAAExX,SAbvB,6DAiBtE+Y,oBAnOD,cAmOsE,0KAA/ChC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE5CwB,EAAaqE,GAF+B,cAE7DvG,EAF6D,gBAGjDA,EAASa,gBAAgB3S,GAHwB,cAG7Doa,EAH6D,iBAI9CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL0C,eAI7DhU,EAJ6D,yBAM5DA,GAN4D,wCAS/D,MAAKgT,EAT0D,uBAUzD,IAAIsH,iBAAY,gCAAiC,4DAVQ,cAazD,IAAIA,iBAAY,gCAAiC,2BAA6B,KAAExX,SAbvB,6DAiBrEgZ,kBApPD,cAoPoE,0KAA/CjC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE1CwB,EAAaqE,GAF6B,cAE3DvG,EAF2D,gBAG/CA,EAASc,cAAc5S,GAHwB,cAG3Doa,EAH2D,iBAI5CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALwC,eAI3DhU,EAJ2D,yBAM1DA,GAN0D,wCAS7D,MAAKgT,EATwD,uBAUvD,IAAIsH,iBAAY,8BAA+B,4DAVQ,cAavD,IAAIA,iBAAY,8BAA+B,2BAA6B,KAAExX,SAbvB,6DAiBnEiZ,eArQD,cAqQiE,0KAA/ClC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvCwB,EAAaqE,GAF0B,cAExDvG,EAFwD,gBAG5CA,EAASe,WAAW7S,GAHwB,cAGxDoa,EAHwD,iBAIzCtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALqC,eAIxDhU,EAJwD,yBAMvDA,GANuD,wCAS1D,MAAKgT,EATqD,uBAUpD,IAAIsH,iBAAY,2BAA4B,4DAVQ,cAapD,IAAIA,iBAAY,2BAA4B,2BAA6B,KAAExX,SAbvB,6DAiBhEkZ,sBAtRD,cAsRwE,0KAA/CnC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CwB,EAAaqE,GAFiC,cAE/DvG,EAF+D,gBAGnDA,EAASgB,kBAAkB9S,GAHwB,cAG/Doa,EAH+D,iBAIhDtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL4C,eAI/DhU,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKgT,EAT4D,uBAU3D,IAAIsH,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAExX,SAbvB,6DAiBvEmZ,uBAvSD,cAuSyE,0KAA/CpC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE/CwB,EAAaqE,GAFkC,cAEhEvG,EAFgE,gBAGpDA,EAASiB,mBAAmB/S,GAHwB,cAGhEoa,EAHgE,iBAIjDtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL6C,eAIhEhU,EAJgE,yBAM/DA,GAN+D,wCASlE,MAAKgT,EAT6D,uBAU5D,IAAIsH,iBAAY,mCAAoC,4DAVQ,cAa5D,IAAIA,iBAAY,mCAAoC,2BAA6B,KAAExX,SAbvB,6DAiBxEoZ,mBAxTD,cAwTqE,0KAA/CrC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3CwB,EAAaqE,GAF8B,cAE5DvG,EAF4D,gBAGhDA,EAASkB,eAAehT,GAHwB,cAG5Doa,EAH4D,iBAI7CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALyC,eAI5DhU,EAJ4D,yBAM3DA,GAN2D,wCAS9D,MAAKgT,EATyD,uBAUxD,IAAIsH,iBAAY,+BAAgC,4DAVQ,cAaxD,IAAIA,iBAAY,+BAAgC,2BAA6B,KAAExX,SAbvB,6DAiBpEqZ,eAzUD,cAyUiE,0KAA/CtC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvCwB,EAAaqE,GAF0B,cAExDvG,EAFwD,gBAG5CA,EAASmB,WAAWjT,GAHwB,cAGxDoa,EAHwD,iBAIzCtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALqC,eAIxDhU,EAJwD,yBAMvDA,GANuD,wCAS1D,MAAKgT,EATqD,uBAUpD,IAAIsH,iBAAY,2BAA4B,4DAVQ,cAapD,IAAIA,iBAAY,2BAA4B,2BAA6B,KAAExX,SAbvB,6DAiBhEsZ,iBA1VD,cA0VmE,0KAA/CvC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEzCwB,EAAaqE,GAF4B,cAE1DvG,EAF0D,gBAG9CA,EAASoB,aAAalT,GAHwB,cAG1Doa,EAH0D,iBAI3CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALuC,eAI1DhU,EAJ0D,yBAMzDA,GANyD,wCAS5D,MAAKgT,EATuD,uBAUtD,IAAIsH,iBAAY,6BAA8B,4DAVQ,cAatD,IAAIA,iBAAY,6BAA8B,2BAA6B,KAAExX,SAbvB,6DAiBlEuZ,qBA3WD,cA2WuE,0KAA/CxC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE7CwB,EAAaqE,GAFgC,cAE9DvG,EAF8D,gBAGlDA,EAASqB,iBAAiBnT,GAHwB,cAG9Doa,EAH8D,iBAI/CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL2C,eAI9DhU,EAJ8D,yBAM7DA,GAN6D,wCAShE,MAAKgT,EAT2D,uBAU1D,IAAIsH,iBAAY,iCAAkC,4DAVQ,cAa1D,IAAIA,iBAAY,iCAAkC,2BAA6B,KAAExX,SAbvB,6DAiBtEwZ,gBA5XD,cA4XkE,0KAA/CzC,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAExCwB,EAAaqE,GAF2B,cAEzDvG,EAFyD,gBAG7CA,EAASsB,YAAYpT,GAHwB,cAGzDoa,EAHyD,iBAI1CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALsC,eAIzDhU,EAJyD,yBAMxDA,GANwD,wCAS3D,MAAKgT,EATsD,uBAUrD,IAAIsH,iBAAY,4BAA6B,4DAVQ,cAarD,IAAIA,iBAAY,4BAA6B,2BAA6B,KAAExX,SAbvB,6DAiBjEyZ,mBA7YD,cA6YqE,0KAA/C1C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3CwB,EAAaqE,GAF8B,cAE5DvG,EAF4D,gBAGhDA,EAASuB,eAAerT,GAHwB,cAG5Doa,EAH4D,iBAI7CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALyC,eAI5DhU,EAJ4D,yBAM3DA,GAN2D,wCAS9D,MAAKgT,EATyD,uBAUxD,IAAIsH,iBAAY,+BAAgC,4DAVQ,cAaxD,IAAIA,iBAAY,+BAAgC,2BAA6B,KAAExX,SAbvB,6DAiBpE0Z,iBA9ZD,cA8ZmE,0KAA/C3C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEzCwB,EAAaqE,GAF4B,cAE1DvG,EAF0D,gBAG9CA,EAASwB,aAAatT,GAHwB,cAG1Doa,EAH0D,iBAI3CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALuC,eAI1DhU,EAJ0D,yBAMzDA,GANyD,wCAS5D,MAAKgT,EATuD,uBAUtD,IAAIsH,iBAAY,6BAA8B,4DAVQ,cAatD,IAAIA,iBAAY,6BAA8B,2BAA6B,KAAExX,SAbvB,6DAiBlE2Z,0BA/aD,cA+a4E,0KAA/C5C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAElDwB,EAAaqE,GAFqC,cAEnEvG,EAFmE,gBAGvDA,EAASyB,sBAAsBvT,GAHwB,cAGnEoa,EAHmE,iBAIpDtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALgD,eAInEhU,EAJmE,yBAMlEA,GANkE,wCASrE,MAAKgT,EATgE,uBAU/D,IAAIsH,iBAAY,sCAAuC,4DAVQ,cAa/D,IAAIA,iBAAY,sCAAuC,2BAA6B,KAAExX,SAbvB,6DAiB3E4Z,mBAhcD,cAgcqE,0KAA/C7C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE3CwB,EAAaqE,GAF8B,cAE5DvG,EAF4D,gBAGhDA,EAAS0B,eAAexT,GAHwB,cAG5Doa,EAH4D,iBAI7CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALyC,eAI5DhU,EAJ4D,yBAM3DA,GAN2D,wCAS9D,MAAKgT,EATyD,uBAUxD,IAAIsH,iBAAY,+BAAgC,4DAVQ,cAaxD,IAAIA,iBAAY,+BAAgC,2BAA6B,KAAExX,SAbvB,6DAiBpE6Z,eAjdD,cAidiE,0KAA/C9C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEvCwB,EAAaqE,GAF0B,cAExDvG,EAFwD,gBAG5CA,EAAS2B,WAAWzT,GAHwB,cAGxDoa,EAHwD,iBAIzCtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALqC,eAIxDhU,EAJwD,yBAMvDA,GANuD,wCAS1D,MAAKgT,EATqD,uBAUpD,IAAIsH,iBAAY,2BAA4B,4DAVQ,cAapD,IAAIA,iBAAY,2BAA4B,2BAA6B,KAAExX,SAbvB,6DAiBhE8Z,iBAleD,cAkemE,0KAA/C/C,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEzCwB,EAAaqE,GAF4B,cAE1DvG,EAF0D,gBAG9CA,EAAS4B,aAAa1T,GAHwB,cAG1Doa,EAH0D,iBAI3CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALuC,eAI1DhU,EAJ0D,yBAMzDA,GANyD,wCAS5D,MAAKgT,EATuD,uBAUtD,IAAIsH,iBAAY,6BAA8B,4DAVQ,cAatD,IAAIA,iBAAY,6BAA8B,2BAA6B,KAAExX,SAbvB,6DAiBlE+Z,2BAnfD,cAmf6E,0KAA/ChD,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEnDwB,EAAaqE,GAFsC,cAEpEvG,EAFoE,gBAGxDA,EAAS6B,uBAAuB3T,GAHwB,cAGpEoa,EAHoE,iBAIrDtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALiD,eAIpEhU,EAJoE,yBAMnEA,GANmE,wCAStE,MAAKgT,EATiE,uBAUhE,IAAIsH,iBAAY,uCAAwC,4DAVQ,cAahE,IAAIA,iBAAY,uCAAwC,2BAA6B,KAAExX,SAbvB,6DAiB5Ega,sBApgBD,cAogBwE,0KAA/CjD,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAE9CwB,EAAaqE,GAFiC,cAE/DvG,EAF+D,gBAGnDA,EAAS8B,kBAAkB5T,GAHwB,cAG/Doa,EAH+D,iBAIhDtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SAL4C,eAI/DhU,EAJ+D,yBAM9DA,GAN8D,wCASjE,MAAKgT,EAT4D,uBAU3D,IAAIsH,iBAAY,kCAAmC,4DAVQ,cAa3D,IAAIA,iBAAY,kCAAmC,2BAA6B,KAAExX,SAbvB,6DAiBvEia,iBArhBD,cAqhBmE,0KAA/ClD,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEzCwB,EAAaqE,GAF4B,cAE1DvG,EAF0D,gBAG9CA,EAAS+B,aAAa7T,GAHwB,cAG1Doa,EAH0D,iBAI3CtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALuC,eAI1DhU,EAJ0D,yBAMzDA,GANyD,wCAS5D,MAAKgT,EATuD,uBAUtD,IAAIsH,iBAAY,6BAA8B,4DAVQ,cAatD,IAAIA,iBAAY,6BAA8B,2BAA6B,KAAExX,SAbvB,6DAiBlEka,YAtiBD,cAsiB8D,0KAA/CnD,EAA+C,EAA/CA,YAAiBrY,EAA8B,EAA9BA,MAA8B,IAAvBuS,WAAuB,MAAjB,GAAiB,MAAbC,YAAa,MAAN,GAAM,oBAEpCwB,EAAaqE,GAFuB,cAErDvG,EAFqD,gBAGzCA,EAASgC,QAAQ9T,GAHwB,cAGrDoa,EAHqD,iBAItCtI,EAASO,iBAAiB,CAAC+H,GAAM,CAAE7H,IAAK,CAAEX,OAAQW,EAC/DV,IAAK,UAAYW,SALkC,eAIrDhU,EAJqD,yBAMpDA,GANoD,wCASvD,MAAKgT,EATkD,uBAUjD,IAAIsH,iBAAY,wBAAyB,4DAVQ,cAajD,IAAIA,iBAAY,wBAAyB,2BAA6B,KAAExX,SAbvB,6DAiB7D0G,iBAvjBD,cAujB8C,gKAA1BqQ,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEpBgU,EAAaqE,GAFO,cAErCvG,EAFqC,gBAGzBA,EAASW,iBAAiBzS,GAHD,cAGrCoa,EAHqC,yBAIpCA,GAJoC,wCAOvC,MAAK5I,EAPkC,uBAQjC,IAAIsH,iBAAY,iCAAkC,4DARjB,cAWjC,IAAIA,iBAAY,mCAAoC,6BAA+B,KAAExX,SAXpD,6DAe7C2C,gBAtkBD,cAskB6C,gKAA1BoU,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEnBgU,EAAaqE,GAFM,cAEpCvG,EAFoC,gBAGxBA,EAASa,gBAAgB3S,GAHD,cAGpCoa,EAHoC,yBAInCA,GAJmC,wCAOtC,MAAK5I,EAPiC,uBAQhC,IAAIsH,iBAAY,gCAAiC,4DARjB,cAWhC,IAAIA,iBAAY,kCAAmC,6BAA+B,KAAExX,SAXpD,6DAe5C+D,cArlBD,cAqlB2C,gKAA1BgT,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEjBgU,EAAaqE,GAFI,cAElCvG,EAFkC,gBAGtBA,EAASc,cAAc5S,GAHD,cAGlCoa,EAHkC,yBAIjCA,GAJiC,wCAOpC,MAAK5I,EAP+B,uBAQ9B,IAAIsH,iBAAY,8BAA+B,4DARjB,cAW9B,IAAIA,iBAAY,gCAAiC,6BAA+B,KAAExX,SAXpD,6DAe1CwG,WApmBD,cAomBwC,gKAA1BuQ,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEdgU,EAAaqE,GAFC,cAE/BvG,EAF+B,gBAGnBA,EAASe,WAAW7S,GAHD,cAG/Boa,EAH+B,yBAI9BA,GAJ8B,wCAOjC,MAAK5I,EAP4B,uBAQ3B,IAAIsH,iBAAY,2BAA4B,4DARjB,cAW3B,IAAIA,iBAAY,6BAA8B,6BAA+B,KAAExX,SAXpD,6DAevCqF,kBAnnBD,cAmnB+C,gKAA1B0R,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAErBgU,EAAaqE,GAFQ,cAEtCvG,EAFsC,gBAG1BA,EAASgB,kBAAkB9S,GAHD,cAGtCoa,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAK5I,EAPmC,uBAQlC,IAAIsH,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAExX,SAXpD,6DAe9CkG,mBAloBD,cAkoBgD,gKAA1B6Q,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEtBgU,EAAaqE,GAFS,cAEvCvG,EAFuC,gBAG3BA,EAASiB,mBAAmB/S,GAHD,cAGvCoa,EAHuC,yBAItCA,GAJsC,wCAOzC,MAAK5I,EAPoC,uBAQnC,IAAIsH,iBAAY,mCAAoC,4DARjB,cAWnC,IAAIA,iBAAY,qCAAsC,6BAA+B,KAAExX,SAXpD,6DAe/CuD,eAjpBD,cAipB4C,gKAA1BwT,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAElBgU,EAAaqE,GAFK,cAEnCvG,EAFmC,gBAGvBA,EAASkB,eAAehT,GAHD,cAGnCoa,EAHmC,yBAIlCA,GAJkC,wCAOrC,MAAK5I,EAPgC,uBAQ/B,IAAIsH,iBAAY,+BAAgC,4DARjB,cAW/B,IAAIA,iBAAY,iCAAkC,6BAA+B,KAAExX,SAXpD,6DAe3CsG,WAhqBD,cAgqBwC,gKAA1ByQ,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEdgU,EAAaqE,GAFC,cAE/BvG,EAF+B,gBAGnBA,EAASmB,WAAWjT,GAHD,cAG/Boa,EAH+B,yBAI9BA,GAJ8B,wCAOjC,MAAK5I,EAP4B,uBAQ3B,IAAIsH,iBAAY,2BAA4B,4DARjB,cAW3B,IAAIA,iBAAY,6BAA8B,6BAA+B,KAAExX,SAXpD,6DAevC2B,aA/qBD,cA+qB0C,gKAA1BoV,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEhBgU,EAAaqE,GAFG,cAEjCvG,EAFiC,gBAGrBA,EAASoB,aAAalT,GAHD,cAGjCoa,EAHiC,yBAIhCA,GAJgC,wCAOnC,MAAK5I,EAP8B,uBAQ7B,IAAIsH,iBAAY,6BAA8B,4DARjB,cAW7B,IAAIA,iBAAY,+BAAgC,6BAA+B,KAAExX,SAXpD,6DAezCmF,iBA9rBD,cA8rB8C,gKAA1B4R,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEpBgU,EAAaqE,GAFO,cAErCvG,EAFqC,gBAGzBA,EAASqB,iBAAiBnT,GAHD,cAGrCoa,EAHqC,yBAIpCA,GAJoC,wCAOvC,MAAK5I,EAPkC,uBAQjC,IAAIsH,iBAAY,iCAAkC,4DARjB,cAWjC,IAAIA,iBAAY,mCAAoC,6BAA+B,KAAExX,SAXpD,6DAe7CuH,YA7sBD,cA6sByC,gKAA1BwP,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEfgU,EAAaqE,GAFE,cAEhCvG,EAFgC,gBAGpBA,EAASsB,YAAYpT,GAHD,cAGhCoa,EAHgC,yBAI/BA,GAJ+B,wCAOlC,MAAK5I,EAP6B,uBAQ5B,IAAIsH,iBAAY,4BAA6B,4DARjB,cAW5B,IAAIA,iBAAY,8BAA+B,6BAA+B,KAAExX,SAXpD,6DAexC8E,eA5tBD,cA4tB4C,gKAA1BiS,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAElBgU,EAAaqE,GAFK,cAEnCvG,EAFmC,gBAGvBA,EAASuB,eAAerT,GAHD,cAGnCoa,EAHmC,yBAIlCA,GAJkC,wCAOrC,MAAK5I,EAPgC,uBAQ/B,IAAIsH,iBAAY,+BAAgC,4DARjB,cAW/B,IAAIA,iBAAY,iCAAkC,6BAA+B,KAAExX,SAXpD,6DAe3CyB,aA3uBD,cA2uB0C,gKAA1BsV,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEhBgU,EAAaqE,GAFG,cAEjCvG,EAFiC,gBAGrBA,EAASwB,aAAatT,GAHD,cAGjCoa,EAHiC,yBAIhCA,GAJgC,wCAOnC,MAAK5I,EAP8B,uBAQ7B,IAAIsH,iBAAY,6BAA8B,4DARjB,cAW7B,IAAIA,iBAAY,+BAAgC,6BAA+B,KAAExX,SAXpD,6DAezCoC,sBA1vBD,cA0vBmD,gKAA1B2U,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEzBgU,EAAaqE,GAFY,cAE1CvG,EAF0C,gBAG9BA,EAASyB,sBAAsBvT,GAHD,cAG1Coa,EAH0C,yBAIzCA,GAJyC,wCAO5C,MAAK5I,EAPuC,uBAQtC,IAAIsH,iBAAY,sCAAuC,4DARjB,cAWtC,IAAIA,iBAAY,wCAAyC,6BAA+B,KAAExX,SAXpD,6DAelDkE,eAzwBD,cAywB4C,gKAA1B6S,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAElBgU,EAAaqE,GAFK,cAEnCvG,EAFmC,gBAGvBA,EAAS0B,eAAexT,GAHD,cAGnCoa,EAHmC,yBAIlCA,GAJkC,wCAOrC,MAAK5I,EAPgC,uBAQ/B,IAAIsH,iBAAY,+BAAgC,4DARjB,cAW/B,IAAIA,iBAAY,iCAAkC,6BAA+B,KAAExX,SAXpD,6DAe3CoG,WAxxBD,cAwxBwC,gKAA1B2Q,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEdgU,EAAaqE,GAFC,cAE/BvG,EAF+B,gBAGnBA,EAAS2B,WAAWzT,GAHD,cAG/Boa,EAH+B,yBAI9BA,GAJ8B,wCAOjC,MAAK5I,EAP4B,uBAQ3B,IAAIsH,iBAAY,2BAA4B,4DARjB,cAW3B,IAAIA,iBAAY,6BAA8B,6BAA+B,KAAExX,SAXpD,6DAevC6C,aAvyBD,cAuyB0C,gKAA1BkU,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEhBgU,EAAaqE,GAFG,cAEjCvG,EAFiC,gBAGrBA,EAAS4B,aAAa1T,GAHD,cAGjCoa,EAHiC,yBAIhCA,GAJgC,wCAOnC,MAAK5I,EAP8B,uBAQ7B,IAAIsH,iBAAY,6BAA8B,4DARjB,cAW7B,IAAIA,iBAAY,+BAAgC,6BAA+B,KAAExX,SAXpD,6DAezCiD,uBAtzBD,cAszBoD,gKAA1B8T,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAE1BgU,EAAaqE,GAFa,cAE3CvG,EAF2C,gBAG/BA,EAAS6B,uBAAuB3T,GAHD,cAG3Coa,EAH2C,yBAI1CA,GAJ0C,wCAO7C,MAAK5I,EAPwC,uBAQvC,IAAIsH,iBAAY,uCAAwC,4DARjB,cAWvC,IAAIA,iBAAY,yCAA0C,6BAA+B,KAAExX,SAXpD,6DAenDgG,kBAr0BD,cAq0B+C,gKAA1B+Q,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAErBgU,EAAaqE,GAFQ,cAEtCvG,EAFsC,gBAG1BA,EAAS8B,kBAAkB5T,GAHD,cAGtCoa,EAHsC,yBAIrCA,GAJqC,wCAOxC,MAAK5I,EAPmC,uBAQlC,IAAIsH,iBAAY,kCAAmC,4DARjB,cAWlC,IAAIA,iBAAY,oCAAqC,6BAA+B,KAAExX,SAXpD,6DAe9CF,aAp1BD,cAo1B0C,gKAA1BiX,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEhBgU,EAAaqE,GAFG,cAEjCvG,EAFiC,gBAGrBA,EAAS+B,aAAa7T,GAHD,cAGjCoa,EAHiC,yBAIhCA,GAJgC,wCAOnC,MAAK5I,EAP8B,uBAQ7B,IAAIsH,iBAAY,6BAA8B,4DARjB,cAW7B,IAAIA,iBAAY,+BAAgC,6BAA+B,KAAExX,SAXpD,6DAezC6H,QAn2BD,cAm2BqC,gKAA1BkP,EAA0B,EAA1BA,YAAiBrY,EAAS,EAATA,MAAS,kBAEXgU,EAAaqE,GAFF,cAE5BvG,EAF4B,gBAGhBA,EAASgC,QAAQ9T,GAHD,cAG5Boa,EAH4B,yBAI3BA,GAJ2B,wCAO9B,MAAK5I,EAPyB,uBAQxB,IAAIsH,iBAAY,wBAAyB,4DARjB,cAWxB,IAAIA,iBAAY,0BAA2B,6BAA+B,KAAExX,SAXpD,+DC1iCnC,GACXma,oGAAqGC,EAAKD,EAAqG,+DAEnN,SAASC,EAAKC,EAAKC,GACf,OAAO,SAAcC,GACjB,GAAIA,EAAM/P,UAAU,CAAC8P,IACjB,MAAM,IAAIvR,MAAM,mCAAqCuR,GAGrDC,EAAMC,eAAe,CAACF,GAASD,GAC/BE,EAAM5C,WAAU,SAAC8C,GACQ,qCAAjBA,EAASlN,MACTgN,EAAM1P,SAASyP,EAAS,QAAS,KAAM,CACnCI,MAAM,QCbf,SAAS5D,GAAKyD,GAC5B,cAAyBje,OAAOqe,OAAOC,GAAvC,eAAmD,CAA9C,IAAMC,EAAU,KACpBA,EAAWN,GAEZO,uBAAUP,GACVQ,oBAAOR,GACPS,iBAAIT,GACJ9J,oBAAO8J,GACPU,sBAASV,GCPV,IAAMA,GAAQW,eAAY,CACzB7F,MADyB,WAExB,MAAO,IAERE,UAAW,GACXsB,QAAS,KAEVC,GAAKyD,IACUA,U,iBCTR7Q,MAAM,a,2MADZ,gCAMM,YALL,gCAIM,MAJN,GAIM,CAHL,yBAAa,GACb,yBAAkC,GAApB0F,QAAS,EAAAA,SAAO,oBAC9B,yBAAqC,GAApBA,QAAS,EAAAA,SAAO,wBAMrB,QACdnR,KAAM,QACNmM,SAAU,CACTgF,QADS,WAER,OAAO9E,KAAKC,OAAOuL,QAAQ,4BCZ9B,GAAOrL,OAAS,GAED,U,GCHb,gCAEM,OAFDf,MAAM,aAAW,S,IAAtB,I,yDADD,gCAIM,eAIQ,QACdzL,KAAM,SCPP,GAAOwM,OAAS,GAED,U,ICHRf,MAAM,a,2GADZ,gCAIM,YAHL,gCAEM,MAFN,GAEM,CADL,yBAAc,OAMF,QACdzL,KAAM,YCPP,GAAOwM,OAAS,GAED,UCAT0Q,GAAgBC,kBAChBC,GAAS,CACd,CACC5T,KAAM,IACN6T,UAAWC,IAEZ,CAAE9T,KAAM,SAAU6T,UAAWE,IAC7B,CAAE/T,KAAM,YAAa6T,UAAWG,KAG3BC,GAASC,gBAAa,CAC3BC,QAAST,GACTE,YAGcK,M,wBCdTG,GAAMC,uBAAUC,GACtBF,GAAIG,OAAOC,iBAAiBC,aAAc,EAC1CL,GAAIM,IAAI5B,IAAO4B,IAAIT,IAAQS,IAAIC,MAAQC,MAAM,S,meCJvCC,EAAkB,CAAEC,OAAQ,EAAGC,MAAO,EAAGC,YAAY,GAC9CC,EAAc,CACvB3c,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAa5B,OAZ2B,IAAvBiB,EAAQhB,IAAI3C,QACZ4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQhB,KAEb,IAAnBgB,EAAQuc,QACRtc,EAAOE,OAAO,IAAImC,OAAOtC,EAAQuc,QAEf,IAAlBvc,EAAQwc,OACRvc,EAAOE,OAAO,IAAImC,OAAOtC,EAAQwc,QAEV,IAAvBxc,EAAQyc,YACRxc,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQyc,YAE5Bxc,GAEXI,OAhBuB,SAgBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKsc,GACrB,MAAO/b,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQhB,IAAMuB,EAAOkF,QACrB,MACJ,KAAK,EACDzF,EAAQuc,OAASha,EAAahC,EAAO+B,UACrC,MACJ,KAAK,EACDtC,EAAQwc,MAAQja,EAAahC,EAAO+B,UACpC,MACJ,KAAK,EACDtC,EAAQyc,WAAalc,EAAO8B,OAC5B,MACJ,QACI9B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA1CuB,SA0Cd7B,GACL,IAAMa,EAAU,kBAAKsc,GAsBrB,YArBmB3b,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,MACnCgB,EAAQhB,IAAM0G,EAAgBvG,EAAOH,WAEnB2B,IAAlBxB,EAAOod,QAA0C,OAAlBpd,EAAOod,OACtCvc,EAAQuc,OAAS9Z,OAAOtD,EAAOod,QAG/Bvc,EAAQuc,OAAS,OAEA5b,IAAjBxB,EAAOqd,OAAwC,OAAjBrd,EAAOqd,MACrCxc,EAAQwc,MAAQ/Z,OAAOtD,EAAOqd,OAG9Bxc,EAAQwc,MAAQ,OAEM7b,IAAtBxB,EAAOsd,YAAkD,OAAtBtd,EAAOsd,WAC1Czc,EAAQyc,WAAaja,QAAQrD,EAAOsd,YAGpCzc,EAAQyc,YAAa,EAElBzc,GAEXkB,OAnEuB,SAmEhBlB,GACH,IAAMmB,EAAM,GAKZ,YAJgBR,IAAhBX,EAAQhB,MAAsBmC,EAAInC,IAAM2G,OAAgChF,IAAhBX,EAAQhB,IAAoBgB,EAAQhB,IAAM,IAAIwB,kBACnFG,IAAnBX,EAAQuc,SAAyBpb,EAAIob,OAASvc,EAAQuc,aACpC5b,IAAlBX,EAAQwc,QAAwBrb,EAAIqb,MAAQxc,EAAQwc,YAC7B7b,IAAvBX,EAAQyc,aAA6Btb,EAAIsb,WAAazc,EAAQyc,YACvDtb,GAEXC,YA3EuB,SA2EXjC,GACR,IAAMa,EAAU,kBAAKsc,GAyBrB,YAxBmB3b,IAAfxB,EAAOH,KAAoC,OAAfG,EAAOH,IACnCgB,EAAQhB,IAAMG,EAAOH,IAGrBgB,EAAQhB,IAAM,IAAIwB,gBAEAG,IAAlBxB,EAAOod,QAA0C,OAAlBpd,EAAOod,OACtCvc,EAAQuc,OAASpd,EAAOod,OAGxBvc,EAAQuc,OAAS,OAEA5b,IAAjBxB,EAAOqd,OAAwC,OAAjBrd,EAAOqd,MACrCxc,EAAQwc,MAAQrd,EAAOqd,MAGvBxc,EAAQwc,MAAQ,OAEM7b,IAAtBxB,EAAOsd,YAAkD,OAAtBtd,EAAOsd,WAC1Czc,EAAQyc,WAAatd,EAAOsd,WAG5Bzc,EAAQyc,YAAa,EAElBzc,IAGT2c,EAAmB,CAAEC,MAAO,GACrBC,EAAe,CACxB9c,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAO5B,OAN+B,IAA3BiB,EAAQkY,QAAQ7b,QAChB4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQkY,SAEd,IAAlBlY,EAAQ4c,OACR3c,EAAOE,OAAO,IAAImC,OAAOtC,EAAQ4c,OAE9B3c,GAEXI,OAVwB,SAUjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK2c,GACrB,MAAOpc,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQkY,QAAU3X,EAAOkF,QACzB,MACJ,KAAK,EACDzF,EAAQ4c,MAAQra,EAAahC,EAAO+B,UACpC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA9BwB,SA8Bf7B,GACL,IAAMa,EAAU,kBAAK2c,GAUrB,YATuBhc,IAAnBxB,EAAO+Y,SAA4C,OAAnB/Y,EAAO+Y,UACvClY,EAAQkY,QAAUxS,EAAgBvG,EAAO+Y,eAExBvX,IAAjBxB,EAAOyd,OAAwC,OAAjBzd,EAAOyd,MACrC5c,EAAQ4c,MAAQna,OAAOtD,EAAOyd,OAG9B5c,EAAQ4c,MAAQ,EAEb5c,GAEXkB,OA3CwB,SA2CjBlB,GACH,IAAMmB,EAAM,GAGZ,YAFoBR,IAApBX,EAAQkY,UAA0B/W,EAAI+W,QAAUvS,OAAoChF,IAApBX,EAAQkY,QAAwBlY,EAAQkY,QAAU,IAAI1X,kBACpGG,IAAlBX,EAAQ4c,QAAwBzb,EAAIyb,MAAQ5c,EAAQ4c,OAC7Czb,GAEXC,YAjDwB,SAiDZjC,GACR,IAAMa,EAAU,kBAAK2c,GAarB,YAZuBhc,IAAnBxB,EAAO+Y,SAA4C,OAAnB/Y,EAAO+Y,QACvClY,EAAQkY,QAAU/Y,EAAO+Y,QAGzBlY,EAAQkY,QAAU,IAAI1X,gBAELG,IAAjBxB,EAAOyd,OAAwC,OAAjBzd,EAAOyd,MACrC5c,EAAQ4c,MAAQzd,EAAOyd,MAGvB5c,EAAQ4c,MAAQ,EAEb5c,IAGX8H,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZC,EAAOH,EAAWG,MAAS,SAACC,GAAD,OAASJ,EAAWK,OAAOf,KAAKc,EAAK,UAAUE,SAAS,WACzF,SAAS1C,EAAgBwC,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAI9H,WAAW6H,EAAIhM,QACtBF,EAAI,EAAGA,EAAIkM,EAAIhM,SAAUF,EAC9BmM,EAAInM,GAAKkM,EAAIE,WAAWpM,GAE5B,OAAOmM,EAEX,IAAME,EAAOV,EAAWU,MAAS,SAACH,GAAD,OAASP,EAAWK,OAAOf,KAAKiB,EAAK,UAAUD,SAAS,WACzF,SAASzC,EAAgB2C,GAErB,IADA,IAAMD,EAAM,GACHlM,EAAI,EAAGA,EAAImM,EAAIG,aAActM,EAClCkM,EAAI1L,KAAKsE,OAAOyH,aAAaJ,EAAInM,KAErC,OAAOqM,EAAKH,EAAIM,KAAK,KAEzB,SAASpG,EAAaqG,GAClB,GAAIA,EAAKC,GAAGpG,OAAOqG,kBACf,MAAM,IAAIhB,EAAWiB,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,wDCpNJ,W,6jBCIM2T,EAAc,CAAErZ,GAAI,GAAIxF,KAAM,GAAIgG,IAAK,GAAIpI,KAAM,GAAIuI,MAAO,GAAIpC,SAAU,GAAIE,MAAO,GAC9EyS,EAAU,CACnB5U,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEhB,KAAjBzD,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEjB,KAAhB+B,EAAQiE,KACRhE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiE,KAEhB,KAAjBjE,EAAQnE,MACRoE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQnE,MAEf,KAAlBmE,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAEZ,KAArBpE,EAAQgC,UACR/B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgC,UAEf,IAAlBhC,EAAQkC,OACRjC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkC,OAE9BjC,GAEXI,OAzBmB,SAyBZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK8c,GACrB,MAAOvc,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQiE,IAAM1D,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQnE,KAAO0E,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQgC,SAAWzB,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQkC,MAAQK,EAAahC,EAAO+B,UACpC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5DmB,SA4DV7B,GACL,IAAMa,EAAU,kBAAK8c,GA2CrB,YA1CkBnc,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAMhD,OAAO9B,EAAO8E,KAG5BjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOoF,OAAO9B,EAAOtD,MAG7BmE,EAAQnE,KAAO,QAEE8E,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEIzD,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAWf,OAAO9B,EAAO6C,UAGjChC,EAAQgC,SAAW,QAEFrB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQO,OAAOtD,EAAO+C,OAG9BlC,EAAQkC,MAAQ,EAEblC,GAEXkB,OA1GmB,SA0GZlB,GACH,IAAMmB,EAAM,GAQZ,YAPeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC7B9C,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAClC0C,IAAhBX,EAAQiE,MAAsB9C,EAAI8C,IAAMjE,EAAQiE,UAC/BtD,IAAjBX,EAAQnE,OAAuBsF,EAAItF,KAAOmE,EAAQnE,WAChC8E,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YAC/BzD,IAArBX,EAAQgC,WAA2Bb,EAAIa,SAAWhC,EAAQgC,eACxCrB,IAAlBX,EAAQkC,QAAwBf,EAAIe,MAAQlC,EAAQkC,OAC7Cf,GAEXC,YArHmB,SAqHPjC,GACR,IAAMa,EAAU,kBAAK8c,GA2CrB,YA1CkBnc,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAM9E,EAAO8E,IAGrBjE,EAAQiE,IAAM,QAEEtD,IAAhBxB,EAAOtD,MAAsC,OAAhBsD,EAAOtD,KACpCmE,EAAQnE,KAAOsD,EAAOtD,KAGtBmE,EAAQnE,KAAO,QAEE8E,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEIzD,IAApBxB,EAAO6C,UAA8C,OAApB7C,EAAO6C,SACxChC,EAAQgC,SAAW7C,EAAO6C,SAG1BhC,EAAQgC,SAAW,QAEFrB,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQ/C,EAAO+C,MAGvBlC,EAAQkC,MAAQ,EAEblC,IAGT+c,EAAY,CAAEtZ,GAAI,GAAIxF,KAAM,GAAIyF,OAAQ,GAAI/D,QAAS,GAAIiE,OAAQ,GAAIC,gBAAgB,EAAOC,kBAAkB,GACvGiQ,EAAQ,CACjBhU,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArBmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAEhB,KAAjBzD,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEd,KAAnB+B,EAAQ0D,QACRzD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ0D,QAEb,KAApB1D,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEd,KAAnBK,EAAQ4D,QACR3D,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4D,SAEN,IAA3B5D,EAAQ6D,gBACR5D,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQ6D,iBAEF,IAA7B7D,EAAQ8D,kBACR7D,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQ8D,kBAE5B7D,GAEXI,OAzBiB,SAyBVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK+c,GACrB,MAAOxc,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQ0D,OAASnD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ4D,OAASrD,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQ6D,eAAiBtD,EAAO8B,OAChC,MACJ,KAAK,EACDrC,EAAQ8D,iBAAmBvD,EAAO8B,OAClC,MACJ,QACI9B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5DiB,SA4DR7B,GACL,IAAMa,EAAU,kBAAK+c,GA2CrB,YA1CkBpc,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEG0C,IAAlBxB,EAAOuE,QAA0C,OAAlBvE,EAAOuE,OACtC1D,EAAQ0D,OAASzC,OAAO9B,EAAOuE,QAG/B1D,EAAQ0D,OAAS,QAEE/C,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEAgB,IAAlBxB,EAAOyE,QAA0C,OAAlBzE,EAAOyE,OACtC5D,EAAQ4D,OAAS3C,OAAO9B,EAAOyE,QAG/B5D,EAAQ4D,OAAS,QAESjD,IAA1BxB,EAAO0E,gBAA0D,OAA1B1E,EAAO0E,eAC9C7D,EAAQ6D,eAAiBrB,QAAQrD,EAAO0E,gBAGxC7D,EAAQ6D,gBAAiB,OAEGlD,IAA5BxB,EAAO2E,kBAA8D,OAA5B3E,EAAO2E,iBAChD9D,EAAQ8D,iBAAmBtB,QAAQrD,EAAO2E,kBAG1C9D,EAAQ8D,kBAAmB,EAExB9D,GAEXkB,OA1GiB,SA0GVlB,GACH,IAAMmB,EAAM,GAQZ,YAPeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,SAC7B9C,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAC/B0C,IAAnBX,EAAQ0D,SAAyBvC,EAAIuC,OAAS1D,EAAQ0D,aAClC/C,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACrCgB,IAAnBX,EAAQ4D,SAAyBzC,EAAIyC,OAAS5D,EAAQ4D,aAC3BjD,IAA3BX,EAAQ6D,iBAAiC1C,EAAI0C,eAAiB7D,EAAQ6D,qBACzClD,IAA7BX,EAAQ8D,mBAAmC3C,EAAI2C,iBAAmB9D,EAAQ8D,kBACnE3C,GAEXC,YArHiB,SAqHLjC,GACR,IAAMa,EAAU,kBAAK+c,GA2CrB,YA1CkBpc,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,QAEG9C,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEG0C,IAAlBxB,EAAOuE,QAA0C,OAAlBvE,EAAOuE,OACtC1D,EAAQ0D,OAASvE,EAAOuE,OAGxB1D,EAAQ0D,OAAS,QAEE/C,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEAgB,IAAlBxB,EAAOyE,QAA0C,OAAlBzE,EAAOyE,OACtC5D,EAAQ4D,OAASzE,EAAOyE,OAGxB5D,EAAQ4D,OAAS,QAESjD,IAA1BxB,EAAO0E,gBAA0D,OAA1B1E,EAAO0E,eAC9C7D,EAAQ6D,eAAiB1E,EAAO0E,eAGhC7D,EAAQ6D,gBAAiB,OAEGlD,IAA5BxB,EAAO2E,kBAA8D,OAA5B3E,EAAO2E,iBAChD9D,EAAQ8D,iBAAmB3E,EAAO2E,iBAGlC9D,EAAQ8D,kBAAmB,EAExB9D,IAGTgd,EAAmB,CAAElb,QAAS,GAAImb,SAAU,IACrCrI,EAAe,CACxB7U,OADwB,SACjBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SACJ,KAApBiB,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAFC,uBAItB9B,EAAQid,UAJc,IAItC,2BAAkC,KAAvB9a,EAAuB,QAC9BlC,EAAOE,OAAO,IAAIC,OAAO+B,IALS,8BAOtC,OAAOlC,GAEXI,OAVwB,SAUjBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKgd,GACrBhd,EAAQid,SAAW,GACnB,MAAO1c,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQid,SAAStgB,KAAK4D,EAAOH,UAC7B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA/BwB,SA+Bf7B,GACL,IAAMa,EAAU,kBAAKgd,GAQrB,GAPAhd,EAAQid,SAAW,QACItc,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,QAEEnB,IAApBxB,EAAO8d,UAA8C,OAApB9d,EAAO8d,SAAmB,wBAC3C9d,EAAO8d,UADoC,IAC3D,2BAAiC,KAAtB/Z,EAAsB,QAC7BlD,EAAQid,SAAStgB,KAAKsE,OAAOiC,KAF0B,+BAK/D,OAAOlD,GAEXkB,OA/CwB,SA+CjBlB,GACH,IAAMmB,EAAM,GAQZ,YAPoBR,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,SACpD9B,EAAQid,SACR9b,EAAI8b,SAAWjd,EAAQid,SAAS9Z,KAAI,SAACD,GAAD,OAAOA,KAG3C/B,EAAI8b,SAAW,GAEZ9b,GAEXC,YA1DwB,SA0DZjC,GACR,IAAMa,EAAU,kBAAKgd,GAQrB,GAPAhd,EAAQid,SAAW,QACItc,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,QAEEnB,IAApBxB,EAAO8d,UAA8C,OAApB9d,EAAO8d,SAAmB,wBAC3C9d,EAAO8d,UADoC,IAC3D,2BAAiC,KAAtB/Z,EAAsB,QAC7BlD,EAAQid,SAAStgB,KAAKuG,IAFiC,+BAK/D,OAAOlD,IAGTkd,EAAY,CAAE9N,QAAS,IAChByE,EAAQ,CACjB9T,OADiB,SACVC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SACJ,KAApBiB,EAAQoP,SACRnP,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoP,SAFC,uBAItBpP,EAAQmd,eAJc,IAItC,2BAAuC,KAA5Bhb,EAA4B,QACnCyS,EAAa7U,OAAOoC,EAAGlC,EAAOE,OAAO,IAAIid,QAAQC,UALf,8BAOtC,OAAOpd,GAEXI,OAViB,SAUVC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKkd,GACrBld,EAAQmd,cAAgB,GACxB,MAAO5c,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQoP,QAAU7O,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQmd,cAAcxgB,KAAKiY,EAAavU,OAAOE,EAAQA,EAAOJ,WAC9D,MACJ,QACII,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA/BiB,SA+BR7B,GACL,IAAMa,EAAU,kBAAKkd,GAQrB,GAPAld,EAAQmd,cAAgB,QACDxc,IAAnBxB,EAAOiQ,SAA4C,OAAnBjQ,EAAOiQ,QACvCpP,EAAQoP,QAAUnO,OAAO9B,EAAOiQ,SAGhCpP,EAAQoP,QAAU,QAEOzO,IAAzBxB,EAAOge,eAAwD,OAAzBhe,EAAOge,cAAwB,wBACrDhe,EAAOge,eAD8C,IACrE,2BAAsC,KAA3Bja,EAA2B,QAClClD,EAAQmd,cAAcxgB,KAAKiY,EAAa5T,SAASkC,KAFgB,+BAKzE,OAAOlD,GAEXkB,OA/CiB,SA+CVlB,GACH,IAAMmB,EAAM,GAQZ,YAPoBR,IAApBX,EAAQoP,UAA0BjO,EAAIiO,QAAUpP,EAAQoP,SACpDpP,EAAQmd,cACRhc,EAAIgc,cAAgBnd,EAAQmd,cAAcha,KAAI,SAACD,GAAD,OAAQA,EAAI0R,EAAa1T,OAAOgC,QAAKvC,KAGnFQ,EAAIgc,cAAgB,GAEjBhc,GAEXC,YA1DiB,SA0DLjC,GACR,IAAMa,EAAU,kBAAKkd,GAQrB,GAPAld,EAAQmd,cAAgB,QACDxc,IAAnBxB,EAAOiQ,SAA4C,OAAnBjQ,EAAOiQ,QACvCpP,EAAQoP,QAAUjQ,EAAOiQ,QAGzBpP,EAAQoP,QAAU,QAEOzO,IAAzBxB,EAAOge,eAAwD,OAAzBhe,EAAOge,cAAwB,wBACrDhe,EAAOge,eAD8C,IACrE,2BAAsC,KAA3Bja,EAA2B,QAClClD,EAAQmd,cAAcxgB,KAAKiY,EAAaxT,YAAY8B,KAFa,+BAKzE,OAAOlD,IAGTsd,EAAiB,GACVxJ,EAAa,CACtB/T,OADsB,SACfC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,cACN4B,IAAlBX,EAAQud,OACRxJ,EAAMhU,OAAOC,EAAQud,MAAOtd,EAAOE,OAAO,IAAIid,QAAQC,SAFpB,uBAItBrd,EAAQwd,MAJc,IAItC,2BAA8B,KAAnBrb,EAAmB,QAC1BwS,EAAQ5U,OAAOoC,EAAGlC,EAAOE,OAAO,IAAIid,QAAQC,UALV,8BAOtC,OAAOpd,GAEXI,OAVsB,SAUfC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKsd,GACrBtd,EAAQwd,KAAO,GACf,MAAOjd,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQud,MAAQxJ,EAAM1T,OAAOE,EAAQA,EAAOJ,UAC5C,MACJ,KAAK,EACDH,EAAQwd,KAAK7gB,KAAKgY,EAAQtU,OAAOE,EAAQA,EAAOJ,WAChD,MACJ,QACII,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA/BsB,SA+Bb7B,GACL,IAAMa,EAAU,kBAAKsd,GAQrB,GAPAtd,EAAQwd,KAAO,QACM7c,IAAjBxB,EAAOoe,OAAwC,OAAjBpe,EAAOoe,MACrCvd,EAAQud,MAAQxJ,EAAM/S,SAAS7B,EAAOoe,OAGtCvd,EAAQud,WAAQ5c,OAEAA,IAAhBxB,EAAOqe,MAAsC,OAAhBre,EAAOqe,KAAe,wBACnCre,EAAOqe,MAD4B,IACnD,2BAA6B,KAAlBta,EAAkB,QACzBlD,EAAQwd,KAAK7gB,KAAKgY,EAAQ3T,SAASkC,KAFY,+BAKvD,OAAOlD,GAEXkB,OA/CsB,SA+CflB,GACH,IAAMmB,EAAM,GAQZ,YAPkBR,IAAlBX,EAAQud,QAAwBpc,EAAIoc,MAAQvd,EAAQud,MAAQxJ,EAAM7S,OAAOlB,EAAQud,YAAS5c,GACtFX,EAAQwd,KACRrc,EAAIqc,KAAOxd,EAAQwd,KAAKra,KAAI,SAACD,GAAD,OAAQA,EAAIyR,EAAQzT,OAAOgC,QAAKvC,KAG5DQ,EAAIqc,KAAO,GAERrc,GAEXC,YA1DsB,SA0DVjC,GACR,IAAMa,EAAU,kBAAKsd,GAQrB,GAPAtd,EAAQwd,KAAO,QACM7c,IAAjBxB,EAAOoe,OAAwC,OAAjBpe,EAAOoe,MACrCvd,EAAQud,MAAQxJ,EAAM3S,YAAYjC,EAAOoe,OAGzCvd,EAAQud,WAAQ5c,OAEAA,IAAhBxB,EAAOqe,MAAsC,OAAhBre,EAAOqe,KAAe,wBACnCre,EAAOqe,MAD4B,IACnD,2BAA6B,KAAlBta,EAAkB,QACzBlD,EAAQwd,KAAK7gB,KAAKgY,EAAQvT,YAAY8B,KAFS,+BAKvD,OAAOlD,IAGX8H,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAASzF,EAAaqG,GAClB,GAAIA,EAAKC,GAAGpG,OAAOqG,kBACf,MAAM,IAAIhB,EAAWiB,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,qcCjkBEsU,EAAkB,CAAEC,YAAa,EAAGra,SAAU,GAAIC,qBAAsB,EAAGqa,YAAa,GAAI7b,QAAS,IAC9FoT,EAAc,CACvBnV,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,OAf4B,IAAxBiB,EAAQ0d,aACRzd,EAAOE,OAAO,GAAGmC,OAAOtC,EAAQ0d,aAEX,KAArB1d,EAAQqD,UACRpD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQqD,UAEA,IAAjCrD,EAAQsD,sBACRrD,EAAOE,OAAO,IAAImC,OAAOtC,EAAQsD,sBAET,KAAxBtD,EAAQ2d,aACR1d,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ2d,aAEb,KAApB3d,EAAQ8B,SACR7B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ8B,SAE9B7B,GAEXI,OAnBuB,SAmBhBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKyd,GACrB,MAAOld,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ0d,YAAcnb,EAAahC,EAAO+B,UAC1C,MACJ,KAAK,EACDtC,EAAQqD,SAAW9C,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQsD,qBAAuBf,EAAahC,EAAO+B,UACnD,MACJ,KAAK,EACDtC,EAAQ2d,YAAcpd,EAAOH,SAC7B,MACJ,KAAK,EACDJ,EAAQ8B,QAAUvB,EAAOH,SACzB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhDuB,SAgDd7B,GACL,IAAMa,EAAU,kBAAKyd,GA+BrB,YA9B2B9c,IAAvBxB,EAAOue,aAAoD,OAAvBve,EAAOue,YAC3C1d,EAAQ0d,YAAcjb,OAAOtD,EAAOue,aAGpC1d,EAAQ0d,YAAc,OAEF/c,IAApBxB,EAAOkE,UAA8C,OAApBlE,EAAOkE,SACxCrD,EAAQqD,SAAWpC,OAAO9B,EAAOkE,UAGjCrD,EAAQqD,SAAW,QAEa1C,IAAhCxB,EAAOmE,sBAAsE,OAAhCnE,EAAOmE,qBACpDtD,EAAQsD,qBAAuBb,OAAOtD,EAAOmE,sBAG7CtD,EAAQsD,qBAAuB,OAER3C,IAAvBxB,EAAOwe,aAAoD,OAAvBxe,EAAOwe,YAC3C3d,EAAQ2d,YAAc1c,OAAO9B,EAAOwe,aAGpC3d,EAAQ2d,YAAc,QAEHhd,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAUb,OAAO9B,EAAO2C,SAGhC9B,EAAQ8B,QAAU,GAEf9B,GAEXkB,OAlFuB,SAkFhBlB,GACH,IAAMmB,EAAM,GAMZ,YALwBR,IAAxBX,EAAQ0d,cAA8Bvc,EAAIuc,YAAc1d,EAAQ0d,kBAC3C/c,IAArBX,EAAQqD,WAA2BlC,EAAIkC,SAAWrD,EAAQqD,eACzB1C,IAAjCX,EAAQsD,uBAAuCnC,EAAImC,qBAAuBtD,EAAQsD,2BAC1D3C,IAAxBX,EAAQ2d,cAA8Bxc,EAAIwc,YAAc3d,EAAQ2d,kBAC5Chd,IAApBX,EAAQ8B,UAA0BX,EAAIW,QAAU9B,EAAQ8B,SACjDX,GAEXC,YA3FuB,SA2FXjC,GACR,IAAMa,EAAU,kBAAKyd,GA+BrB,YA9B2B9c,IAAvBxB,EAAOue,aAAoD,OAAvBve,EAAOue,YAC3C1d,EAAQ0d,YAAcve,EAAOue,YAG7B1d,EAAQ0d,YAAc,OAEF/c,IAApBxB,EAAOkE,UAA8C,OAApBlE,EAAOkE,SACxCrD,EAAQqD,SAAWlE,EAAOkE,SAG1BrD,EAAQqD,SAAW,QAEa1C,IAAhCxB,EAAOmE,sBAAsE,OAAhCnE,EAAOmE,qBACpDtD,EAAQsD,qBAAuBnE,EAAOmE,qBAGtCtD,EAAQsD,qBAAuB,OAER3C,IAAvBxB,EAAOwe,aAAoD,OAAvBxe,EAAOwe,YAC3C3d,EAAQ2d,YAAcxe,EAAOwe,YAG7B3d,EAAQ2d,YAAc,QAEHhd,IAAnBxB,EAAO2C,SAA4C,OAAnB3C,EAAO2C,QACvC9B,EAAQ8B,QAAU3C,EAAO2C,QAGzB9B,EAAQ8B,QAAU,GAEf9B,IAGX8H,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAWlB,SAASzF,EAAaqG,GAClB,GAAIA,EAAKC,GAAGpG,OAAOqG,kBACf,MAAM,IAAIhB,EAAWiB,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,umBClJEyU,EAAc,CAAE3f,KAAM,GAAIgG,IAAK,GAAIG,MAAO,GAAIyZ,aAAc,GAAI3b,MAAO,EAAG3D,EAAG,GAAId,EAAG,GAAI0E,EAAG,GACpFkS,EAAU,CACnBtU,OADmB,SACZC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAyB5B,MAxBqB,KAAjBiB,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEjB,KAAhB+B,EAAQiE,KACRhE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiE,KAEf,KAAlBjE,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAER,KAAzBpE,EAAQ6d,cACR5d,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ6d,cAEf,IAAlB7d,EAAQkC,OACRjC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkC,OAEnB,KAAdlC,EAAQzB,GACR0B,EAAOE,OAAO,IAAIC,OAAOJ,EAAQzB,GAEnB,KAAdyB,EAAQvC,GACRwC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQvC,GAEnB,IAAduC,EAAQmC,GACRlC,EAAOE,OAAO,IAAImC,OAAOtC,EAAQmC,GAE9BlC,GAEXI,OA5BmB,SA4BZC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK4d,GACrB,MAAOrd,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQiE,IAAM1D,EAAOH,SACrB,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQ6d,aAAetd,EAAOH,SAC9B,MACJ,KAAK,EACDJ,EAAQkC,MAAQK,EAAahC,EAAO+B,UACpC,MACJ,KAAK,EACDtC,EAAQzB,EAAIgC,EAAOH,SACnB,MACJ,KAAK,EACDJ,EAAQvC,EAAI8C,EAAOH,SACnB,MACJ,KAAK,EACDJ,EAAQmC,EAAII,EAAahC,EAAO+B,UAChC,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlEmB,SAkEV7B,GACL,IAAMa,EAAU,kBAAK4d,GAiDrB,YAhDoBjd,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAMhD,OAAO9B,EAAO8E,KAG5BjE,EAAQiE,IAAM,QAEGtD,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEQzD,IAAxBxB,EAAO0e,cAAsD,OAAxB1e,EAAO0e,aAC5C7d,EAAQ6d,aAAe5c,OAAO9B,EAAO0e,cAGrC7d,EAAQ6d,aAAe,QAENld,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQO,OAAOtD,EAAO+C,OAG9BlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAI0C,OAAO9B,EAAOZ,GAG1ByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAIwD,OAAO9B,EAAO1B,GAG1BuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIM,OAAOtD,EAAOgD,GAG1BnC,EAAQmC,EAAI,EAETnC,GAEXkB,OAtHmB,SAsHZlB,GACH,IAAMmB,EAAM,GASZ,YARiBR,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAClC0C,IAAhBX,EAAQiE,MAAsB9C,EAAI8C,IAAMjE,EAAQiE,UAC9BtD,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YAC3BzD,IAAzBX,EAAQ6d,eAA+B1c,EAAI0c,aAAe7d,EAAQ6d,mBAChDld,IAAlBX,EAAQkC,QAAwBf,EAAIe,MAAQlC,EAAQkC,YACtCvB,IAAdX,EAAQzB,IAAoB4C,EAAI5C,EAAIyB,EAAQzB,QAC9BoC,IAAdX,EAAQvC,IAAoB0D,EAAI1D,EAAIuC,EAAQvC,QAC9BkD,IAAdX,EAAQmC,IAAoBhB,EAAIgB,EAAInC,EAAQmC,GACrChB,GAEXC,YAlImB,SAkIPjC,GACR,IAAMa,EAAU,kBAAK4d,GAiDrB,YAhDoBjd,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEA0C,IAAfxB,EAAO8E,KAAoC,OAAf9E,EAAO8E,IACnCjE,EAAQiE,IAAM9E,EAAO8E,IAGrBjE,EAAQiE,IAAM,QAEGtD,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEQzD,IAAxBxB,EAAO0e,cAAsD,OAAxB1e,EAAO0e,aAC5C7d,EAAQ6d,aAAe1e,EAAO0e,aAG9B7d,EAAQ6d,aAAe,QAENld,IAAjBxB,EAAO+C,OAAwC,OAAjB/C,EAAO+C,MACrClC,EAAQkC,MAAQ/C,EAAO+C,MAGvBlC,EAAQkC,MAAQ,OAEHvB,IAAbxB,EAAOZ,GAAgC,OAAbY,EAAOZ,EACjCyB,EAAQzB,EAAIY,EAAOZ,EAGnByB,EAAQzB,EAAI,QAECoC,IAAbxB,EAAO1B,GAAgC,OAAb0B,EAAO1B,EACjCuC,EAAQvC,EAAI0B,EAAO1B,EAGnBuC,EAAQvC,EAAI,QAECkD,IAAbxB,EAAOgD,GAAgC,OAAbhD,EAAOgD,EACjCnC,EAAQmC,EAAIhD,EAAOgD,EAGnBnC,EAAQmC,EAAI,EAETnC,IAGT8d,EAAe,CAAElZ,SAAU,GAAIR,MAAO,GAAI2Z,SAAU,GAAI1Z,OAAQ,GAAIC,OAAQ,GAAI0Z,mBAAmB,EAAOpe,WAAY,IAC/G0U,EAAW,CACpBvU,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAsB5B,MArByB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEf,KAAlB5E,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAEZ,KAArBpE,EAAQ+d,UACR9d,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ+d,UAEd,KAAnB/d,EAAQqE,QACRpE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQqE,QAEd,KAAnBrE,EAAQsE,QACRrE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQsE,SAEH,IAA9BtE,EAAQge,mBACR/d,EAAOE,OAAO,IAAIkC,KAAKrC,EAAQge,mBAER,KAAvBhe,EAAQJ,YACRK,EAAOE,OAAO,IAAIC,OAAOJ,EAAQJ,YAE9BK,GAEXI,OAzBoB,SAyBbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK8d,GACrB,MAAOvd,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQ+d,SAAWxd,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQqE,OAAS9D,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQsE,OAAS/D,EAAOH,SACxB,MACJ,KAAK,EACDJ,EAAQge,kBAAoBzd,EAAO8B,OACnC,MACJ,KAAK,EACDrC,EAAQJ,WAAaW,EAAOH,SAC5B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SA5DoB,SA4DX7B,GACL,IAAMa,EAAU,kBAAK8d,GA2CrB,YA1CwBnd,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEIzD,IAApBxB,EAAO4e,UAA8C,OAApB5e,EAAO4e,SACxC/d,EAAQ+d,SAAW9c,OAAO9B,EAAO4e,UAGjC/d,EAAQ+d,SAAW,QAEDpd,IAAlBxB,EAAOkF,QAA0C,OAAlBlF,EAAOkF,OACtCrE,EAAQqE,OAASpD,OAAO9B,EAAOkF,QAG/BrE,EAAQqE,OAAS,QAEC1D,IAAlBxB,EAAOmF,QAA0C,OAAlBnF,EAAOmF,OACtCtE,EAAQsE,OAASrD,OAAO9B,EAAOmF,QAG/BtE,EAAQsE,OAAS,QAEY3D,IAA7BxB,EAAO6e,mBAAgE,OAA7B7e,EAAO6e,kBACjDhe,EAAQge,kBAAoBxb,QAAQrD,EAAO6e,mBAG3Che,EAAQge,mBAAoB,OAENrd,IAAtBxB,EAAOS,YAAkD,OAAtBT,EAAOS,WAC1CI,EAAQJ,WAAaqB,OAAO9B,EAAOS,YAGnCI,EAAQJ,WAAa,GAElBI,GAEXkB,OA1GoB,SA0GblB,GACH,IAAMmB,EAAM,GAQZ,YAPqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACxCjE,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YAC/BzD,IAArBX,EAAQ+d,WAA2B5c,EAAI4c,SAAW/d,EAAQ+d,eACvCpd,IAAnBX,EAAQqE,SAAyBlD,EAAIkD,OAASrE,EAAQqE,aACnC1D,IAAnBX,EAAQsE,SAAyBnD,EAAImD,OAAStE,EAAQsE,aACxB3D,IAA9BX,EAAQge,oBAAoC7c,EAAI6c,kBAAoBhe,EAAQge,wBACrDrd,IAAvBX,EAAQJ,aAA6BuB,EAAIvB,WAAaI,EAAQJ,YACvDuB,GAEXC,YArHoB,SAqHRjC,GACR,IAAMa,EAAU,kBAAK8d,GA2CrB,YA1CwBnd,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEIzD,IAApBxB,EAAO4e,UAA8C,OAApB5e,EAAO4e,SACxC/d,EAAQ+d,SAAW5e,EAAO4e,SAG1B/d,EAAQ+d,SAAW,QAEDpd,IAAlBxB,EAAOkF,QAA0C,OAAlBlF,EAAOkF,OACtCrE,EAAQqE,OAASlF,EAAOkF,OAGxBrE,EAAQqE,OAAS,QAEC1D,IAAlBxB,EAAOmF,QAA0C,OAAlBnF,EAAOmF,OACtCtE,EAAQsE,OAASnF,EAAOmF,OAGxBtE,EAAQsE,OAAS,QAEY3D,IAA7BxB,EAAO6e,mBAAgE,OAA7B7e,EAAO6e,kBACjDhe,EAAQge,kBAAoB7e,EAAO6e,kBAGnChe,EAAQge,mBAAoB,OAENrd,IAAtBxB,EAAOS,YAAkD,OAAtBT,EAAOS,WAC1CI,EAAQJ,WAAaT,EAAOS,WAG5BI,EAAQJ,WAAa,GAElBI,IAGTie,EAAkB,CAAEhgB,KAAM,GAAIigB,MAAO,GAAI1c,IAAK,IACvC+S,EAAc,CACvBxU,OADuB,SAChBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATqB,KAAjBiB,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAEf,KAAlB+B,EAAQke,OACRje,EAAOE,OAAO,IAAIC,OAAOJ,EAAQke,OAEjB,KAAhBle,EAAQwB,KACRvB,EAAOE,OAAO,IAAIC,OAAOJ,EAAQwB,KAE9BvB,GAEXI,OAbuB,SAahBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKie,GACrB,MAAO1d,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,KAAK,EACDJ,EAAQke,MAAQ3d,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQwB,IAAMjB,EAAOH,SACrB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApCuB,SAoCd7B,GACL,IAAMa,EAAU,kBAAKie,GAmBrB,YAlBoBtd,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,QAEE0C,IAAjBxB,EAAO+e,OAAwC,OAAjB/e,EAAO+e,MACrCle,EAAQke,MAAQjd,OAAO9B,EAAO+e,OAG9Ble,EAAQke,MAAQ,QAEDvd,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMP,OAAO9B,EAAOqC,KAG5BxB,EAAQwB,IAAM,GAEXxB,GAEXkB,OA1DuB,SA0DhBlB,GACH,IAAMmB,EAAM,GAIZ,YAHiBR,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,WAChC0C,IAAlBX,EAAQke,QAAwB/c,EAAI+c,MAAQle,EAAQke,YACpCvd,IAAhBX,EAAQwB,MAAsBL,EAAIK,IAAMxB,EAAQwB,KACzCL,GAEXC,YAjEuB,SAiEXjC,GACR,IAAMa,EAAU,kBAAKie,GAmBrB,YAlBoBtd,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,QAEE0C,IAAjBxB,EAAO+e,OAAwC,OAAjB/e,EAAO+e,MACrCle,EAAQke,MAAQ/e,EAAO+e,MAGvBle,EAAQke,MAAQ,QAEDvd,IAAfxB,EAAOqC,KAAoC,OAAfrC,EAAOqC,IACnCxB,EAAQwB,IAAMrC,EAAOqC,IAGrBxB,EAAQwB,IAAM,GAEXxB,IAGTme,EAAe,CAAEnZ,SAAU,GAAIC,aAAc,GAAIC,SAAU,EAAGvF,QAAS,GAAIiF,SAAU,IAC9E4P,EAAW,CACpBzU,OADoB,SACbC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAgB5B,MAfyB,KAArBiB,EAAQgF,UACR/E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQgF,UAER,KAAzBhF,EAAQiF,cACRhF,EAAOE,OAAO,IAAIC,OAAOJ,EAAQiF,cAEZ,IAArBjF,EAAQkF,UACRjF,EAAOE,OAAO,IAAImC,OAAOtC,EAAQkF,UAEb,KAApBlF,EAAQL,SACRM,EAAOE,OAAO,IAAIC,OAAOJ,EAAQL,SAEZ,KAArBK,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAE9B3E,GAEXI,OAnBoB,SAmBbC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKme,GACrB,MAAO5d,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQgF,SAAWzE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQiF,aAAe1E,EAAOH,SAC9B,MACJ,KAAK,EACDJ,EAAQkF,SAAW3C,EAAahC,EAAO+B,UACvC,MACJ,KAAK,EACDtC,EAAQL,QAAUY,EAAOH,SACzB,MACJ,KAAK,EACDJ,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAhDoB,SAgDX7B,GACL,IAAMa,EAAU,kBAAKme,GA+BrB,YA9BwBxd,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW/D,OAAO9B,EAAO6F,UAGjChF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAehE,OAAO9B,EAAO8F,cAGrCjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAWzC,OAAOtD,EAAO+F,UAGjClF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUsB,OAAO9B,EAAOQ,SAGhCK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,GAEhB5E,GAEXkB,OAlFoB,SAkFblB,GACH,IAAMmB,EAAM,GAMZ,YALqBR,IAArBX,EAAQgF,WAA2B7D,EAAI6D,SAAWhF,EAAQgF,eACjCrE,IAAzBX,EAAQiF,eAA+B9D,EAAI8D,aAAejF,EAAQiF,mBAC7CtE,IAArBX,EAAQkF,WAA2B/D,EAAI+D,SAAWlF,EAAQkF,eACtCvE,IAApBX,EAAQL,UAA0BwB,EAAIxB,QAAUK,EAAQL,cACnCgB,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,UACnDzD,GAEXC,YA3FoB,SA2FRjC,GACR,IAAMa,EAAU,kBAAKme,GA+BrB,YA9BwBxd,IAApBxB,EAAO6F,UAA8C,OAApB7F,EAAO6F,SACxChF,EAAQgF,SAAW7F,EAAO6F,SAG1BhF,EAAQgF,SAAW,QAEKrE,IAAxBxB,EAAO8F,cAAsD,OAAxB9F,EAAO8F,aAC5CjF,EAAQiF,aAAe9F,EAAO8F,aAG9BjF,EAAQiF,aAAe,QAEHtE,IAApBxB,EAAO+F,UAA8C,OAApB/F,EAAO+F,SACxClF,EAAQkF,SAAW/F,EAAO+F,SAG1BlF,EAAQkF,SAAW,OAEAvE,IAAnBxB,EAAOQ,SAA4C,OAAnBR,EAAOQ,QACvCK,EAAQL,QAAUR,EAAOQ,QAGzBK,EAAQL,QAAU,QAEEgB,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,GAEhB5E,IAGToe,EAAa,CAAExZ,SAAU,GAAIR,MAAO,GAAIia,eAAgB,GACjD5J,EAAS,CAClB1U,OADkB,SACXC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATyB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAEf,KAAlB5E,EAAQoE,OACRnE,EAAOE,OAAO,IAAIC,OAAOJ,EAAQoE,OAEN,IAA3BpE,EAAQqe,gBACRpe,EAAOE,OAAO,IAAImC,OAAOtC,EAAQqe,gBAE9Bpe,GAEXI,OAbkB,SAaXC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKoe,GACrB,MAAO7d,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQoE,MAAQ7D,EAAOH,SACvB,MACJ,KAAK,EACDJ,EAAQqe,eAAiB9b,EAAahC,EAAO+B,UAC7C,MACJ,QACI/B,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApCkB,SAoCT7B,GACL,IAAMa,EAAU,kBAAKoe,GAmBrB,YAlBwBzd,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQnD,OAAO9B,EAAOiF,OAG9BpE,EAAQoE,MAAQ,QAEUzD,IAA1BxB,EAAOkf,gBAA0D,OAA1Blf,EAAOkf,eAC9Cre,EAAQqe,eAAiB5b,OAAOtD,EAAOkf,gBAGvCre,EAAQqe,eAAiB,EAEtBre,GAEXkB,OA1DkB,SA0DXlB,GACH,IAAMmB,EAAM,GAIZ,YAHqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACxCjE,IAAlBX,EAAQoE,QAAwBjD,EAAIiD,MAAQpE,EAAQoE,YACzBzD,IAA3BX,EAAQqe,iBAAiCld,EAAIkd,eAAiBre,EAAQqe,gBAC/Dld,GAEXC,YAjEkB,SAiENjC,GACR,IAAMa,EAAU,kBAAKoe,GAmBrB,YAlBwBzd,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEFjE,IAAjBxB,EAAOiF,OAAwC,OAAjBjF,EAAOiF,MACrCpE,EAAQoE,MAAQjF,EAAOiF,MAGvBpE,EAAQoE,MAAQ,QAEUzD,IAA1BxB,EAAOkf,gBAA0D,OAA1Blf,EAAOkf,eAC9Cre,EAAQqe,eAAiBlf,EAAOkf,eAGhCre,EAAQqe,eAAiB,EAEtBre,IAGTse,EAAgB,CAAE1Z,SAAU,IACrB8P,EAAY,CACrB3U,OADqB,SACdC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAU5B,MATyB,KAArBiB,EAAQ4E,UACR3E,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ4E,UAET,IAAxB5E,EAAQ/B,KAAK5B,QACb4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQ/B,MAEP,IAAzB+B,EAAQtB,MAAMrC,QACd4D,EAAOE,OAAO,IAAIsF,MAAMzF,EAAQtB,OAE7BuB,GAEXI,OAbqB,SAadC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKse,GACrB,MAAO/d,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ4E,SAAWrE,EAAOH,SAC1B,MACJ,KAAK,EACDJ,EAAQ/B,KAAOsC,EAAOkF,QACtB,MACJ,KAAK,EACDzF,EAAQtB,MAAQ6B,EAAOkF,QACvB,MACJ,QACIlF,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SApCqB,SAoCZ7B,GACL,IAAMa,EAAU,kBAAKse,GAarB,YAZwB3d,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAW3D,OAAO9B,EAAOyF,UAGjC5E,EAAQ4E,SAAW,QAEHjE,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,OACpC+B,EAAQ/B,KAAOyH,EAAgBvG,EAAOlB,YAErB0C,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,QACrCsB,EAAQtB,MAAQgH,EAAgBvG,EAAOT,QAEpCsB,GAEXkB,OApDqB,SAoDdlB,GACH,IAAMmB,EAAM,GAIZ,YAHqBR,IAArBX,EAAQ4E,WAA2BzD,EAAIyD,SAAW5E,EAAQ4E,eACzCjE,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO0H,OAAiChF,IAAjBX,EAAQ/B,KAAqB+B,EAAQ/B,KAAO,IAAIuC,kBACxFG,IAAlBX,EAAQtB,QAAwByC,EAAIzC,MAAQiH,OAAkChF,IAAlBX,EAAQtB,MAAsBsB,EAAQtB,MAAQ,IAAI8B,aACvGW,GAEXC,YA3DqB,SA2DTjC,GACR,IAAMa,EAAU,kBAAKse,GAmBrB,YAlBwB3d,IAApBxB,EAAOyF,UAA8C,OAApBzF,EAAOyF,SACxC5E,EAAQ4E,SAAWzF,EAAOyF,SAG1B5E,EAAQ4E,SAAW,QAEHjE,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,IAAIuC,gBAEFG,IAAjBxB,EAAOT,OAAwC,OAAjBS,EAAOT,MACrCsB,EAAQtB,MAAQS,EAAOT,MAGvBsB,EAAQtB,MAAQ,IAAI8B,WAEjBR,IAGX8H,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAWZC,EAAOH,EAAWG,MAAS,SAACC,GAAD,OAASJ,EAAWK,OAAOf,KAAKc,EAAK,UAAUE,SAAS,WACzF,SAAS1C,EAAgBwC,GAGrB,IAFA,IAAMG,EAAMJ,EAAKC,GACXI,EAAM,IAAI9H,WAAW6H,EAAIhM,QACtBF,EAAI,EAAGA,EAAIkM,EAAIhM,SAAUF,EAC9BmM,EAAInM,GAAKkM,EAAIE,WAAWpM,GAE5B,OAAOmM,EAEX,IAAME,EAAOV,EAAWU,MAAS,SAACH,GAAD,OAASP,EAAWK,OAAOf,KAAKiB,EAAK,UAAUD,SAAS,WACzF,SAASzC,EAAgB2C,GAErB,IADA,IAAMD,EAAM,GACHlM,EAAI,EAAGA,EAAImM,EAAIG,aAActM,EAClCkM,EAAI1L,KAAKsE,OAAOyH,aAAaJ,EAAInM,KAErC,OAAOqM,EAAKH,EAAIM,KAAK,KAEzB,SAASpG,EAAaqG,GAClB,GAAIA,EAAKC,GAAGpG,OAAOqG,kBACf,MAAM,IAAIhB,EAAWiB,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B,mmBC7lBEoV,G,oBAA6B,CAAEtgB,KAAM,KAC9B4W,EAAyB,CAClC9U,OADkC,SAC3BC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAI5B,MAHqB,KAAjBiB,EAAQ/B,MACRgC,EAAOE,OAAO,IAAIC,OAAOJ,EAAQ/B,MAE9BgC,GAEXI,OAPkC,SAO3BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKue,GACrB,MAAOhe,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQ/B,KAAOsC,EAAOH,SACtB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAxBkC,SAwBzB7B,GACL,IAAMa,EAAU,kBAAKue,GAOrB,YANoB5d,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOgD,OAAO9B,EAAOlB,MAG7B+B,EAAQ/B,KAAO,GAEZ+B,GAEXkB,OAlCkC,SAkC3BlB,GACH,IAAMmB,EAAM,GAEZ,YADiBR,IAAjBX,EAAQ/B,OAAuBkD,EAAIlD,KAAO+B,EAAQ/B,MAC3CkD,GAEXC,YAvCkC,SAuCtBjC,GACR,IAAMa,EAAU,kBAAKue,GAOrB,YANoB5d,IAAhBxB,EAAOlB,MAAsC,OAAhBkB,EAAOlB,KACpC+B,EAAQ/B,KAAOkB,EAAOlB,KAGtB+B,EAAQ/B,KAAO,GAEZ+B,IAGTwe,EAA8B,GACvB1J,EAA0B,CACnC/U,OADmC,SAC5B2E,GAA6B,IAA1BzE,EAA0B,uDAAjBC,YAAOnB,SACtB,OAAOkB,GAEXI,OAJmC,SAI5BC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKwe,GACrB,MAAOje,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,QACIP,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlBmC,SAkB1B0D,GACL,IAAM1E,EAAU,kBAAKwe,GACrB,OAAOxe,GAEXkB,OAtBmC,SAsB5BwD,GACH,IAAMvD,EAAM,GACZ,OAAOA,GAEXC,YA1BmC,SA0BvBsD,GACR,IAAM1E,EAAU,kBAAKwe,GACrB,OAAOxe,IA22BTye,EAAwB,CAAEhb,GAAI,IACvBsR,EAAoB,CAC7BhV,OAD6B,SACtBC,GAAmC,IAA1BC,EAA0B,uDAAjBC,YAAOnB,SAI5B,MAHmB,KAAfiB,EAAQyD,IACRxD,EAAOE,OAAO,IAAIC,OAAOJ,EAAQyD,IAE9BxD,GAEXI,OAP6B,SAOtBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAKye,GACrB,MAAOle,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,KAAK,EACDd,EAAQyD,GAAKlD,EAAOH,SACpB,MACJ,QACIG,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAxB6B,SAwBpB7B,GACL,IAAMa,EAAU,kBAAKye,GAOrB,YANkB9d,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKxC,OAAO9B,EAAOsE,IAG3BzD,EAAQyD,GAAK,GAEVzD,GAEXkB,OAlC6B,SAkCtBlB,GACH,IAAMmB,EAAM,GAEZ,YADeR,IAAfX,EAAQyD,KAAqBtC,EAAIsC,GAAKzD,EAAQyD,IACvCtC,GAEXC,YAvC6B,SAuCjBjC,GACR,IAAMa,EAAU,kBAAKye,GAOrB,YANkB9d,IAAdxB,EAAOsE,IAAkC,OAAdtE,EAAOsE,GAClCzD,EAAQyD,GAAKtE,EAAOsE,GAGpBzD,EAAQyD,GAAK,GAEVzD,IAGT0e,EAAyB,GAClB1J,EAAqB,CAC9BjV,OAD8B,SACvB2E,GAA6B,IAA1BzE,EAA0B,uDAAjBC,YAAOnB,SACtB,OAAOkB,GAEXI,OAJ8B,SAIvBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK0e,GACrB,MAAOne,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,QACIP,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlB8B,SAkBrB0D,GACL,IAAM1E,EAAU,kBAAK0e,GACrB,OAAO1e,GAEXkB,OAtB8B,SAsBvBwD,GACH,IAAMvD,EAAM,GACZ,OAAOA,GAEXC,YA1B8B,SA0BlBsD,GACR,IAAM1E,EAAU,kBAAK0e,GACrB,OAAO1e,IAyKT2e,EAA0B,GACnB1J,EAAsB,CAC/BlV,OAD+B,SACxB2E,GAA6B,IAA1BzE,EAA0B,uDAAjBC,YAAOnB,SACtB,OAAOkB,GAEXI,OAJ+B,SAIxBC,EAAOjE,GACV,IAAMkE,EAASD,aAAiBE,WAAa,IAAIC,YAAOH,GAASA,EAC7DI,OAAiBC,IAAXtE,EAAuBkE,EAAOK,IAAML,EAAOM,IAAMxE,EACrD2D,EAAU,kBAAK2e,GACrB,MAAOpe,EAAOM,IAAMH,EAAK,CACrB,IAAMI,EAAMP,EAAOJ,SACnB,OAAQW,IAAQ,GACZ,QACIP,EAAOQ,SAAe,EAAND,GAChB,OAGZ,OAAOd,GAEXgB,SAlB+B,SAkBtB0D,GACL,IAAM1E,EAAU,kBAAK2e,GACrB,OAAO3e,GAEXkB,OAtB+B,SAsBxBwD,GACH,IAAMvD,EAAM,GACZ,OAAOA,GAEXC,YA1B+B,SA0BnBsD,GACR,IAAM1E,EAAU,kBAAK2e,GACrB,OAAO3e,IAkMX8H,EAAc,WACd,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXxI,OACP,OAAOA,OACX,GAAsB,qBAAXyI,EACP,OAAOA,EACX,KAAM,iCATQ,GAiBdiB,UAAKC,OAASA,IACdD,UAAKC,KAAOA,EACZC,4B","file":"js/app.9d12a36c.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { id: 0 };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(34).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataRef = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    InitiateSwap(request) {\n        const data = MsgInitiateSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'InitiateSwap', data);\n        return promise.then((data) => MsgInitiateSwapResponse.decode(new Reader(data)));\n    }\n    ClaimSwap(request) {\n        const data = MsgClaimSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ClaimSwap', data);\n        return promise.then((data) => MsgClaimSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Voucher } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { Voucher, DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            Voucher: getStructure(Voucher.fromPartial({})),\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseVoucher = { name: '', uri: '', owner: '', didRecipient: '', price: 0, r: '', s: '', v: 0 };\nexport const Voucher = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(18).string(message.uri);\n        }\n        if (message.owner !== '') {\n            writer.uint32(26).string(message.owner);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(34).string(message.didRecipient);\n        }\n        if (message.price !== 0) {\n            writer.uint32(40).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(50).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(58).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(64).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoucher };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.uri = reader.string();\n                    break;\n                case 3:\n                    message.owner = reader.string();\n                    break;\n                case 4:\n                    message.didRecipient = reader.string();\n                    break;\n                case 5:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.r = reader.string();\n                    break;\n                case 7:\n                    message.s = reader.string();\n                    break;\n                case 8:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoucher };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoucher };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(48).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDidWebResponse = {};\nexport const QueryDidWebResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidResponse = {};\nexport const QueryGetDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryDidWebResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryGetDidResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}