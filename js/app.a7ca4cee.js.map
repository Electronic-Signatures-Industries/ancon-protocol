{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgFileMetadataResponse","MsgFileMetadataResponse","hash","bytes","bytesFromBase64","base64FromBytes","baseMsgDidRegistry","creator","MsgDidRegistry","string","String","baseMsgMetadata","description","image","owner","parent","sources","links","verifiedCredentialRef","did","from","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","pubKey","PublicKey","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgFileTx","MsgFileTx","baseMsgMetadataTx","MsgMetadataTx","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryOwners","method","queryResource","cid","queryReadFile","queryRead","queryReadWithPath","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgMetadata","msgDidRegistry","msgFile","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","ReadWithPath","ReadFile","Read","Owners","Resource","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadWithPath","getReadFile","getRead","getOwners","getResource","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadWithPath","options","subscribe","all","QueryReadFile","QueryRead","pagination","nextKey","QueryOwners","QueryResource","sendMsgMetadata","msg","sendMsgDidRegistry","sendMsgFile","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Beta1ProposalStatus","V1Beta1VoteOption","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","V1Order","V1State","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","ElectronicSignaturesIndustriesAnconProtocolAnconprotocol","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkIbcCoreConnectionV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","id","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.a7ca4cee.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgDidRegistry = { creator: '' };\nexport const MsgDidRegistry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDidRegistry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDidRegistry };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDidRegistry };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDidRegistryResponse = {};\nexport const MsgDidRegistryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDidRegistryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDidRegistryResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDidRegistryResponse };\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    DidRegistry(request) {\n        const data = MsgDidRegistry.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'DidRegistry', data);\n        return promise.then((data) => MsgDidRegistryResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'anconprotocol';\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgFileTx = { path: '', content: '', mode: '', time: 0, contentType: '', did: '', from: '' };\nexport const MsgFileTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(18).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(26).string(message.mode);\n        }\n        if (message.time !== 0) {\n            writer.uint32(32).uint64(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(42).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(50).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(58).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.content = reader.string();\n                    break;\n                case 3:\n                    message.mode = reader.string();\n                    break;\n                case 4:\n                    message.time = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.contentType = reader.string();\n                    break;\n                case 6:\n                    message.did = reader.string();\n                    break;\n                case 7:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = Number(object.time);\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileTx };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = 0;\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataTx = {\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadataTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(26).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(42).string(message.parent);\n        }\n        for (const v of message.sources) {\n            writer.uint32(50).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(58).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(66).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(74).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(82).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.image = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.parent = reader.string();\n                    break;\n                case 6:\n                    message.sources.push(reader.string());\n                    break;\n                case 7:\n                    message.links.push(reader.string());\n                    break;\n                case 8:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 9:\n                    message.did = reader.string();\n                    break;\n                case 10:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.sources) {\n            obj.sources = message.sources.map((e) => e);\n        }\n        else {\n            obj.sources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataTx };\n        message.sources = [];\n        message.links = [];\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            for (const e of object.sources) {\n                message.sources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    File(request) {\n        const data = MsgFile.encode(request).finish();\n        const promise = this.rpc.request('anconprotocol.Msg', 'File', data);\n        return promise.then((data) => MsgFileResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwners\n         * @summary Queries a list of owners items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/owners\n         */\n        this.queryOwners = (params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/owners`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/Electronic-Signatures-Industries/anconprotocol/anconprotocol/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryReadFile\n       * @summary additional handler that uses ReadFile\n      Queries a list of resource items.\n       * @request GET:/ancon/file/{cid}/{path}\n       */\n        this.queryReadFile = (cid, path, params = {}) => this.request({\n            path: `/ancon/file/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRead\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}\n         */\n        this.queryRead = (cid, query, params = {}) => this.request({\n            path: `/ancon/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgDidRegistry } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgDidRegistry\", MsgDidRegistry],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgDidRegistry: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgDidRegistry\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadWithPath: {},\n        ReadFile: {},\n        Read: {},\n        Owners: {},\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadFile: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadFile[JSON.stringify(params)] ?? {};\n        },\n        getRead: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Read[JSON.stringify(params)] ?? {};\n        },\n        getOwners: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owners[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadFile({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadFile(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadFile', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadFile', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadFile']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadFile', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRead({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRead(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRead(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Read', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRead', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRead']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRead', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwners({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwners()).data;\n                commit('QUERY', { query: 'Owners', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwners', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwners']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwners', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDidRegistry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDidRegistry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDidRegistry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDidRegistry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDidRegistry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDidRegistry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDidRegistry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDidRegistry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryResource = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/anconprotocol.MsgFile\", MsgFile],\n    [\"/anconprotocol.MsgMetadata\", MsgMetadata],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFile: (data) => ({ typeUrl: \"/anconprotocol.MsgFile\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/anconprotocol.MsgMetadata\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileTx } from \"./module/types/anconprotocol/tx\";\nimport { MsgMetadataTx } from \"./module/types/anconprotocol/tx\";\nexport { MsgFileMetadataResponse, MsgFileTx, MsgMetadataTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Resource: {},\n        _Structure: {\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileTx: getStructure(MsgFileTx.fromPartial({})),\n            MsgMetadataTx: getStructure(MsgMetadataTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, key.path)).data;\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/anconprotocol';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolAnconprotocol, 'anconprotocol'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}