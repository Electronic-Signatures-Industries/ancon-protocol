{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/mintswap/packet.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?b6ad","webpack:///./src/App.vue?dfb6","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?297c","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?f012","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?447e","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?1c8a","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap/module/types/mintswap/tx.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseMsgRegisterRelay","sender","chain","alg","pub","MsgRegisterRelay","encode","message","writer","Writer","uint32","string","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","skipType","fromJSON","String","toJSON","obj","fromPartial","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","longToNumber","Boolean","Number","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgInitiateSwapResponse","relayTo","voucher","MsgInitiateSwapResponse","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","id","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","schema","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","newOwner","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","hash","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","sources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","baseMsgFileResponse","MsgFileResponse","globalThis","self","global","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMintswapPacketData","MintswapPacketData","MintSwapData","fork","ldelim","baseMintSwapData","tokenName","tokenSymbol","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","address","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgInitiateSwap","typeUrl","msgClaimSwap","msgUpdateDid","msgMintNFT","msgRegisterRelay","msgRevokeDid","msgRoyaltyInfo","msgEditNFT","msgBurnNFT","msgMintTrustedContent","msgIssueDenom","msgRevokeAttribute","msgCreateDid","msgGrantDelegate","msgMetadata","msgTransferDenom","msgRevokeDelegate","msgMintSwap","msgChangeOwner","msgTransferNFT","msgMintTrustedResource","msgFile","msgGrantAttribute","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","_Structure","Voucher","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","nextKey","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgInitiateSwap","msg","sendMsgClaimSwap","sendMsgUpdateDid","sendMsgMintNFT","sendMsgRegisterRelay","sendMsgRevokeDid","sendMsgRoyaltyInfo","sendMsgEditNFT","sendMsgBurnNFT","sendMsgMintTrustedContent","sendMsgIssueDenom","sendMsgRevokeAttribute","sendMsgCreateDid","sendMsgGrantDelegate","sendMsgMetadata","sendMsgTransferDenom","sendMsgRevokeDelegate","sendMsgMintSwap","sendMsgChangeOwner","sendMsgTransferNFT","sendMsgMintTrustedResource","sendMsgFile","sendMsgGrantAttribute","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePageRequest","offset","limit","countTotal","reverse","PageRequest","basePageResponse","total","PageResponse","baseBaseNFT","baseDenom","baseIDCollection","tokenIds","baseOwner","idCollections","baseCollection","denom","nfts","baseRoyaltyInfo","updateCount","metadataUri","baseVoucher","didRecipient","baseDIDOwner","didAncon","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse","sourcePort","sourceChannel","timeoutHeight","timeoutTimestamp"],"mappings":"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","file":"js/app.ef7ca78e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgRegisterRelay = { sender: '', chain: '', alg: '', pub: '' };\nexport const MsgRegisterRelay = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.chain !== '') {\n            writer.uint32(18).string(message.chain);\n        }\n        if (message.alg !== '') {\n            writer.uint32(26).string(message.alg);\n        }\n        if (message.pub !== '') {\n            writer.uint32(34).string(message.pub);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelay };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.chain = reader.string();\n                    break;\n                case 3:\n                    message.alg = reader.string();\n                    break;\n                case 4:\n                    message.pub = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = String(object.alg);\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = String(object.pub);\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.chain !== undefined && (obj.chain = message.chain);\n        message.alg !== undefined && (obj.alg = message.alg);\n        message.pub !== undefined && (obj.pub = message.pub);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = object.alg;\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = object.pub;\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelayResponse = { id: '' };\nexport const MsgRegisterRelayResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelayResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = { id: 0 };\nexport const MsgMintSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(34).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataRef = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    sources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        if (message.sources !== '') {\n            writer.uint32(58).string(message.sources);\n        }\n        if (message.links !== '') {\n            writer.uint32(66).string(message.links);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.sources = reader.string();\n                    break;\n                case 8:\n                    message.links = reader.string();\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = String(object.sources);\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = String(object.links);\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        message.sources !== undefined && (obj.sources = message.sources);\n        message.links !== undefined && (obj.links = message.links);\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.sources !== undefined && object.sources !== null) {\n            message.sources = object.sources;\n        }\n        else {\n            message.sources = '';\n        }\n        if (object.links !== undefined && object.links !== null) {\n            message.links = object.links;\n        }\n        else {\n            message.links = '';\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    RegisterRelay(request) {\n        const data = MsgRegisterRelay.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RegisterRelay', data);\n        return promise.then((data) => MsgRegisterRelayResponse.decode(new Reader(data)));\n    }\n    MintSwap(request) {\n        const data = MsgMintSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintSwap', data);\n        return promise.then((data) => MsgMintSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.mintswap';\nconst baseMintswapPacketData = {};\nexport const MintswapPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            MintSwapData.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMintswapPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = MintSwapData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMintswapPacketData };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = MintSwapData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data ? MintSwapData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMintswapPacketData };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = MintSwapData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMintSwapData = { sender: '', metadataRef: '', tokenName: '', tokenSymbol: '', recipient: '', didOwner: '', price: 0 };\nexport const MintSwapData = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.tokenName !== '') {\n            writer.uint32(26).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(34).string(message.tokenSymbol);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMintSwapData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.tokenName = reader.string();\n                    break;\n                case 4:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMintSwapData };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMintSwapData };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgInitiateSwap } from \"./types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgRegisterRelay } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintSwap } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", MsgInitiateSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", MsgClaimSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRegisterRelay\", MsgRegisterRelay],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintSwap\", MsgMintSwap],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgInitiateSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgInitiateSwap\", value: data }),\n        msgClaimSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgClaimSwap\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgRegisterRelay: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRegisterRelay\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgMintSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintSwap\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Voucher } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgInitiateSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileResponse } from \"./module/types/anconprotocol/tx\";\nexport { Voucher, DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgInitiateSwapResponse, MsgClaimSwapResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse, MsgFileResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            Voucher: getStructure(Voucher.fromPartial({})),\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgInitiateSwapResponse: getStructure(MsgInitiateSwapResponse.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileResponse: getStructure(MsgFileResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgInitiateSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgClaimSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRegisterRelay({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRegisterRelay(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRegisterRelay:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRegisterRelay:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgInitiateSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgInitiateSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgInitiateSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgClaimSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgClaimSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgClaimSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRegisterRelay({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRegisterRelay(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRegisterRelay:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRegisterRelay:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title mintswap/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMintSwap } from \"./types/mintswap/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.mintswap.MsgMintSwap\", MsgMintSwap],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMintSwap: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.mintswap.MsgMintSwap\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { MintswapPacketData } from \"./module/types/mintswap/packet\";\nimport { MintSwapData } from \"./module/types/mintswap/packet\";\nexport { MintswapPacketData, MintSwapData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            MintswapPacketData: getStructure(MintswapPacketData.fromPartial({})),\n            MintSwapData: getStructure(MintSwapData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.mintswap initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgMintSwap({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMintSwap({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintSwap(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintSwap:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.mintswap';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolMintswap, 'ElectronicSignaturesIndustries.anconprotocol.mintswap'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseVoucher = { tokenName: '', tokenSymbol: '', uri: '', owner: '', didRecipient: '', price: 0, r: '', s: '', v: 0 };\nexport const Voucher = {\n    encode(message, writer = Writer.create()) {\n        if (message.tokenName !== '') {\n            writer.uint32(10).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(18).string(message.tokenSymbol);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(42).string(message.didRecipient);\n        }\n        if (message.price !== 0) {\n            writer.uint32(48).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(58).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(66).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(72).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoucher };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tokenName = reader.string();\n                    break;\n                case 2:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.didRecipient = reader.string();\n                    break;\n                case 6:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.r = reader.string();\n                    break;\n                case 8:\n                    message.s = reader.string();\n                    break;\n                case 9:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(48).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDidWebResponse = {};\nexport const QueryDidWebResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidResponse = {};\nexport const QueryGetDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryDidWebResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryGetDidResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.mintswap';\nconst baseMsgMintSwap = {\n    sourcePort: '',\n    sourceChannel: '',\n    metadataRef: '',\n    sender: '',\n    receiver: '',\n    tokenName: '',\n    tokenSymbol: '',\n    didOwner: '',\n    price: 0,\n    timeoutHeight: 0,\n    timeoutTimestamp: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.tokenName !== '') {\n            writer.uint32(50).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(58).string(message.tokenSymbol);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(66).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(72).uint64(message.price);\n        }\n        if (message.timeoutHeight !== 0) {\n            writer.uint32(80).uint64(message.timeoutHeight);\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(88).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.tokenName = reader.string();\n                    break;\n                case 7:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 8:\n                    message.didOwner = reader.string();\n                    break;\n                case 9:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 10:\n                    message.timeoutHeight = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Number(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = 0;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = object.timeoutHeight;\n        }\n        else {\n            message.timeoutHeight = 0;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = {};\nexport const MsgMintSwapResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintSwapResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintSwapResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    MintSwap(request) {\n        const data = MsgMintSwap.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.mintswap.Msg', 'MintSwap', data);\n        return promise.then((data) => MsgMintSwapResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}