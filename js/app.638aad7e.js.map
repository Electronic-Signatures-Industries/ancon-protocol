{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/evm.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?cc14","webpack:///./src/App.vue?8ecf","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/rest.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/genesis.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?5e87","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?4306","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?eaa4","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?b519","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/query.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/tx.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/royalty.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgUpdateMetadataOwnership","hash","previousOwner","newOwner","currentChainId","recipientChainId","sender","MsgUpdateMetadataOwnership","string","String","baseMsgRegisterRelay","chain","alg","pub","MsgRegisterRelay","baseMsgRegisterRelayResponse","id","MsgRegisterRelayResponse","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","Boolean","baseMsgSendCrossMintTrusted","metaTransaction","destinationDomain","MsgSendCrossMintTrusted","baseMsgSendCrossMintTrustedResponse","MsgSendCrossMintTrustedResponse","baseMsgMintSwapResponse","MsgMintSwapResponse","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgInitiateSwapResponse","relayTo","voucher","MsgInitiateSwapResponse","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgRoyaltyInfoResponse","MsgRoyaltyInfoResponse","baseMsgIssueDenom","schema","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","additionalSources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","baseMsgFileResponse","MsgFileResponse","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseAny","typeUrl","Any","baseDuration","Duration","baseEquivocation","height","power","consensusAddress","Equivocation","toTimestamp","fork","ldelim","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","basePageRequest","offset","limit","countTotal","reverse","PageRequest","basePageResponse","total","PageResponse","nextKey","baseParams","evmDenom","enableCreate","enableCall","extraEips","Params","chainConfig","ChainConfig","end2","baseChainConfig","homesteadBlock","daoForkBlock","daoForkSupport","eip150Block","eip150Hash","eip155Block","eip158Block","byzantiumBlock","constantinopleBlock","petersburgBlock","istanbulBlock","muirGlacierBlock","berlinBlock","catalystBlock","londonBlock","baseState","State","baseTransactionLogs","TransactionLogs","logs","Log","baseLog","address","topics","blockNumber","txHash","txIndex","blockHash","index","removed","baseTxResult","contractAddress","reverted","gasUsed","TxResult","bloom","txLogs","ret","baseAccessTuple","storageKeys","AccessTuple","baseTraceConfig","tracer","timeout","reexec","disableMemory","disableStack","disableStorage","disableReturnData","debug","TraceConfig","overrides","baseFungibleTokenPacketData","denom","FungibleTokenPacketData","baseDenomTrace","baseDenom","DenomTrace","sendEnabled","receiveEnabled","baseHeight","revisionNumber","revisionHeight","Height","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","UNRECOGNIZED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","Header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","tokenId","queryReadMetadataProof","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgEditNFT","msgMintNFT","msgGrantDelegate","msgMetadata","msgMintTrustedResource","msgCreateDid","msgGrantAttribute","msgRevokeDid","msgChangeOwner","msgUpdateMetadataOwnership","msgRevokeDelegate","msgMintTrustedContent","msgTransferNFT","msgUpdateDid","msgIssueDenom","msgRevokeAttribute","msgBurnNFT","msgTransferDenom","msgFile","msgRoyaltyInfo","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","ReadRoyaltyInfo","ReadWithPath","ReadMetadataProof","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","_Structure","Voucher","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","RoyaltyInfo","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getReadRoyaltyInfo","getReadWithPath","getReadMetadataProof","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryReadMetadataProof","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgEditNFT","msg","sendMsgMintNFT","sendMsgGrantDelegate","sendMsgMetadata","sendMsgMintTrustedResource","sendMsgCreateDid","sendMsgGrantAttribute","sendMsgRevokeDid","sendMsgChangeOwner","sendMsgUpdateMetadataOwnership","sendMsgRevokeDelegate","sendMsgMintTrustedContent","sendMsgTransferNFT","sendMsgUpdateDid","sendMsgIssueDenom","sendMsgRevokeAttribute","sendMsgBurnNFT","sendMsgTransferDenom","sendMsgFile","sendMsgRoyaltyInfo","queryGrants","MsgExec","MsgRevoke","MsgGrant","msgExec","msgRevoke","msgGrant","baseEventGrant","msgTypeUrl","granter","grantee","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","authorization","expiration","Grants","GenericAuthorization","Grant","getGrants","QueryGrants","sendMsgExec","sendMsgRevoke","sendMsgGrant","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawDelegatorReward","msgSetWithdrawAddress","msgWithdrawValidatorCommission","msgFundCommunityPool","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","sendMsgWithdrawValidatorCommission","sendMsgFundCommunityPool","queryAllEvidence","queryEvidence","evidenceHash","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgGrantAllowance","msgRevokeAllowance","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","period","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","baseGrant","V1Beta1ProposalStatus","V1Beta1VoteOption","Allowance","Allowances","getAllowance","getAllowances","QueryAllowance","QueryAllowances","sendMsgGrantAllowance","sendMsgRevokeAllowance","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVoteWeighted","MsgVote","MsgSubmitProposal","MsgDeposit","msgVoteWeighted","msgVote","msgSubmitProposal","msgDeposit","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","WeightedVoteOption","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVoteWeighted","sendMsgVote","sendMsgSubmitProposal","sendMsgDeposit","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","AuthorizationType","msgCreateValidator","msgBeginRedelegate","msgEditValidator","msgDelegate","msgUndelegate","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgCreateValidator","sendMsgBeginRedelegate","sendMsgEditValidator","sendMsgDelegate","sendMsgUndelegate","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTraces","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryAccount","queryCode","queryCosmosAccount","queryEstimateGas","queryEthCall","queryStorage","queryTraceTx","queryValidatorAccount","MsgEthereumTx","msgEthereumTx","baseGenesisAccount","code","GenesisAccount","storage","Account","CosmosAccount","ValidatorAccount","Storage","Code","EthCall","EstimateGas","TraceTx","QueryTxLogsRequest","QueryTxLogsResponse","QueryStaticCallResponse","LegacyTx","AccessListTx","DynamicFeeTx","ExtensionOptionsEthereumTx","getAccount","getCosmosAccount","getValidatorAccount","getStorage","getCode","getEthCall","getEstimateGas","getTraceTx","QueryAccount","QueryCosmosAccount","QueryValidatorAccount","QueryStorage","QueryCode","QueryEthCall","QueryEstimateGas","QueryTraceTx","sendMsgEthereumTx","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","load","CosmosCosmosSdkCosmosAuthzV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","TharsisEthermintEthermintEvmV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseQueryTxLogsRequest","baseQueryTxLogsResponse","baseQueryStaticCallResponse","baseMsgTransfer","sourcePort","sourceChannel","timeoutTimestamp","token","timeoutHeight","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","DecCoin","baseValidatorCurrentRewards","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseBaseNFT","baseIDCollection","tokenIds","baseOwner","idCollections","baseCollection","nfts","baseMsgEthereumTx","size","double","baseLegacyTx","nonce","gasPrice","to","baseAccessListTx","chainId","accesses","baseDynamicFeeTx","gasTipCap","gasFeeCap","baseExtensionOptionsEthereumTx","baseMsgEthereumTxResponse","vmError","MsgEthereumTxResponse","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseRoyaltyInfo","updateCount","metadataUri","baseMsgCreateVestingAccount","delayed","baseDecCoin","baseMsgGrant","grant","baseMsgExec","baseMsgRevoke","baseBaseAccount","accountNumber","sequence","pubKey","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseVoucher","tokenName","tokenSymbol","didRecipient","baseDIDOwner","didAncon","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse","baseConsensus","block","Consensus","baseLastValidatorPower","basePlan","info","Plan","basePublicKey","PublicKey","ed25519","secp256k1","baseValidatorSet","totalVotingPower","ValidatorSet","validators","proposer","votingPower","proposerPriority","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","baseGenericAuthorization","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgVoteWeighted","baseMsgDeposit"],"mappings":"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","file":"js/app.638aad7e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgUpdateMetadataOwnership = { hash: '', previousOwner: '', newOwner: '', currentChainId: '', recipientChainId: '', sender: '' };\nexport const MsgUpdateMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.previousOwner !== '') {\n            writer.uint32(18).string(message.previousOwner);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(34).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(42).string(message.recipientChainId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.previousOwner = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                case 4:\n                    message.currentChainId = reader.string();\n                    break;\n                case 5:\n                    message.recipientChainId = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = String(object.previousOwner);\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.previousOwner !== undefined && (obj.previousOwner = message.previousOwner);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = object.previousOwner;\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateMetadataOwnershipResponse = { cid: '' };\nexport const MsgUpdateMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelay = { sender: '', chain: '', alg: '', pub: '' };\nexport const MsgRegisterRelay = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.chain !== '') {\n            writer.uint32(18).string(message.chain);\n        }\n        if (message.alg !== '') {\n            writer.uint32(26).string(message.alg);\n        }\n        if (message.pub !== '') {\n            writer.uint32(34).string(message.pub);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelay };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.chain = reader.string();\n                    break;\n                case 3:\n                    message.alg = reader.string();\n                    break;\n                case 4:\n                    message.pub = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = String(object.alg);\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = String(object.pub);\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.chain !== undefined && (obj.chain = message.chain);\n        message.alg !== undefined && (obj.alg = message.alg);\n        message.pub !== undefined && (obj.pub = message.pub);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = object.alg;\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = object.pub;\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelayResponse = { id: '' };\nexport const MsgRegisterRelayResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelayResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrusted = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    metaTransaction: '',\n    destinationDomain: 0\n};\nexport const MsgSendCrossMintTrusted = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.metaTransaction !== '') {\n            writer.uint32(74).string(message.metaTransaction);\n        }\n        if (message.destinationDomain !== 0) {\n            writer.uint32(80).uint64(message.destinationDomain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrusted };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.metaTransaction = reader.string();\n                    break;\n                case 10:\n                    message.destinationDomain = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = String(object.metaTransaction);\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = Number(object.destinationDomain);\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.metaTransaction !== undefined && (obj.metaTransaction = message.metaTransaction);\n        message.destinationDomain !== undefined && (obj.destinationDomain = message.destinationDomain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = object.metaTransaction;\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = object.destinationDomain;\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrustedResponse = { id: 0 };\nexport const MsgSendCrossMintTrustedResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = { id: 0 };\nexport const MsgMintSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(34).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataRef = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    additionalSources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        for (const v of message.additionalSources) {\n            writer.uint32(58).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(66).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.additionalSources.push(reader.string());\n                    break;\n                case 8:\n                    message.links.push(reader.string());\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.additionalSources) {\n            obj.additionalSources = message.additionalSources.map((e) => e);\n        }\n        else {\n            obj.additionalSources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    UpdateMetadataOwnership(request) {\n        const data = MsgUpdateMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateMetadataOwnership', data);\n        return promise.then((data) => MsgUpdateMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseParams = { evmDenom: '', enableCreate: false, enableCall: false, extraEips: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.evmDenom !== '') {\n            writer.uint32(10).string(message.evmDenom);\n        }\n        if (message.enableCreate === true) {\n            writer.uint32(16).bool(message.enableCreate);\n        }\n        if (message.enableCall === true) {\n            writer.uint32(24).bool(message.enableCall);\n        }\n        writer.uint32(34).fork();\n        for (const v of message.extraEips) {\n            writer.int64(v);\n        }\n        writer.ldelim();\n        if (message.chainConfig !== undefined) {\n            ChainConfig.encode(message.chainConfig, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.extraEips = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.evmDenom = reader.string();\n                    break;\n                case 2:\n                    message.enableCreate = reader.bool();\n                    break;\n                case 3:\n                    message.enableCall = reader.bool();\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.extraEips.push(longToNumber(reader.int64()));\n                        }\n                    }\n                    else {\n                        message.extraEips.push(longToNumber(reader.int64()));\n                    }\n                    break;\n                case 5:\n                    message.chainConfig = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = String(object.evmDenom);\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = Boolean(object.enableCreate);\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = Boolean(object.enableCall);\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(Number(e));\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromJSON(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.evmDenom !== undefined && (obj.evmDenom = message.evmDenom);\n        message.enableCreate !== undefined && (obj.enableCreate = message.enableCreate);\n        message.enableCall !== undefined && (obj.enableCall = message.enableCall);\n        if (message.extraEips) {\n            obj.extraEips = message.extraEips.map((e) => e);\n        }\n        else {\n            obj.extraEips = [];\n        }\n        message.chainConfig !== undefined && (obj.chainConfig = message.chainConfig ? ChainConfig.toJSON(message.chainConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = object.evmDenom;\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = object.enableCreate;\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = object.enableCall;\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(e);\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromPartial(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseChainConfig = {\n    homesteadBlock: '',\n    daoForkBlock: '',\n    daoForkSupport: false,\n    eip150Block: '',\n    eip150Hash: '',\n    eip155Block: '',\n    eip158Block: '',\n    byzantiumBlock: '',\n    constantinopleBlock: '',\n    petersburgBlock: '',\n    istanbulBlock: '',\n    muirGlacierBlock: '',\n    berlinBlock: '',\n    catalystBlock: '',\n    londonBlock: ''\n};\nexport const ChainConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.homesteadBlock !== '') {\n            writer.uint32(10).string(message.homesteadBlock);\n        }\n        if (message.daoForkBlock !== '') {\n            writer.uint32(18).string(message.daoForkBlock);\n        }\n        if (message.daoForkSupport === true) {\n            writer.uint32(24).bool(message.daoForkSupport);\n        }\n        if (message.eip150Block !== '') {\n            writer.uint32(34).string(message.eip150Block);\n        }\n        if (message.eip150Hash !== '') {\n            writer.uint32(42).string(message.eip150Hash);\n        }\n        if (message.eip155Block !== '') {\n            writer.uint32(50).string(message.eip155Block);\n        }\n        if (message.eip158Block !== '') {\n            writer.uint32(58).string(message.eip158Block);\n        }\n        if (message.byzantiumBlock !== '') {\n            writer.uint32(66).string(message.byzantiumBlock);\n        }\n        if (message.constantinopleBlock !== '') {\n            writer.uint32(74).string(message.constantinopleBlock);\n        }\n        if (message.petersburgBlock !== '') {\n            writer.uint32(82).string(message.petersburgBlock);\n        }\n        if (message.istanbulBlock !== '') {\n            writer.uint32(90).string(message.istanbulBlock);\n        }\n        if (message.muirGlacierBlock !== '') {\n            writer.uint32(98).string(message.muirGlacierBlock);\n        }\n        if (message.berlinBlock !== '') {\n            writer.uint32(106).string(message.berlinBlock);\n        }\n        if (message.catalystBlock !== '') {\n            writer.uint32(130).string(message.catalystBlock);\n        }\n        if (message.londonBlock !== '') {\n            writer.uint32(138).string(message.londonBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChainConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.homesteadBlock = reader.string();\n                    break;\n                case 2:\n                    message.daoForkBlock = reader.string();\n                    break;\n                case 3:\n                    message.daoForkSupport = reader.bool();\n                    break;\n                case 4:\n                    message.eip150Block = reader.string();\n                    break;\n                case 5:\n                    message.eip150Hash = reader.string();\n                    break;\n                case 6:\n                    message.eip155Block = reader.string();\n                    break;\n                case 7:\n                    message.eip158Block = reader.string();\n                    break;\n                case 8:\n                    message.byzantiumBlock = reader.string();\n                    break;\n                case 9:\n                    message.constantinopleBlock = reader.string();\n                    break;\n                case 10:\n                    message.petersburgBlock = reader.string();\n                    break;\n                case 11:\n                    message.istanbulBlock = reader.string();\n                    break;\n                case 12:\n                    message.muirGlacierBlock = reader.string();\n                    break;\n                case 13:\n                    message.berlinBlock = reader.string();\n                    break;\n                case 16:\n                    message.catalystBlock = reader.string();\n                    break;\n                case 17:\n                    message.londonBlock = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = String(object.homesteadBlock);\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = String(object.daoForkBlock);\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = Boolean(object.daoForkSupport);\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = String(object.eip150Block);\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = String(object.eip150Hash);\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = String(object.eip155Block);\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = String(object.eip158Block);\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = String(object.byzantiumBlock);\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = String(object.constantinopleBlock);\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = String(object.petersburgBlock);\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = String(object.istanbulBlock);\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = String(object.muirGlacierBlock);\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = String(object.berlinBlock);\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.catalystBlock !== undefined && object.catalystBlock !== null) {\n            message.catalystBlock = String(object.catalystBlock);\n        }\n        else {\n            message.catalystBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = String(object.londonBlock);\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.homesteadBlock !== undefined && (obj.homesteadBlock = message.homesteadBlock);\n        message.daoForkBlock !== undefined && (obj.daoForkBlock = message.daoForkBlock);\n        message.daoForkSupport !== undefined && (obj.daoForkSupport = message.daoForkSupport);\n        message.eip150Block !== undefined && (obj.eip150Block = message.eip150Block);\n        message.eip150Hash !== undefined && (obj.eip150Hash = message.eip150Hash);\n        message.eip155Block !== undefined && (obj.eip155Block = message.eip155Block);\n        message.eip158Block !== undefined && (obj.eip158Block = message.eip158Block);\n        message.byzantiumBlock !== undefined && (obj.byzantiumBlock = message.byzantiumBlock);\n        message.constantinopleBlock !== undefined && (obj.constantinopleBlock = message.constantinopleBlock);\n        message.petersburgBlock !== undefined && (obj.petersburgBlock = message.petersburgBlock);\n        message.istanbulBlock !== undefined && (obj.istanbulBlock = message.istanbulBlock);\n        message.muirGlacierBlock !== undefined && (obj.muirGlacierBlock = message.muirGlacierBlock);\n        message.berlinBlock !== undefined && (obj.berlinBlock = message.berlinBlock);\n        message.catalystBlock !== undefined && (obj.catalystBlock = message.catalystBlock);\n        message.londonBlock !== undefined && (obj.londonBlock = message.londonBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = object.homesteadBlock;\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = object.daoForkBlock;\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = object.daoForkSupport;\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = object.eip150Block;\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = object.eip150Hash;\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = object.eip155Block;\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = object.eip158Block;\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = object.byzantiumBlock;\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = object.constantinopleBlock;\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = object.petersburgBlock;\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = object.istanbulBlock;\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = object.muirGlacierBlock;\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = object.berlinBlock;\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.catalystBlock !== undefined && object.catalystBlock !== null) {\n            message.catalystBlock = object.catalystBlock;\n        }\n        else {\n            message.catalystBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = object.londonBlock;\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    }\n};\nconst baseState = { key: '', value: '' };\nexport const State = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseTransactionLogs = { hash: '' };\nexport const TransactionLogs = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseLog = { address: '', topics: '', blockNumber: 0, txHash: '', txIndex: 0, blockHash: '', index: 0, removed: false };\nexport const Log = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.topics) {\n            writer.uint32(18).string(v);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        if (message.blockNumber !== 0) {\n            writer.uint32(32).uint64(message.blockNumber);\n        }\n        if (message.txHash !== '') {\n            writer.uint32(42).string(message.txHash);\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(48).uint64(message.txIndex);\n        }\n        if (message.blockHash !== '') {\n            writer.uint32(58).string(message.blockHash);\n        }\n        if (message.index !== 0) {\n            writer.uint32(64).uint64(message.index);\n        }\n        if (message.removed === true) {\n            writer.uint32(72).bool(message.removed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLog };\n        message.topics = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.topics.push(reader.string());\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                case 4:\n                    message.blockNumber = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.txHash = reader.string();\n                    break;\n                case 6:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.blockHash = reader.string();\n                    break;\n                case 8:\n                    message.index = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.removed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(String(e));\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = Number(object.blockNumber);\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = String(object.txHash);\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = String(object.blockHash);\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = Boolean(object.removed);\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.topics) {\n            obj.topics = message.topics.map((e) => e);\n        }\n        else {\n            obj.topics = [];\n        }\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.blockNumber !== undefined && (obj.blockNumber = message.blockNumber);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.blockHash !== undefined && (obj.blockHash = message.blockHash);\n        message.index !== undefined && (obj.index = message.index);\n        message.removed !== undefined && (obj.removed = message.removed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(e);\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = object.blockNumber;\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = object.txHash;\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = object.blockHash;\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = object.removed;\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { contractAddress: '', reverted: false, gasUsed: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.contractAddress !== '') {\n            writer.uint32(10).string(message.contractAddress);\n        }\n        if (message.bloom.length !== 0) {\n            writer.uint32(18).bytes(message.bloom);\n        }\n        if (message.txLogs !== undefined) {\n            TransactionLogs.encode(message.txLogs, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(34).bytes(message.ret);\n        }\n        if (message.reverted === true) {\n            writer.uint32(40).bool(message.reverted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contractAddress = reader.string();\n                    break;\n                case 2:\n                    message.bloom = reader.bytes();\n                    break;\n                case 3:\n                    message.txLogs = TransactionLogs.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ret = reader.bytes();\n                    break;\n                case 5:\n                    message.reverted = reader.bool();\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = String(object.contractAddress);\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = bytesFromBase64(object.bloom);\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromJSON(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = Boolean(object.reverted);\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.contractAddress !== undefined && (obj.contractAddress = message.contractAddress);\n        message.bloom !== undefined && (obj.bloom = base64FromBytes(message.bloom !== undefined ? message.bloom : new Uint8Array()));\n        message.txLogs !== undefined && (obj.txLogs = message.txLogs ? TransactionLogs.toJSON(message.txLogs) : undefined);\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.reverted !== undefined && (obj.reverted = message.reverted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = object.contractAddress;\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = object.bloom;\n        }\n        else {\n            message.bloom = new Uint8Array();\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromPartial(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = object.reverted;\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseAccessTuple = { address: '', storageKeys: '' };\nexport const AccessTuple = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.storageKeys) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.storageKeys.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.storageKeys) {\n            obj.storageKeys = message.storageKeys.map((e) => e);\n        }\n        else {\n            obj.storageKeys = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseTraceConfig = {\n    tracer: '',\n    timeout: '',\n    reexec: 0,\n    disableMemory: false,\n    disableStack: false,\n    disableStorage: false,\n    disableReturnData: false,\n    debug: false,\n    limit: 0\n};\nexport const TraceConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.tracer !== '') {\n            writer.uint32(10).string(message.tracer);\n        }\n        if (message.timeout !== '') {\n            writer.uint32(18).string(message.timeout);\n        }\n        if (message.reexec !== 0) {\n            writer.uint32(24).uint64(message.reexec);\n        }\n        if (message.disableMemory === true) {\n            writer.uint32(32).bool(message.disableMemory);\n        }\n        if (message.disableStack === true) {\n            writer.uint32(40).bool(message.disableStack);\n        }\n        if (message.disableStorage === true) {\n            writer.uint32(48).bool(message.disableStorage);\n        }\n        if (message.disableReturnData === true) {\n            writer.uint32(56).bool(message.disableReturnData);\n        }\n        if (message.debug === true) {\n            writer.uint32(64).bool(message.debug);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(72).int32(message.limit);\n        }\n        if (message.overrides !== undefined) {\n            ChainConfig.encode(message.overrides, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTraceConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tracer = reader.string();\n                    break;\n                case 2:\n                    message.timeout = reader.string();\n                    break;\n                case 3:\n                    message.reexec = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.disableMemory = reader.bool();\n                    break;\n                case 5:\n                    message.disableStack = reader.bool();\n                    break;\n                case 6:\n                    message.disableStorage = reader.bool();\n                    break;\n                case 7:\n                    message.disableReturnData = reader.bool();\n                    break;\n                case 8:\n                    message.debug = reader.bool();\n                    break;\n                case 9:\n                    message.limit = reader.int32();\n                    break;\n                case 10:\n                    message.overrides = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = String(object.tracer);\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = String(object.timeout);\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = Number(object.reexec);\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableMemory !== undefined && object.disableMemory !== null) {\n            message.disableMemory = Boolean(object.disableMemory);\n        }\n        else {\n            message.disableMemory = false;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = Boolean(object.disableStack);\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = Boolean(object.disableStorage);\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.disableReturnData !== undefined && object.disableReturnData !== null) {\n            message.disableReturnData = Boolean(object.disableReturnData);\n        }\n        else {\n            message.disableReturnData = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = Boolean(object.debug);\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromJSON(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tracer !== undefined && (obj.tracer = message.tracer);\n        message.timeout !== undefined && (obj.timeout = message.timeout);\n        message.reexec !== undefined && (obj.reexec = message.reexec);\n        message.disableMemory !== undefined && (obj.disableMemory = message.disableMemory);\n        message.disableStack !== undefined && (obj.disableStack = message.disableStack);\n        message.disableStorage !== undefined && (obj.disableStorage = message.disableStorage);\n        message.disableReturnData !== undefined && (obj.disableReturnData = message.disableReturnData);\n        message.debug !== undefined && (obj.debug = message.debug);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.overrides !== undefined && (obj.overrides = message.overrides ? ChainConfig.toJSON(message.overrides) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = object.tracer;\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = object.timeout;\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = object.reexec;\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableMemory !== undefined && object.disableMemory !== null) {\n            message.disableMemory = object.disableMemory;\n        }\n        else {\n            message.disableMemory = false;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = object.disableStack;\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = object.disableStorage;\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.disableReturnData !== undefined && object.disableReturnData !== null) {\n            message.disableReturnData = object.disableReturnData;\n        }\n        else {\n            message.disableReturnData = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = object.debug;\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromPartial(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = { denom: '', amount: 0, sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadMetadataProof\n         * @summary Reads metadata proofs\n         * @request GET:/ancon/proof/{cid}/{path}\n         */\n        this.queryReadMetadataProof = (cid, path, params = {}) => this.request({\n            path: `/ancon/proof/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateMetadataOwnership } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", MsgUpdateMetadataOwnership],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgUpdateMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Voucher } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { RoyaltyInfo } from \"./module/types/anconprotocol/royalty\";\nimport { MsgRegisterRelay } from \"./module/types/anconprotocol/tx\";\nimport { MsgRegisterRelayResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrusted } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrustedResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgRoyaltyInfoResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileResponse } from \"./module/types/anconprotocol/tx\";\nexport { Voucher, DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, RoyaltyInfo, MsgRegisterRelay, MsgRegisterRelayResponse, MsgSendCrossMintTrusted, MsgSendCrossMintTrustedResponse, MsgMintSwapResponse, MsgMintSwap, MsgInitiateSwap, MsgInitiateSwapResponse, MsgClaimSwap, MsgClaimSwapResponse, MsgRoyaltyInfoResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse, MsgFileResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        ReadMetadataProof: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            Voucher: getStructure(Voucher.fromPartial({})),\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            RoyaltyInfo: getStructure(RoyaltyInfo.fromPartial({})),\n            MsgRegisterRelay: getStructure(MsgRegisterRelay.fromPartial({})),\n            MsgRegisterRelayResponse: getStructure(MsgRegisterRelayResponse.fromPartial({})),\n            MsgSendCrossMintTrusted: getStructure(MsgSendCrossMintTrusted.fromPartial({})),\n            MsgSendCrossMintTrustedResponse: getStructure(MsgSendCrossMintTrustedResponse.fromPartial({})),\n            MsgMintSwapResponse: getStructure(MsgMintSwapResponse.fromPartial({})),\n            MsgMintSwap: getStructure(MsgMintSwap.fromPartial({})),\n            MsgInitiateSwap: getStructure(MsgInitiateSwap.fromPartial({})),\n            MsgInitiateSwapResponse: getStructure(MsgInitiateSwapResponse.fromPartial({})),\n            MsgClaimSwap: getStructure(MsgClaimSwap.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgRoyaltyInfoResponse: getStructure(MsgRoyaltyInfoResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileResponse: getStructure(MsgFileResponse.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadMetadataProof: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadMetadataProof[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadMetadataProof({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadMetadataProof(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadMetadataProof', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadMetadataProof', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadMetadataProof']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadMetadataProof', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: data }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: data }),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: data }),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ethermint/evm/v1/evm.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccount\n         * @summary Account queries an Ethereum account.\n         * @request GET:/ethermint/evm/v1/account/{address}\n         */\n        this.queryAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryBalance\n       * @summary Balance queries the balance of a the EVM denomination for a single\n      EthAccount.\n       * @request GET:/ethermint/evm/v1/balances/{address}\n       */\n        this.queryBalance = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/balances/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCode\n         * @summary Code queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/codes/{address}\n         */\n        this.queryCode = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/codes/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCosmosAccount\n         * @summary CosmosAccount queries an Ethereum account's Cosmos Address.\n         * @request GET:/ethermint/evm/v1/cosmos_account/{address}\n         */\n        this.queryCosmosAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/cosmos_account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEstimateGas\n         * @summary EstimateGas implements the `eth_estimateGas` rpc api\n         * @request GET:/ethermint/evm/v1/estimate_gas\n         */\n        this.queryEstimateGas = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/estimate_gas`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEthCall\n         * @summary EthCall implements the `eth_call` rpc api\n         * @request GET:/ethermint/evm/v1/eth_call\n         */\n        this.queryEthCall = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/eth_call`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/evm module.\n         * @request GET:/ethermint/evm/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ethermint/evm/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Storage queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/storage/{address}/{key}\n         */\n        this.queryStorage = (address, key, params = {}) => this.request({\n            path: `/ethermint/evm/v1/storage/${address}/${key}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTraceTx\n         * @summary TraceTx implements the `debug_traceTransaction` rpc api\n         * @request GET:/ethermint/evm/v1/trace_tx\n         */\n        this.queryTraceTx = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/trace_tx`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryValidatorAccount\n       * @summary ValidatorAccount queries an Ethereum account's from a validator consensus\n      Address.\n       * @request GET:/ethermint/evm/v1/validator_account/{consAddress}\n       */\n        this.queryValidatorAccount = (consAddress, params = {}) => this.request({\n            path: `/ethermint/evm/v1/validator_account/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEthereumTx } from \"./types/ethermint/evm/v1/tx\";\nconst types = [\n    [\"/ethermint.evm.v1.MsgEthereumTx\", MsgEthereumTx],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEthereumTx: (data) => ({ typeUrl: \"/ethermint.evm.v1.MsgEthereumTx\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, State } from '../../../ethermint/evm/v1/evm';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.accounts) {\n            GenesisAccount.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(GenesisAccount.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => (e ? GenesisAccount.toJSON(e) : undefined));\n        }\n        else {\n            obj.accounts = [];\n        }\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisAccount = { address: '', code: '' };\nexport const GenesisAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.code !== '') {\n            writer.uint32(18).string(message.code);\n        }\n        for (const v of message.storage) {\n            State.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.code = reader.string();\n                    break;\n                case 3:\n                    message.storage.push(State.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.code !== undefined && (obj.code = message.code);\n        if (message.storage) {\n            obj.storage = message.storage.map((e) => (e ? State.toJSON(e) : undefined));\n        }\n        else {\n            obj.storage = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/ethermint/evm/v1/evm\";\nimport { ChainConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { State } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TransactionLogs } from \"./module/types/ethermint/evm/v1/evm\";\nimport { Log } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TxResult } from \"./module/types/ethermint/evm/v1/evm\";\nimport { AccessTuple } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TraceConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { GenesisAccount } from \"./module/types/ethermint/evm/v1/genesis\";\nimport { QueryTxLogsRequest } from \"./module/types/ethermint/evm/v1/query\";\nimport { QueryTxLogsResponse } from \"./module/types/ethermint/evm/v1/query\";\nimport { QueryStaticCallResponse } from \"./module/types/ethermint/evm/v1/query\";\nimport { LegacyTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { AccessListTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { DynamicFeeTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { ExtensionOptionsEthereumTx } from \"./module/types/ethermint/evm/v1/tx\";\nexport { Params, ChainConfig, State, TransactionLogs, Log, TxResult, AccessTuple, TraceConfig, GenesisAccount, QueryTxLogsRequest, QueryTxLogsResponse, QueryStaticCallResponse, LegacyTx, AccessListTx, DynamicFeeTx, ExtensionOptionsEthereumTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Account: {},\n        CosmosAccount: {},\n        ValidatorAccount: {},\n        Balance: {},\n        Storage: {},\n        Code: {},\n        Params: {},\n        EthCall: {},\n        EstimateGas: {},\n        TraceTx: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ChainConfig: getStructure(ChainConfig.fromPartial({})),\n            State: getStructure(State.fromPartial({})),\n            TransactionLogs: getStructure(TransactionLogs.fromPartial({})),\n            Log: getStructure(Log.fromPartial({})),\n            TxResult: getStructure(TxResult.fromPartial({})),\n            AccessTuple: getStructure(AccessTuple.fromPartial({})),\n            TraceConfig: getStructure(TraceConfig.fromPartial({})),\n            GenesisAccount: getStructure(GenesisAccount.fromPartial({})),\n            QueryTxLogsRequest: getStructure(QueryTxLogsRequest.fromPartial({})),\n            QueryTxLogsResponse: getStructure(QueryTxLogsResponse.fromPartial({})),\n            QueryStaticCallResponse: getStructure(QueryStaticCallResponse.fromPartial({})),\n            LegacyTx: getStructure(LegacyTx.fromPartial({})),\n            AccessListTx: getStructure(AccessListTx.fromPartial({})),\n            DynamicFeeTx: getStructure(DynamicFeeTx.fromPartial({})),\n            ExtensionOptionsEthereumTx: getStructure(ExtensionOptionsEthereumTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Account[JSON.stringify(params)] ?? {};\n        },\n        getCosmosAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CosmosAccount[JSON.stringify(params)] ?? {};\n        },\n        getValidatorAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorAccount[JSON.stringify(params)] ?? {};\n        },\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getCode: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Code[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getEthCall: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EthCall[JSON.stringify(params)] ?? {};\n        },\n        getEstimateGas: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EstimateGas[JSON.stringify(params)] ?? {};\n        },\n        getTraceTx: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TraceTx[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ethermint.evm.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAccount(key.address)).data;\n                commit('QUERY', { query: 'Account', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCosmosAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCosmosAccount(key.address)).data;\n                commit('QUERY', { query: 'CosmosAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCosmosAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCosmosAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCosmosAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorAccount(key.cons_address)).data;\n                commit('QUERY', { query: 'ValidatorAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorage(key.address, key.key)).data;\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCode({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCode(key.address)).data;\n                commit('QUERY', { query: 'Code', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCode', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCode']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCode', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEthCall({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEthCall(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEthCall({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EthCall', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEthCall', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEthCall']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEthCall', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEstimateGas({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEstimateGas(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEstimateGas({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EstimateGas', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEstimateGas', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEstimateGas']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEstimateGas', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTraceTx({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTraceTx(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTraceTx({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TraceTx', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTraceTx', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTraceTx']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTraceTx', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEthereumTx({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEthereumTx({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nimport TharsisEthermintEthermintEvmV1 from './tharsis/ethermint/ethermint.evm.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    TharsisEthermintEthermintEvmV1: load(TharsisEthermintEthermintEvmV1, 'ethermint.evm.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../../../cosmos/base/query/v1beta1/pagination';\nimport { Log, Params, TraceConfig } from '../../../ethermint/evm/v1/evm';\nimport { MsgEthereumTx, MsgEthereumTxResponse } from '../../../ethermint/evm/v1/tx';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseQueryAccountRequest = { address: '' };\nexport const QueryAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryAccountResponse = { balance: '', codeHash: '', nonce: 0 };\nexport const QueryAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        if (message.codeHash !== '') {\n            writer.uint32(18).string(message.codeHash);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(24).uint64(message.nonce);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                case 2:\n                    message.codeHash = reader.string();\n                    break;\n                case 3:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = String(object.codeHash);\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        message.codeHash !== undefined && (obj.codeHash = message.codeHash);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = object.codeHash;\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountRequest = { address: '' };\nexport const QueryCosmosAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountResponse = { cosmosAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryCosmosAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cosmosAddress !== '') {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cosmosAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = String(object.cosmosAddress);\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cosmosAddress !== undefined && (obj.cosmosAddress = message.cosmosAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = object.cosmosAddress;\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountRequest = { consAddress: '' };\nexport const QueryValidatorAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.consAddress !== '') {\n            writer.uint32(10).string(message.consAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = String(object.consAddress);\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consAddress !== undefined && (obj.consAddress = message.consAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = object.consAddress;\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountResponse = { accountAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryValidatorAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.accountAddress !== '') {\n            writer.uint32(10).string(message.accountAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accountAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = String(object.accountAddress);\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = object.accountAddress;\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceRequest = { address: '' };\nexport const QueryBalanceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceResponse = { balance: '' };\nexport const QueryBalanceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageRequest = { address: '', key: '' };\nexport const QueryStorageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.key !== '') {\n            writer.uint32(18).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageResponse = { value: '' };\nexport const QueryStorageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.value !== '') {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeRequest = { address: '' };\nexport const QueryCodeRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeResponse = {};\nexport const QueryCodeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.code.length !== 0) {\n            writer.uint32(10).bytes(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = bytesFromBase64(object.code);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = base64FromBytes(message.code !== undefined ? message.code : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsRequest = { hash: '' };\nexport const QueryTxLogsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsResponse = {};\nexport const QueryTxLogsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryParamsRequest = {};\nexport const QueryParamsRequest = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    }\n};\nconst baseQueryParamsResponse = {};\nexport const QueryParamsResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryStaticCallResponse = {};\nexport const QueryStaticCallResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStaticCallResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStaticCallResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStaticCallResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseEthCallRequest = { gasCap: 0 };\nexport const EthCallRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.args.length !== 0) {\n            writer.uint32(10).bytes(message.args);\n        }\n        if (message.gasCap !== 0) {\n            writer.uint32(16).uint64(message.gasCap);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEthCallRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.args = reader.bytes();\n                    break;\n                case 2:\n                    message.gasCap = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = bytesFromBase64(object.args);\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = Number(object.gasCap);\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.args !== undefined && (obj.args = base64FromBytes(message.args !== undefined ? message.args : new Uint8Array()));\n        message.gasCap !== undefined && (obj.gasCap = message.gasCap);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = object.args;\n        }\n        else {\n            message.args = new Uint8Array();\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = object.gasCap;\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    }\n};\nconst baseEstimateGasResponse = { gas: 0 };\nexport const EstimateGasResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gas !== 0) {\n            writer.uint32(8).uint64(message.gas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEstimateGasResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gas !== undefined && (obj.gas = message.gas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxRequest = { txIndex: 0 };\nexport const QueryTraceTxRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== undefined) {\n            MsgEthereumTx.encode(message.msg, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(16).uint64(message.txIndex);\n        }\n        if (message.traceConfig !== undefined) {\n            TraceConfig.encode(message.traceConfig, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = MsgEthereumTx.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.traceConfig = TraceConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromJSON(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg ? MsgEthereumTx.toJSON(message.msg) : undefined);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.traceConfig !== undefined && (obj.traceConfig = message.traceConfig ? TraceConfig.toJSON(message.traceConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromPartial(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxResponse = {};\nexport const QueryTraceTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Account(request) {\n        const data = QueryAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Account', data);\n        return promise.then((data) => QueryAccountResponse.decode(new Reader(data)));\n    }\n    CosmosAccount(request) {\n        const data = QueryCosmosAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'CosmosAccount', data);\n        return promise.then((data) => QueryCosmosAccountResponse.decode(new Reader(data)));\n    }\n    ValidatorAccount(request) {\n        const data = QueryValidatorAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'ValidatorAccount', data);\n        return promise.then((data) => QueryValidatorAccountResponse.decode(new Reader(data)));\n    }\n    Balance(request) {\n        const data = QueryBalanceRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Balance', data);\n        return promise.then((data) => QueryBalanceResponse.decode(new Reader(data)));\n    }\n    Storage(request) {\n        const data = QueryStorageRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Storage', data);\n        return promise.then((data) => QueryStorageResponse.decode(new Reader(data)));\n    }\n    Code(request) {\n        const data = QueryCodeRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Code', data);\n        return promise.then((data) => QueryCodeResponse.decode(new Reader(data)));\n    }\n    Params(request) {\n        const data = QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Params', data);\n        return promise.then((data) => QueryParamsResponse.decode(new Reader(data)));\n    }\n    EthCall(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EthCall', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n    EstimateGas(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EstimateGas', data);\n        return promise.then((data) => EstimateGasResponse.decode(new Reader(data)));\n    }\n    TraceTx(request) {\n        const data = QueryTraceTxRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'TraceTx', data);\n        return promise.then((data) => QueryTraceTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { AccessTuple, Log } from '../../../ethermint/evm/v1/evm';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseMsgEthereumTx = { size: 0, hash: '', from: '' };\nexport const MsgEthereumTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            Any.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.size !== 0) {\n            writer.uint32(17).double(message.size);\n        }\n        if (message.hash !== '') {\n            writer.uint32(26).string(message.hash);\n        }\n        if (message.from !== '') {\n            writer.uint32(34).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.size = reader.double();\n                    break;\n                case 3:\n                    message.hash = reader.string();\n                    break;\n                case 4:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = Number(object.size);\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data ? Any.toJSON(message.data) : undefined);\n        message.size !== undefined && (obj.size = message.size);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = object.size;\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseLegacyTx = { nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const LegacyTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(18).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(34).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(42).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(58).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(66).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(74).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLegacyTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasPrice = reader.string();\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.to = reader.string();\n                    break;\n                case 5:\n                    message.value = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.v = reader.bytes();\n                    break;\n                case 8:\n                    message.r = reader.bytes();\n                    break;\n                case 9:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAccessListTx = { chainId: '', nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const AccessListTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(26).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(32).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(42).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(50).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(58).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(74).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(82).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(90).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasPrice = reader.string();\n                    break;\n                case 4:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.to = reader.string();\n                    break;\n                case 6:\n                    message.value = reader.string();\n                    break;\n                case 7:\n                    message.data = reader.bytes();\n                    break;\n                case 8:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.v = reader.bytes();\n                    break;\n                case 10:\n                    message.r = reader.bytes();\n                    break;\n                case 11:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseDynamicFeeTx = { chainId: '', nonce: 0, gasTipCap: '', gasFeeCap: '', gas: 0, to: '', value: '' };\nexport const DynamicFeeTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasTipCap !== '') {\n            writer.uint32(26).string(message.gasTipCap);\n        }\n        if (message.gasFeeCap !== '') {\n            writer.uint32(34).string(message.gasFeeCap);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(40).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(50).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(58).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(66).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(82).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(90).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(98).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasTipCap = reader.string();\n                    break;\n                case 4:\n                    message.gasFeeCap = reader.string();\n                    break;\n                case 5:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.to = reader.string();\n                    break;\n                case 7:\n                    message.value = reader.string();\n                    break;\n                case 8:\n                    message.data = reader.bytes();\n                    break;\n                case 9:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.v = reader.bytes();\n                    break;\n                case 11:\n                    message.r = reader.bytes();\n                    break;\n                case 12:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = String(object.gasTipCap);\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = String(object.gasFeeCap);\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasTipCap !== undefined && (obj.gasTipCap = message.gasTipCap);\n        message.gasFeeCap !== undefined && (obj.gasFeeCap = message.gasFeeCap);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = object.gasTipCap;\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = object.gasFeeCap;\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseExtensionOptionsEthereumTx = {};\nexport const ExtensionOptionsEthereumTx = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExtensionOptionsEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    }\n};\nconst baseMsgEthereumTxResponse = { hash: '', vmError: '', gasUsed: 0 };\nexport const MsgEthereumTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(26).bytes(message.ret);\n        }\n        if (message.vmError !== '') {\n            writer.uint32(34).string(message.vmError);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(40).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.ret = reader.bytes();\n                    break;\n                case 4:\n                    message.vmError = reader.string();\n                    break;\n                case 5:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = String(object.vmError);\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.vmError !== undefined && (obj.vmError = message.vmError);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = object.vmError;\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    EthereumTx(request) {\n        const data = MsgEthereumTx.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Msg', 'EthereumTx', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseRoyaltyInfo = { updateCount: 0, receiver: '', royaltyFeePercentage: 0, metadataUri: '', denomId: '' };\nexport const RoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.updateCount !== 0) {\n            writer.uint32(8).uint64(message.updateCount);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(18).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(24).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataUri !== '') {\n            writer.uint32(34).string(message.metadataUri);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(42).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.updateCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.receiver = reader.string();\n                    break;\n                case 3:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.metadataUri = reader.string();\n                    break;\n                case 5:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = Number(object.updateCount);\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = String(object.metadataUri);\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.updateCount !== undefined && (obj.updateCount = message.updateCount);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataUri !== undefined && (obj.metadataUri = message.metadataUri);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRoyaltyInfo };\n        if (object.updateCount !== undefined && object.updateCount !== null) {\n            message.updateCount = object.updateCount;\n        }\n        else {\n            message.updateCount = 0;\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataUri !== undefined && object.metadataUri !== null) {\n            message.metadataUri = object.metadataUri;\n        }\n        else {\n            message.metadataUri = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseVoucher = { tokenName: '', tokenSymbol: '', uri: '', owner: '', didRecipient: '', price: 0, r: '', s: '', v: 0 };\nexport const Voucher = {\n    encode(message, writer = Writer.create()) {\n        if (message.tokenName !== '') {\n            writer.uint32(10).string(message.tokenName);\n        }\n        if (message.tokenSymbol !== '') {\n            writer.uint32(18).string(message.tokenSymbol);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(42).string(message.didRecipient);\n        }\n        if (message.price !== 0) {\n            writer.uint32(48).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(58).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(66).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(72).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoucher };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tokenName = reader.string();\n                    break;\n                case 2:\n                    message.tokenSymbol = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.didRecipient = reader.string();\n                    break;\n                case 6:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.r = reader.string();\n                    break;\n                case 8:\n                    message.s = reader.string();\n                    break;\n                case 9:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = String(object.tokenName);\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = String(object.tokenSymbol);\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tokenName !== undefined && (obj.tokenName = message.tokenName);\n        message.tokenSymbol !== undefined && (obj.tokenSymbol = message.tokenSymbol);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoucher };\n        if (object.tokenName !== undefined && object.tokenName !== null) {\n            message.tokenName = object.tokenName;\n        }\n        else {\n            message.tokenName = '';\n        }\n        if (object.tokenSymbol !== undefined && object.tokenSymbol !== null) {\n            message.tokenSymbol = object.tokenSymbol;\n        }\n        else {\n            message.tokenSymbol = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseDIDOwner = { identity: '', owner: '', didAncon: '', didKey: '', didWeb: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didAncon !== '') {\n            writer.uint32(26).string(message.didAncon);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(34).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(42).string(message.didWeb);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(48).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(58).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didAncon = reader.string();\n                    break;\n                case 4:\n                    message.didKey = reader.string();\n                    break;\n                case 5:\n                    message.didWeb = reader.string();\n                    break;\n                case 6:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 7:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = String(object.didAncon);\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didAncon !== undefined && (obj.didAncon = message.didAncon);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didAncon !== undefined && object.didAncon !== null) {\n            message.didAncon = object.didAncon;\n        }\n        else {\n            message.didAncon = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDidWebResponse = {};\nexport const QueryDidWebResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryDidWebResponse };\n        return message;\n    }\n};\nconst baseQueryProofMetadataRequest = { cid: '', path: '' };\nexport const QueryProofMetadataRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofMetadataRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryProofResponse = { root: '', proof: '' };\nexport const QueryProofResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.root !== '') {\n            writer.uint32(10).string(message.root);\n        }\n        if (message.proof !== '') {\n            writer.uint32(18).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.root = reader.string();\n                    break;\n                case 2:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = String(object.root);\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.root !== undefined && (obj.root = message.root);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = object.root;\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidResponse = {};\nexport const QueryGetDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDidResponse };\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadMetadataProof(request) {\n        const data = QueryProofMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadMetadataProof', data);\n        return promise.then((data) => QueryProofResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryDidWebResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryGetDidResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}